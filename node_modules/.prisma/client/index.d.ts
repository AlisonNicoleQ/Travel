
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Admin
 * 
 */
export type Admin = $Result.DefaultSelection<Prisma.$AdminPayload>
/**
 * Model Cliente
 * 
 */
export type Cliente = $Result.DefaultSelection<Prisma.$ClientePayload>
/**
 * Model Destinos
 * 
 */
export type Destinos = $Result.DefaultSelection<Prisma.$DestinosPayload>
/**
 * Model Eventos
 * 
 */
export type Eventos = $Result.DefaultSelection<Prisma.$EventosPayload>
/**
 * Model Idiomas
 * 
 */
export type Idiomas = $Result.DefaultSelection<Prisma.$IdiomasPayload>
/**
 * Model Itinerario
 * 
 */
export type Itinerario = $Result.DefaultSelection<Prisma.$ItinerarioPayload>
/**
 * Model Pagos
 * 
 */
export type Pagos = $Result.DefaultSelection<Prisma.$PagosPayload>
/**
 * Model RecuperacionContrasena
 * 
 */
export type RecuperacionContrasena = $Result.DefaultSelection<Prisma.$RecuperacionContrasenaPayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model Reservas
 * 
 */
export type Reservas = $Result.DefaultSelection<Prisma.$ReservasPayload>
/**
 * Model Servicios
 * 
 */
export type Servicios = $Result.DefaultSelection<Prisma.$ServiciosPayload>
/**
 * Model Tipo_evento
 * 
 */
export type Tipo_evento = $Result.DefaultSelection<Prisma.$Tipo_eventoPayload>
/**
 * Model Tipo_moneda
 * 
 */
export type Tipo_moneda = $Result.DefaultSelection<Prisma.$Tipo_monedaPayload>
/**
 * Model Tipo_servicio
 * 
 */
export type Tipo_servicio = $Result.DefaultSelection<Prisma.$Tipo_servicioPayload>
/**
 * Model DetalleCarrito
 * 
 */
export type DetalleCarrito = $Result.DefaultSelection<Prisma.$DetalleCarritoPayload>
/**
 * Model HistorialCompra
 * 
 */
export type HistorialCompra = $Result.DefaultSelection<Prisma.$HistorialCompraPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Admins
 * const admins = await prisma.admin.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Admins
   * const admins = await prisma.admin.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.admin`: Exposes CRUD operations for the **Admin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admin.findMany()
    * ```
    */
  get admin(): Prisma.AdminDelegate<ExtArgs>;

  /**
   * `prisma.cliente`: Exposes CRUD operations for the **Cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.ClienteDelegate<ExtArgs>;

  /**
   * `prisma.destinos`: Exposes CRUD operations for the **Destinos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Destinos
    * const destinos = await prisma.destinos.findMany()
    * ```
    */
  get destinos(): Prisma.DestinosDelegate<ExtArgs>;

  /**
   * `prisma.eventos`: Exposes CRUD operations for the **Eventos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Eventos
    * const eventos = await prisma.eventos.findMany()
    * ```
    */
  get eventos(): Prisma.EventosDelegate<ExtArgs>;

  /**
   * `prisma.idiomas`: Exposes CRUD operations for the **Idiomas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Idiomas
    * const idiomas = await prisma.idiomas.findMany()
    * ```
    */
  get idiomas(): Prisma.IdiomasDelegate<ExtArgs>;

  /**
   * `prisma.itinerario`: Exposes CRUD operations for the **Itinerario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Itinerarios
    * const itinerarios = await prisma.itinerario.findMany()
    * ```
    */
  get itinerario(): Prisma.ItinerarioDelegate<ExtArgs>;

  /**
   * `prisma.pagos`: Exposes CRUD operations for the **Pagos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagos
    * const pagos = await prisma.pagos.findMany()
    * ```
    */
  get pagos(): Prisma.PagosDelegate<ExtArgs>;

  /**
   * `prisma.recuperacionContrasena`: Exposes CRUD operations for the **RecuperacionContrasena** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RecuperacionContrasenas
    * const recuperacionContrasenas = await prisma.recuperacionContrasena.findMany()
    * ```
    */
  get recuperacionContrasena(): Prisma.RecuperacionContrasenaDelegate<ExtArgs>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs>;

  /**
   * `prisma.reservas`: Exposes CRUD operations for the **Reservas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservas
    * const reservas = await prisma.reservas.findMany()
    * ```
    */
  get reservas(): Prisma.ReservasDelegate<ExtArgs>;

  /**
   * `prisma.servicios`: Exposes CRUD operations for the **Servicios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Servicios
    * const servicios = await prisma.servicios.findMany()
    * ```
    */
  get servicios(): Prisma.ServiciosDelegate<ExtArgs>;

  /**
   * `prisma.tipo_evento`: Exposes CRUD operations for the **Tipo_evento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_eventos
    * const tipo_eventos = await prisma.tipo_evento.findMany()
    * ```
    */
  get tipo_evento(): Prisma.Tipo_eventoDelegate<ExtArgs>;

  /**
   * `prisma.tipo_moneda`: Exposes CRUD operations for the **Tipo_moneda** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_monedas
    * const tipo_monedas = await prisma.tipo_moneda.findMany()
    * ```
    */
  get tipo_moneda(): Prisma.Tipo_monedaDelegate<ExtArgs>;

  /**
   * `prisma.tipo_servicio`: Exposes CRUD operations for the **Tipo_servicio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_servicios
    * const tipo_servicios = await prisma.tipo_servicio.findMany()
    * ```
    */
  get tipo_servicio(): Prisma.Tipo_servicioDelegate<ExtArgs>;

  /**
   * `prisma.detalleCarrito`: Exposes CRUD operations for the **DetalleCarrito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetalleCarritos
    * const detalleCarritos = await prisma.detalleCarrito.findMany()
    * ```
    */
  get detalleCarrito(): Prisma.DetalleCarritoDelegate<ExtArgs>;

  /**
   * `prisma.historialCompra`: Exposes CRUD operations for the **HistorialCompra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialCompras
    * const historialCompras = await prisma.historialCompra.findMany()
    * ```
    */
  get historialCompra(): Prisma.HistorialCompraDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.11.0
   * Query Engine version: efd2449663b3d73d637ea1fd226bafbcf45b3102
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Admin: 'Admin',
    Cliente: 'Cliente',
    Destinos: 'Destinos',
    Eventos: 'Eventos',
    Idiomas: 'Idiomas',
    Itinerario: 'Itinerario',
    Pagos: 'Pagos',
    RecuperacionContrasena: 'RecuperacionContrasena',
    Review: 'Review',
    Reservas: 'Reservas',
    Servicios: 'Servicios',
    Tipo_evento: 'Tipo_evento',
    Tipo_moneda: 'Tipo_moneda',
    Tipo_servicio: 'Tipo_servicio',
    DetalleCarrito: 'DetalleCarrito',
    HistorialCompra: 'HistorialCompra'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'admin' | 'cliente' | 'destinos' | 'eventos' | 'idiomas' | 'itinerario' | 'pagos' | 'recuperacionContrasena' | 'review' | 'reservas' | 'servicios' | 'tipo_evento' | 'tipo_moneda' | 'tipo_servicio' | 'detalleCarrito' | 'historialCompra'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Admin: {
        payload: Prisma.$AdminPayload<ExtArgs>
        fields: Prisma.AdminFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdminFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdminFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findFirst: {
            args: Prisma.AdminFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdminFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findMany: {
            args: Prisma.AdminFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          create: {
            args: Prisma.AdminCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          createMany: {
            args: Prisma.AdminCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.AdminDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          update: {
            args: Prisma.AdminUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          deleteMany: {
            args: Prisma.AdminDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AdminUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AdminUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          aggregate: {
            args: Prisma.AdminAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAdmin>
          }
          groupBy: {
            args: Prisma.AdminGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AdminGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdminCountArgs<ExtArgs>,
            result: $Utils.Optional<AdminCountAggregateOutputType> | number
          }
        }
      }
      Cliente: {
        payload: Prisma.$ClientePayload<ExtArgs>
        fields: Prisma.ClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findFirst: {
            args: Prisma.ClienteFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findMany: {
            args: Prisma.ClienteFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          create: {
            args: Prisma.ClienteCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          createMany: {
            args: Prisma.ClienteCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ClienteDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          update: {
            args: Prisma.ClienteUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          deleteMany: {
            args: Prisma.ClienteDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ClienteUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.ClienteGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteCountArgs<ExtArgs>,
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      Destinos: {
        payload: Prisma.$DestinosPayload<ExtArgs>
        fields: Prisma.DestinosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DestinosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DestinosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DestinosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DestinosPayload>
          }
          findFirst: {
            args: Prisma.DestinosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DestinosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DestinosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DestinosPayload>
          }
          findMany: {
            args: Prisma.DestinosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DestinosPayload>[]
          }
          create: {
            args: Prisma.DestinosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DestinosPayload>
          }
          createMany: {
            args: Prisma.DestinosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.DestinosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DestinosPayload>
          }
          update: {
            args: Prisma.DestinosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DestinosPayload>
          }
          deleteMany: {
            args: Prisma.DestinosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.DestinosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.DestinosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DestinosPayload>
          }
          aggregate: {
            args: Prisma.DestinosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDestinos>
          }
          groupBy: {
            args: Prisma.DestinosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DestinosGroupByOutputType>[]
          }
          count: {
            args: Prisma.DestinosCountArgs<ExtArgs>,
            result: $Utils.Optional<DestinosCountAggregateOutputType> | number
          }
        }
      }
      Eventos: {
        payload: Prisma.$EventosPayload<ExtArgs>
        fields: Prisma.EventosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EventosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EventosPayload>
          }
          findFirst: {
            args: Prisma.EventosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EventosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EventosPayload>
          }
          findMany: {
            args: Prisma.EventosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EventosPayload>[]
          }
          create: {
            args: Prisma.EventosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EventosPayload>
          }
          createMany: {
            args: Prisma.EventosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.EventosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EventosPayload>
          }
          update: {
            args: Prisma.EventosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EventosPayload>
          }
          deleteMany: {
            args: Prisma.EventosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.EventosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.EventosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$EventosPayload>
          }
          aggregate: {
            args: Prisma.EventosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEventos>
          }
          groupBy: {
            args: Prisma.EventosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<EventosGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventosCountArgs<ExtArgs>,
            result: $Utils.Optional<EventosCountAggregateOutputType> | number
          }
        }
      }
      Idiomas: {
        payload: Prisma.$IdiomasPayload<ExtArgs>
        fields: Prisma.IdiomasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IdiomasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdiomasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IdiomasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdiomasPayload>
          }
          findFirst: {
            args: Prisma.IdiomasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdiomasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IdiomasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdiomasPayload>
          }
          findMany: {
            args: Prisma.IdiomasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdiomasPayload>[]
          }
          create: {
            args: Prisma.IdiomasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdiomasPayload>
          }
          createMany: {
            args: Prisma.IdiomasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.IdiomasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdiomasPayload>
          }
          update: {
            args: Prisma.IdiomasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdiomasPayload>
          }
          deleteMany: {
            args: Prisma.IdiomasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.IdiomasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.IdiomasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$IdiomasPayload>
          }
          aggregate: {
            args: Prisma.IdiomasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateIdiomas>
          }
          groupBy: {
            args: Prisma.IdiomasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<IdiomasGroupByOutputType>[]
          }
          count: {
            args: Prisma.IdiomasCountArgs<ExtArgs>,
            result: $Utils.Optional<IdiomasCountAggregateOutputType> | number
          }
        }
      }
      Itinerario: {
        payload: Prisma.$ItinerarioPayload<ExtArgs>
        fields: Prisma.ItinerarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ItinerarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItinerarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ItinerarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItinerarioPayload>
          }
          findFirst: {
            args: Prisma.ItinerarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItinerarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ItinerarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItinerarioPayload>
          }
          findMany: {
            args: Prisma.ItinerarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItinerarioPayload>[]
          }
          create: {
            args: Prisma.ItinerarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItinerarioPayload>
          }
          createMany: {
            args: Prisma.ItinerarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ItinerarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItinerarioPayload>
          }
          update: {
            args: Prisma.ItinerarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItinerarioPayload>
          }
          deleteMany: {
            args: Prisma.ItinerarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ItinerarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ItinerarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ItinerarioPayload>
          }
          aggregate: {
            args: Prisma.ItinerarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateItinerario>
          }
          groupBy: {
            args: Prisma.ItinerarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ItinerarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.ItinerarioCountArgs<ExtArgs>,
            result: $Utils.Optional<ItinerarioCountAggregateOutputType> | number
          }
        }
      }
      Pagos: {
        payload: Prisma.$PagosPayload<ExtArgs>
        fields: Prisma.PagosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PagosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PagosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PagosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          findFirst: {
            args: Prisma.PagosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PagosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PagosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          findMany: {
            args: Prisma.PagosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>[]
          }
          create: {
            args: Prisma.PagosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          createMany: {
            args: Prisma.PagosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.PagosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          update: {
            args: Prisma.PagosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          deleteMany: {
            args: Prisma.PagosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.PagosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.PagosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          aggregate: {
            args: Prisma.PagosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePagos>
          }
          groupBy: {
            args: Prisma.PagosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PagosGroupByOutputType>[]
          }
          count: {
            args: Prisma.PagosCountArgs<ExtArgs>,
            result: $Utils.Optional<PagosCountAggregateOutputType> | number
          }
        }
      }
      RecuperacionContrasena: {
        payload: Prisma.$RecuperacionContrasenaPayload<ExtArgs>
        fields: Prisma.RecuperacionContrasenaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RecuperacionContrasenaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$RecuperacionContrasenaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RecuperacionContrasenaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$RecuperacionContrasenaPayload>
          }
          findFirst: {
            args: Prisma.RecuperacionContrasenaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$RecuperacionContrasenaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RecuperacionContrasenaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$RecuperacionContrasenaPayload>
          }
          findMany: {
            args: Prisma.RecuperacionContrasenaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$RecuperacionContrasenaPayload>[]
          }
          create: {
            args: Prisma.RecuperacionContrasenaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$RecuperacionContrasenaPayload>
          }
          createMany: {
            args: Prisma.RecuperacionContrasenaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.RecuperacionContrasenaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$RecuperacionContrasenaPayload>
          }
          update: {
            args: Prisma.RecuperacionContrasenaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$RecuperacionContrasenaPayload>
          }
          deleteMany: {
            args: Prisma.RecuperacionContrasenaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.RecuperacionContrasenaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.RecuperacionContrasenaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$RecuperacionContrasenaPayload>
          }
          aggregate: {
            args: Prisma.RecuperacionContrasenaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateRecuperacionContrasena>
          }
          groupBy: {
            args: Prisma.RecuperacionContrasenaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<RecuperacionContrasenaGroupByOutputType>[]
          }
          count: {
            args: Prisma.RecuperacionContrasenaCountArgs<ExtArgs>,
            result: $Utils.Optional<RecuperacionContrasenaCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>,
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      Reservas: {
        payload: Prisma.$ReservasPayload<ExtArgs>
        fields: Prisma.ReservasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          findFirst: {
            args: Prisma.ReservasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          findMany: {
            args: Prisma.ReservasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>[]
          }
          create: {
            args: Prisma.ReservasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          createMany: {
            args: Prisma.ReservasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ReservasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          update: {
            args: Prisma.ReservasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          deleteMany: {
            args: Prisma.ReservasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ReservasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ReservasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          aggregate: {
            args: Prisma.ReservasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateReservas>
          }
          groupBy: {
            args: Prisma.ReservasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ReservasGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservasCountArgs<ExtArgs>,
            result: $Utils.Optional<ReservasCountAggregateOutputType> | number
          }
        }
      }
      Servicios: {
        payload: Prisma.$ServiciosPayload<ExtArgs>
        fields: Prisma.ServiciosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiciosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ServiciosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiciosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ServiciosPayload>
          }
          findFirst: {
            args: Prisma.ServiciosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ServiciosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiciosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ServiciosPayload>
          }
          findMany: {
            args: Prisma.ServiciosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ServiciosPayload>[]
          }
          create: {
            args: Prisma.ServiciosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ServiciosPayload>
          }
          createMany: {
            args: Prisma.ServiciosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ServiciosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ServiciosPayload>
          }
          update: {
            args: Prisma.ServiciosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ServiciosPayload>
          }
          deleteMany: {
            args: Prisma.ServiciosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ServiciosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ServiciosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ServiciosPayload>
          }
          aggregate: {
            args: Prisma.ServiciosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateServicios>
          }
          groupBy: {
            args: Prisma.ServiciosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ServiciosGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiciosCountArgs<ExtArgs>,
            result: $Utils.Optional<ServiciosCountAggregateOutputType> | number
          }
        }
      }
      Tipo_evento: {
        payload: Prisma.$Tipo_eventoPayload<ExtArgs>
        fields: Prisma.Tipo_eventoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Tipo_eventoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_eventoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Tipo_eventoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_eventoPayload>
          }
          findFirst: {
            args: Prisma.Tipo_eventoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_eventoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Tipo_eventoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_eventoPayload>
          }
          findMany: {
            args: Prisma.Tipo_eventoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_eventoPayload>[]
          }
          create: {
            args: Prisma.Tipo_eventoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_eventoPayload>
          }
          createMany: {
            args: Prisma.Tipo_eventoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.Tipo_eventoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_eventoPayload>
          }
          update: {
            args: Prisma.Tipo_eventoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_eventoPayload>
          }
          deleteMany: {
            args: Prisma.Tipo_eventoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.Tipo_eventoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.Tipo_eventoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_eventoPayload>
          }
          aggregate: {
            args: Prisma.Tipo_eventoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTipo_evento>
          }
          groupBy: {
            args: Prisma.Tipo_eventoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_eventoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Tipo_eventoCountArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_eventoCountAggregateOutputType> | number
          }
        }
      }
      Tipo_moneda: {
        payload: Prisma.$Tipo_monedaPayload<ExtArgs>
        fields: Prisma.Tipo_monedaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Tipo_monedaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_monedaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Tipo_monedaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_monedaPayload>
          }
          findFirst: {
            args: Prisma.Tipo_monedaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_monedaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Tipo_monedaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_monedaPayload>
          }
          findMany: {
            args: Prisma.Tipo_monedaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_monedaPayload>[]
          }
          create: {
            args: Prisma.Tipo_monedaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_monedaPayload>
          }
          createMany: {
            args: Prisma.Tipo_monedaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.Tipo_monedaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_monedaPayload>
          }
          update: {
            args: Prisma.Tipo_monedaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_monedaPayload>
          }
          deleteMany: {
            args: Prisma.Tipo_monedaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.Tipo_monedaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.Tipo_monedaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_monedaPayload>
          }
          aggregate: {
            args: Prisma.Tipo_monedaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTipo_moneda>
          }
          groupBy: {
            args: Prisma.Tipo_monedaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_monedaGroupByOutputType>[]
          }
          count: {
            args: Prisma.Tipo_monedaCountArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_monedaCountAggregateOutputType> | number
          }
        }
      }
      Tipo_servicio: {
        payload: Prisma.$Tipo_servicioPayload<ExtArgs>
        fields: Prisma.Tipo_servicioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Tipo_servicioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_servicioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Tipo_servicioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_servicioPayload>
          }
          findFirst: {
            args: Prisma.Tipo_servicioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_servicioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Tipo_servicioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_servicioPayload>
          }
          findMany: {
            args: Prisma.Tipo_servicioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_servicioPayload>[]
          }
          create: {
            args: Prisma.Tipo_servicioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_servicioPayload>
          }
          createMany: {
            args: Prisma.Tipo_servicioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.Tipo_servicioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_servicioPayload>
          }
          update: {
            args: Prisma.Tipo_servicioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_servicioPayload>
          }
          deleteMany: {
            args: Prisma.Tipo_servicioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.Tipo_servicioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.Tipo_servicioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$Tipo_servicioPayload>
          }
          aggregate: {
            args: Prisma.Tipo_servicioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTipo_servicio>
          }
          groupBy: {
            args: Prisma.Tipo_servicioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_servicioGroupByOutputType>[]
          }
          count: {
            args: Prisma.Tipo_servicioCountArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_servicioCountAggregateOutputType> | number
          }
        }
      }
      DetalleCarrito: {
        payload: Prisma.$DetalleCarritoPayload<ExtArgs>
        fields: Prisma.DetalleCarritoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DetalleCarritoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DetalleCarritoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DetalleCarritoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DetalleCarritoPayload>
          }
          findFirst: {
            args: Prisma.DetalleCarritoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DetalleCarritoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DetalleCarritoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DetalleCarritoPayload>
          }
          findMany: {
            args: Prisma.DetalleCarritoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DetalleCarritoPayload>[]
          }
          create: {
            args: Prisma.DetalleCarritoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DetalleCarritoPayload>
          }
          createMany: {
            args: Prisma.DetalleCarritoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.DetalleCarritoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DetalleCarritoPayload>
          }
          update: {
            args: Prisma.DetalleCarritoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DetalleCarritoPayload>
          }
          deleteMany: {
            args: Prisma.DetalleCarritoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.DetalleCarritoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.DetalleCarritoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$DetalleCarritoPayload>
          }
          aggregate: {
            args: Prisma.DetalleCarritoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDetalleCarrito>
          }
          groupBy: {
            args: Prisma.DetalleCarritoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DetalleCarritoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DetalleCarritoCountArgs<ExtArgs>,
            result: $Utils.Optional<DetalleCarritoCountAggregateOutputType> | number
          }
        }
      }
      HistorialCompra: {
        payload: Prisma.$HistorialCompraPayload<ExtArgs>
        fields: Prisma.HistorialCompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistorialCompraFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HistorialCompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistorialCompraFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HistorialCompraPayload>
          }
          findFirst: {
            args: Prisma.HistorialCompraFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HistorialCompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistorialCompraFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HistorialCompraPayload>
          }
          findMany: {
            args: Prisma.HistorialCompraFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HistorialCompraPayload>[]
          }
          create: {
            args: Prisma.HistorialCompraCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HistorialCompraPayload>
          }
          createMany: {
            args: Prisma.HistorialCompraCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.HistorialCompraDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HistorialCompraPayload>
          }
          update: {
            args: Prisma.HistorialCompraUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HistorialCompraPayload>
          }
          deleteMany: {
            args: Prisma.HistorialCompraDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.HistorialCompraUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.HistorialCompraUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$HistorialCompraPayload>
          }
          aggregate: {
            args: Prisma.HistorialCompraAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateHistorialCompra>
          }
          groupBy: {
            args: Prisma.HistorialCompraGroupByArgs<ExtArgs>,
            result: $Utils.Optional<HistorialCompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistorialCompraCountArgs<ExtArgs>,
            result: $Utils.Optional<HistorialCompraCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AdminCountOutputType
   */

  export type AdminCountOutputType = {
    destinos: number
  }

  export type AdminCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    destinos?: boolean | AdminCountOutputTypeCountDestinosArgs
  }

  // Custom InputTypes

  /**
   * AdminCountOutputType without action
   */
  export type AdminCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminCountOutputType
     */
    select?: AdminCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * AdminCountOutputType without action
   */
  export type AdminCountOutputTypeCountDestinosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DestinosWhereInput
  }



  /**
   * Count Type IdiomasCountOutputType
   */

  export type IdiomasCountOutputType = {
    cliente: number
  }

  export type IdiomasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | IdiomasCountOutputTypeCountClienteArgs
  }

  // Custom InputTypes

  /**
   * IdiomasCountOutputType without action
   */
  export type IdiomasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdiomasCountOutputType
     */
    select?: IdiomasCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * IdiomasCountOutputType without action
   */
  export type IdiomasCountOutputTypeCountClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
  }



  /**
   * Models
   */

  /**
   * Model Admin
   */

  export type AggregateAdmin = {
    _count: AdminCountAggregateOutputType | null
    _avg: AdminAvgAggregateOutputType | null
    _sum: AdminSumAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  export type AdminAvgAggregateOutputType = {
    ID_admin: number | null
  }

  export type AdminSumAggregateOutputType = {
    ID_admin: number | null
  }

  export type AdminMinAggregateOutputType = {
    ID_admin: number | null
    nombre: string | null
    correo: string | null
    contrasena: string | null
    imagen: Buffer | null
  }

  export type AdminMaxAggregateOutputType = {
    ID_admin: number | null
    nombre: string | null
    correo: string | null
    contrasena: string | null
    imagen: Buffer | null
  }

  export type AdminCountAggregateOutputType = {
    ID_admin: number
    nombre: number
    correo: number
    contrasena: number
    imagen: number
    _all: number
  }


  export type AdminAvgAggregateInputType = {
    ID_admin?: true
  }

  export type AdminSumAggregateInputType = {
    ID_admin?: true
  }

  export type AdminMinAggregateInputType = {
    ID_admin?: true
    nombre?: true
    correo?: true
    contrasena?: true
    imagen?: true
  }

  export type AdminMaxAggregateInputType = {
    ID_admin?: true
    nombre?: true
    correo?: true
    contrasena?: true
    imagen?: true
  }

  export type AdminCountAggregateInputType = {
    ID_admin?: true
    nombre?: true
    correo?: true
    contrasena?: true
    imagen?: true
    _all?: true
  }

  export type AdminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admin to aggregate.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admins
    **/
    _count?: true | AdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdminAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdminSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminMaxAggregateInputType
  }

  export type GetAdminAggregateType<T extends AdminAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin[P]>
      : GetScalarType<T[P], AggregateAdmin[P]>
  }




  export type AdminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminWhereInput
    orderBy?: AdminOrderByWithAggregationInput | AdminOrderByWithAggregationInput[]
    by: AdminScalarFieldEnum[] | AdminScalarFieldEnum
    having?: AdminScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminCountAggregateInputType | true
    _avg?: AdminAvgAggregateInputType
    _sum?: AdminSumAggregateInputType
    _min?: AdminMinAggregateInputType
    _max?: AdminMaxAggregateInputType
  }

  export type AdminGroupByOutputType = {
    ID_admin: number
    nombre: string
    correo: string
    contrasena: string
    imagen: Buffer | null
    _count: AdminCountAggregateOutputType | null
    _avg: AdminAvgAggregateOutputType | null
    _sum: AdminSumAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  type GetAdminGroupByPayload<T extends AdminGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminGroupByOutputType[P]>
            : GetScalarType<T[P], AdminGroupByOutputType[P]>
        }
      >
    >


  export type AdminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_admin?: boolean
    nombre?: boolean
    correo?: boolean
    contrasena?: boolean
    imagen?: boolean
    destinos?: boolean | Admin$destinosArgs<ExtArgs>
    _count?: boolean | AdminCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectScalar = {
    ID_admin?: boolean
    nombre?: boolean
    correo?: boolean
    contrasena?: boolean
    imagen?: boolean
  }

  export type AdminInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    destinos?: boolean | Admin$destinosArgs<ExtArgs>
    _count?: boolean | AdminCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $AdminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Admin"
    objects: {
      destinos: Prisma.$DestinosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      ID_admin: number
      nombre: string
      correo: string
      contrasena: string
      imagen: Buffer | null
    }, ExtArgs["result"]["admin"]>
    composites: {}
  }


  type AdminGetPayload<S extends boolean | null | undefined | AdminDefaultArgs> = $Result.GetResult<Prisma.$AdminPayload, S>

  type AdminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AdminFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AdminCountAggregateInputType | true
    }

  export interface AdminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Admin'], meta: { name: 'Admin' } }
    /**
     * Find zero or one Admin that matches the filter.
     * @param {AdminFindUniqueArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AdminFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AdminFindUniqueArgs<ExtArgs>>
    ): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Admin that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {AdminFindUniqueOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AdminFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AdminFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Admin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AdminFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AdminFindFirstArgs<ExtArgs>>
    ): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Admin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AdminFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AdminFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admin.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admin.findMany({ take: 10 })
     * 
     * // Only select the `ID_admin`
     * const adminWithID_adminOnly = await prisma.admin.findMany({ select: { ID_admin: true } })
     * 
    **/
    findMany<T extends AdminFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AdminFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Admin.
     * @param {AdminCreateArgs} args - Arguments to create a Admin.
     * @example
     * // Create one Admin
     * const Admin = await prisma.admin.create({
     *   data: {
     *     // ... data to create a Admin
     *   }
     * })
     * 
    **/
    create<T extends AdminCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AdminCreateArgs<ExtArgs>>
    ): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Admins.
     *     @param {AdminCreateManyArgs} args - Arguments to create many Admins.
     *     @example
     *     // Create many Admins
     *     const admin = await prisma.admin.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends AdminCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AdminCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Admin.
     * @param {AdminDeleteArgs} args - Arguments to delete one Admin.
     * @example
     * // Delete one Admin
     * const Admin = await prisma.admin.delete({
     *   where: {
     *     // ... filter to delete one Admin
     *   }
     * })
     * 
    **/
    delete<T extends AdminDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AdminDeleteArgs<ExtArgs>>
    ): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Admin.
     * @param {AdminUpdateArgs} args - Arguments to update one Admin.
     * @example
     * // Update one Admin
     * const admin = await prisma.admin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AdminUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AdminUpdateArgs<ExtArgs>>
    ): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Admins.
     * @param {AdminDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AdminDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AdminDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AdminUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AdminUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Admin.
     * @param {AdminUpsertArgs} args - Arguments to update or create a Admin.
     * @example
     * // Update or create a Admin
     * const admin = await prisma.admin.upsert({
     *   create: {
     *     // ... data to create a Admin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin we want to update
     *   }
     * })
    **/
    upsert<T extends AdminUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AdminUpsertArgs<ExtArgs>>
    ): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admin.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends AdminCountArgs>(
      args?: Subset<T, AdminCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminAggregateArgs>(args: Subset<T, AdminAggregateArgs>): Prisma.PrismaPromise<GetAdminAggregateType<T>>

    /**
     * Group by Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminGroupByArgs['orderBy'] }
        : { orderBy?: AdminGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Admin model
   */
  readonly fields: AdminFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Admin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    destinos<T extends Admin$destinosArgs<ExtArgs> = {}>(args?: Subset<T, Admin$destinosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DestinosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Admin model
   */ 
  interface AdminFieldRefs {
    readonly ID_admin: FieldRef<"Admin", 'Int'>
    readonly nombre: FieldRef<"Admin", 'String'>
    readonly correo: FieldRef<"Admin", 'String'>
    readonly contrasena: FieldRef<"Admin", 'String'>
    readonly imagen: FieldRef<"Admin", 'Bytes'>
  }
    

  // Custom InputTypes

  /**
   * Admin findUnique
   */
  export type AdminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }


  /**
   * Admin findUniqueOrThrow
   */
  export type AdminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }


  /**
   * Admin findFirst
   */
  export type AdminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }


  /**
   * Admin findFirstOrThrow
   */
  export type AdminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }


  /**
   * Admin findMany
   */
  export type AdminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }


  /**
   * Admin create
   */
  export type AdminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The data needed to create a Admin.
     */
    data: XOR<AdminCreateInput, AdminUncheckedCreateInput>
  }


  /**
   * Admin createMany
   */
  export type AdminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Admin update
   */
  export type AdminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The data needed to update a Admin.
     */
    data: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
    /**
     * Choose, which Admin to update.
     */
    where: AdminWhereUniqueInput
  }


  /**
   * Admin updateMany
   */
  export type AdminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminWhereInput
  }


  /**
   * Admin upsert
   */
  export type AdminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The filter to search for the Admin to update in case it exists.
     */
    where: AdminWhereUniqueInput
    /**
     * In case the Admin found by the `where` argument doesn't exist, create a new Admin with this data.
     */
    create: XOR<AdminCreateInput, AdminUncheckedCreateInput>
    /**
     * In case the Admin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
  }


  /**
   * Admin delete
   */
  export type AdminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter which Admin to delete.
     */
    where: AdminWhereUniqueInput
  }


  /**
   * Admin deleteMany
   */
  export type AdminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admins to delete
     */
    where?: AdminWhereInput
  }


  /**
   * Admin.destinos
   */
  export type Admin$destinosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
    where?: DestinosWhereInput
    orderBy?: DestinosOrderByWithRelationInput | DestinosOrderByWithRelationInput[]
    cursor?: DestinosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DestinosScalarFieldEnum | DestinosScalarFieldEnum[]
  }


  /**
   * Admin without action
   */
  export type AdminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
  }



  /**
   * Model Cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    ID_cliente: number | null
    ID_idioma: number | null
  }

  export type ClienteSumAggregateOutputType = {
    ID_cliente: number | null
    ID_idioma: number | null
  }

  export type ClienteMinAggregateOutputType = {
    ID_cliente: number | null
    nombre: string | null
    telefono: string | null
    correo: string | null
    contrasena: string | null
    ID_instagram: string | null
    ID_Facebook: string | null
    imagen: Buffer | null
    Preferencias: string | null
    ID_idioma: number | null
  }

  export type ClienteMaxAggregateOutputType = {
    ID_cliente: number | null
    nombre: string | null
    telefono: string | null
    correo: string | null
    contrasena: string | null
    ID_instagram: string | null
    ID_Facebook: string | null
    imagen: Buffer | null
    Preferencias: string | null
    ID_idioma: number | null
  }

  export type ClienteCountAggregateOutputType = {
    ID_cliente: number
    nombre: number
    telefono: number
    correo: number
    contrasena: number
    ID_instagram: number
    ID_Facebook: number
    imagen: number
    Preferencias: number
    ID_idioma: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    ID_cliente?: true
    ID_idioma?: true
  }

  export type ClienteSumAggregateInputType = {
    ID_cliente?: true
    ID_idioma?: true
  }

  export type ClienteMinAggregateInputType = {
    ID_cliente?: true
    nombre?: true
    telefono?: true
    correo?: true
    contrasena?: true
    ID_instagram?: true
    ID_Facebook?: true
    imagen?: true
    Preferencias?: true
    ID_idioma?: true
  }

  export type ClienteMaxAggregateInputType = {
    ID_cliente?: true
    nombre?: true
    telefono?: true
    correo?: true
    contrasena?: true
    ID_instagram?: true
    ID_Facebook?: true
    imagen?: true
    Preferencias?: true
    ID_idioma?: true
  }

  export type ClienteCountAggregateInputType = {
    ID_cliente?: true
    nombre?: true
    telefono?: true
    correo?: true
    contrasena?: true
    ID_instagram?: true
    ID_Facebook?: true
    imagen?: true
    Preferencias?: true
    ID_idioma?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cliente to aggregate.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type ClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithAggregationInput | ClienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: ClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    ID_cliente: number
    nombre: string
    telefono: string | null
    correo: string
    contrasena: string
    ID_instagram: string | null
    ID_Facebook: string | null
    imagen: Buffer | null
    Preferencias: string | null
    ID_idioma: number | null
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends ClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type ClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_cliente?: boolean
    nombre?: boolean
    telefono?: boolean
    correo?: boolean
    contrasena?: boolean
    ID_instagram?: boolean
    ID_Facebook?: boolean
    imagen?: boolean
    Preferencias?: boolean
    ID_idioma?: boolean
    idioma?: boolean | Cliente$idiomaArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectScalar = {
    ID_cliente?: boolean
    nombre?: boolean
    telefono?: boolean
    correo?: boolean
    contrasena?: boolean
    ID_instagram?: boolean
    ID_Facebook?: boolean
    imagen?: boolean
    Preferencias?: boolean
    ID_idioma?: boolean
  }

  export type ClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    idioma?: boolean | Cliente$idiomaArgs<ExtArgs>
  }


  export type $ClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cliente"
    objects: {
      idioma: Prisma.$IdiomasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      ID_cliente: number
      nombre: string
      telefono: string | null
      correo: string
      contrasena: string
      ID_instagram: string | null
      ID_Facebook: string | null
      imagen: Buffer | null
      Preferencias: string | null
      ID_idioma: number | null
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }


  type ClienteGetPayload<S extends boolean | null | undefined | ClienteDefaultArgs> = $Result.GetResult<Prisma.$ClientePayload, S>

  type ClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ClienteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface ClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cliente'], meta: { name: 'Cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {ClienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ClienteFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ClienteFindUniqueArgs<ExtArgs>>
    ): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Cliente that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ClienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ClienteFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ClienteFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ClienteFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ClienteFindFirstArgs<ExtArgs>>
    ): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ClienteFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ClienteFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `ID_cliente`
     * const clienteWithID_clienteOnly = await prisma.cliente.findMany({ select: { ID_cliente: true } })
     * 
    **/
    findMany<T extends ClienteFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ClienteFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Cliente.
     * @param {ClienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
    **/
    create<T extends ClienteCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ClienteCreateArgs<ExtArgs>>
    ): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Clientes.
     *     @param {ClienteCreateManyArgs} args - Arguments to create many Clientes.
     *     @example
     *     // Create many Clientes
     *     const cliente = await prisma.cliente.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ClienteCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ClienteCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cliente.
     * @param {ClienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
    **/
    delete<T extends ClienteDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ClienteDeleteArgs<ExtArgs>>
    ): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Cliente.
     * @param {ClienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ClienteUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ClienteUpdateArgs<ExtArgs>>
    ): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Clientes.
     * @param {ClienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ClienteDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ClienteDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ClienteUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ClienteUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cliente.
     * @param {ClienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
    **/
    upsert<T extends ClienteUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ClienteUpsertArgs<ExtArgs>>
    ): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClienteCountArgs>(
      args?: Subset<T, ClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteGroupByArgs['orderBy'] }
        : { orderBy?: ClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cliente model
   */
  readonly fields: ClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    idioma<T extends Cliente$idiomaArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$idiomaArgs<ExtArgs>>): Prisma__IdiomasClient<$Result.GetResult<Prisma.$IdiomasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Cliente model
   */ 
  interface ClienteFieldRefs {
    readonly ID_cliente: FieldRef<"Cliente", 'Int'>
    readonly nombre: FieldRef<"Cliente", 'String'>
    readonly telefono: FieldRef<"Cliente", 'String'>
    readonly correo: FieldRef<"Cliente", 'String'>
    readonly contrasena: FieldRef<"Cliente", 'String'>
    readonly ID_instagram: FieldRef<"Cliente", 'String'>
    readonly ID_Facebook: FieldRef<"Cliente", 'String'>
    readonly imagen: FieldRef<"Cliente", 'Bytes'>
    readonly Preferencias: FieldRef<"Cliente", 'String'>
    readonly ID_idioma: FieldRef<"Cliente", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * Cliente findUnique
   */
  export type ClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }


  /**
   * Cliente findUniqueOrThrow
   */
  export type ClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }


  /**
   * Cliente findFirst
   */
  export type ClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }


  /**
   * Cliente findFirstOrThrow
   */
  export type ClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }


  /**
   * Cliente findMany
   */
  export type ClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }


  /**
   * Cliente create
   */
  export type ClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a Cliente.
     */
    data: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
  }


  /**
   * Cliente createMany
   */
  export type ClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Cliente update
   */
  export type ClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a Cliente.
     */
    data: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
    /**
     * Choose, which Cliente to update.
     */
    where: ClienteWhereUniqueInput
  }


  /**
   * Cliente updateMany
   */
  export type ClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
  }


  /**
   * Cliente upsert
   */
  export type ClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the Cliente to update in case it exists.
     */
    where: ClienteWhereUniqueInput
    /**
     * In case the Cliente found by the `where` argument doesn't exist, create a new Cliente with this data.
     */
    create: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
    /**
     * In case the Cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
  }


  /**
   * Cliente delete
   */
  export type ClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter which Cliente to delete.
     */
    where: ClienteWhereUniqueInput
  }


  /**
   * Cliente deleteMany
   */
  export type ClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClienteWhereInput
  }


  /**
   * Cliente.idioma
   */
  export type Cliente$idiomaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
    where?: IdiomasWhereInput
  }


  /**
   * Cliente without action
   */
  export type ClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
  }



  /**
   * Model Destinos
   */

  export type AggregateDestinos = {
    _count: DestinosCountAggregateOutputType | null
    _avg: DestinosAvgAggregateOutputType | null
    _sum: DestinosSumAggregateOutputType | null
    _min: DestinosMinAggregateOutputType | null
    _max: DestinosMaxAggregateOutputType | null
  }

  export type DestinosAvgAggregateOutputType = {
    ID_destino: number | null
    precio: number | null
    cupos: number | null
    ID_admin: number | null
  }

  export type DestinosSumAggregateOutputType = {
    ID_destino: number | null
    precio: number | null
    cupos: number | null
    ID_admin: number | null
  }

  export type DestinosMinAggregateOutputType = {
    ID_destino: number | null
    nombre: string | null
    precio: number | null
    ubicacion: string | null
    categoria: string | null
    actividades: string | null
    cupos: number | null
    ID_admin: number | null
  }

  export type DestinosMaxAggregateOutputType = {
    ID_destino: number | null
    nombre: string | null
    precio: number | null
    ubicacion: string | null
    categoria: string | null
    actividades: string | null
    cupos: number | null
    ID_admin: number | null
  }

  export type DestinosCountAggregateOutputType = {
    ID_destino: number
    nombre: number
    precio: number
    ubicacion: number
    categoria: number
    actividades: number
    cupos: number
    ID_admin: number
    _all: number
  }


  export type DestinosAvgAggregateInputType = {
    ID_destino?: true
    precio?: true
    cupos?: true
    ID_admin?: true
  }

  export type DestinosSumAggregateInputType = {
    ID_destino?: true
    precio?: true
    cupos?: true
    ID_admin?: true
  }

  export type DestinosMinAggregateInputType = {
    ID_destino?: true
    nombre?: true
    precio?: true
    ubicacion?: true
    categoria?: true
    actividades?: true
    cupos?: true
    ID_admin?: true
  }

  export type DestinosMaxAggregateInputType = {
    ID_destino?: true
    nombre?: true
    precio?: true
    ubicacion?: true
    categoria?: true
    actividades?: true
    cupos?: true
    ID_admin?: true
  }

  export type DestinosCountAggregateInputType = {
    ID_destino?: true
    nombre?: true
    precio?: true
    ubicacion?: true
    categoria?: true
    actividades?: true
    cupos?: true
    ID_admin?: true
    _all?: true
  }

  export type DestinosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Destinos to aggregate.
     */
    where?: DestinosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Destinos to fetch.
     */
    orderBy?: DestinosOrderByWithRelationInput | DestinosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DestinosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Destinos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Destinos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Destinos
    **/
    _count?: true | DestinosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DestinosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DestinosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DestinosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DestinosMaxAggregateInputType
  }

  export type GetDestinosAggregateType<T extends DestinosAggregateArgs> = {
        [P in keyof T & keyof AggregateDestinos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDestinos[P]>
      : GetScalarType<T[P], AggregateDestinos[P]>
  }




  export type DestinosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DestinosWhereInput
    orderBy?: DestinosOrderByWithAggregationInput | DestinosOrderByWithAggregationInput[]
    by: DestinosScalarFieldEnum[] | DestinosScalarFieldEnum
    having?: DestinosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DestinosCountAggregateInputType | true
    _avg?: DestinosAvgAggregateInputType
    _sum?: DestinosSumAggregateInputType
    _min?: DestinosMinAggregateInputType
    _max?: DestinosMaxAggregateInputType
  }

  export type DestinosGroupByOutputType = {
    ID_destino: number
    nombre: string
    precio: number | null
    ubicacion: string | null
    categoria: string | null
    actividades: string | null
    cupos: number | null
    ID_admin: number | null
    _count: DestinosCountAggregateOutputType | null
    _avg: DestinosAvgAggregateOutputType | null
    _sum: DestinosSumAggregateOutputType | null
    _min: DestinosMinAggregateOutputType | null
    _max: DestinosMaxAggregateOutputType | null
  }

  type GetDestinosGroupByPayload<T extends DestinosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DestinosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DestinosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DestinosGroupByOutputType[P]>
            : GetScalarType<T[P], DestinosGroupByOutputType[P]>
        }
      >
    >


  export type DestinosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_destino?: boolean
    nombre?: boolean
    precio?: boolean
    ubicacion?: boolean
    categoria?: boolean
    actividades?: boolean
    cupos?: boolean
    ID_admin?: boolean
    admin?: boolean | Destinos$adminArgs<ExtArgs>
  }, ExtArgs["result"]["destinos"]>

  export type DestinosSelectScalar = {
    ID_destino?: boolean
    nombre?: boolean
    precio?: boolean
    ubicacion?: boolean
    categoria?: boolean
    actividades?: boolean
    cupos?: boolean
    ID_admin?: boolean
  }

  export type DestinosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | Destinos$adminArgs<ExtArgs>
  }


  export type $DestinosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Destinos"
    objects: {
      admin: Prisma.$AdminPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      ID_destino: number
      nombre: string
      precio: number | null
      ubicacion: string | null
      categoria: string | null
      actividades: string | null
      cupos: number | null
      ID_admin: number | null
    }, ExtArgs["result"]["destinos"]>
    composites: {}
  }


  type DestinosGetPayload<S extends boolean | null | undefined | DestinosDefaultArgs> = $Result.GetResult<Prisma.$DestinosPayload, S>

  type DestinosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DestinosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DestinosCountAggregateInputType | true
    }

  export interface DestinosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Destinos'], meta: { name: 'Destinos' } }
    /**
     * Find zero or one Destinos that matches the filter.
     * @param {DestinosFindUniqueArgs} args - Arguments to find a Destinos
     * @example
     * // Get one Destinos
     * const destinos = await prisma.destinos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DestinosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, DestinosFindUniqueArgs<ExtArgs>>
    ): Prisma__DestinosClient<$Result.GetResult<Prisma.$DestinosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Destinos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {DestinosFindUniqueOrThrowArgs} args - Arguments to find a Destinos
     * @example
     * // Get one Destinos
     * const destinos = await prisma.destinos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DestinosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DestinosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__DestinosClient<$Result.GetResult<Prisma.$DestinosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Destinos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DestinosFindFirstArgs} args - Arguments to find a Destinos
     * @example
     * // Get one Destinos
     * const destinos = await prisma.destinos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DestinosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, DestinosFindFirstArgs<ExtArgs>>
    ): Prisma__DestinosClient<$Result.GetResult<Prisma.$DestinosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Destinos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DestinosFindFirstOrThrowArgs} args - Arguments to find a Destinos
     * @example
     * // Get one Destinos
     * const destinos = await prisma.destinos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DestinosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DestinosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__DestinosClient<$Result.GetResult<Prisma.$DestinosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Destinos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DestinosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Destinos
     * const destinos = await prisma.destinos.findMany()
     * 
     * // Get first 10 Destinos
     * const destinos = await prisma.destinos.findMany({ take: 10 })
     * 
     * // Only select the `ID_destino`
     * const destinosWithID_destinoOnly = await prisma.destinos.findMany({ select: { ID_destino: true } })
     * 
    **/
    findMany<T extends DestinosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DestinosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DestinosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Destinos.
     * @param {DestinosCreateArgs} args - Arguments to create a Destinos.
     * @example
     * // Create one Destinos
     * const Destinos = await prisma.destinos.create({
     *   data: {
     *     // ... data to create a Destinos
     *   }
     * })
     * 
    **/
    create<T extends DestinosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, DestinosCreateArgs<ExtArgs>>
    ): Prisma__DestinosClient<$Result.GetResult<Prisma.$DestinosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Destinos.
     *     @param {DestinosCreateManyArgs} args - Arguments to create many Destinos.
     *     @example
     *     // Create many Destinos
     *     const destinos = await prisma.destinos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends DestinosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DestinosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Destinos.
     * @param {DestinosDeleteArgs} args - Arguments to delete one Destinos.
     * @example
     * // Delete one Destinos
     * const Destinos = await prisma.destinos.delete({
     *   where: {
     *     // ... filter to delete one Destinos
     *   }
     * })
     * 
    **/
    delete<T extends DestinosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, DestinosDeleteArgs<ExtArgs>>
    ): Prisma__DestinosClient<$Result.GetResult<Prisma.$DestinosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Destinos.
     * @param {DestinosUpdateArgs} args - Arguments to update one Destinos.
     * @example
     * // Update one Destinos
     * const destinos = await prisma.destinos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DestinosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, DestinosUpdateArgs<ExtArgs>>
    ): Prisma__DestinosClient<$Result.GetResult<Prisma.$DestinosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Destinos.
     * @param {DestinosDeleteManyArgs} args - Arguments to filter Destinos to delete.
     * @example
     * // Delete a few Destinos
     * const { count } = await prisma.destinos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DestinosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DestinosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Destinos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DestinosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Destinos
     * const destinos = await prisma.destinos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DestinosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, DestinosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Destinos.
     * @param {DestinosUpsertArgs} args - Arguments to update or create a Destinos.
     * @example
     * // Update or create a Destinos
     * const destinos = await prisma.destinos.upsert({
     *   create: {
     *     // ... data to create a Destinos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Destinos we want to update
     *   }
     * })
    **/
    upsert<T extends DestinosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, DestinosUpsertArgs<ExtArgs>>
    ): Prisma__DestinosClient<$Result.GetResult<Prisma.$DestinosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Destinos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DestinosCountArgs} args - Arguments to filter Destinos to count.
     * @example
     * // Count the number of Destinos
     * const count = await prisma.destinos.count({
     *   where: {
     *     // ... the filter for the Destinos we want to count
     *   }
     * })
    **/
    count<T extends DestinosCountArgs>(
      args?: Subset<T, DestinosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DestinosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Destinos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DestinosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DestinosAggregateArgs>(args: Subset<T, DestinosAggregateArgs>): Prisma.PrismaPromise<GetDestinosAggregateType<T>>

    /**
     * Group by Destinos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DestinosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DestinosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DestinosGroupByArgs['orderBy'] }
        : { orderBy?: DestinosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DestinosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDestinosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Destinos model
   */
  readonly fields: DestinosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Destinos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DestinosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    admin<T extends Destinos$adminArgs<ExtArgs> = {}>(args?: Subset<T, Destinos$adminArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Destinos model
   */ 
  interface DestinosFieldRefs {
    readonly ID_destino: FieldRef<"Destinos", 'Int'>
    readonly nombre: FieldRef<"Destinos", 'String'>
    readonly precio: FieldRef<"Destinos", 'Float'>
    readonly ubicacion: FieldRef<"Destinos", 'String'>
    readonly categoria: FieldRef<"Destinos", 'String'>
    readonly actividades: FieldRef<"Destinos", 'String'>
    readonly cupos: FieldRef<"Destinos", 'Int'>
    readonly ID_admin: FieldRef<"Destinos", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * Destinos findUnique
   */
  export type DestinosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
    /**
     * Filter, which Destinos to fetch.
     */
    where: DestinosWhereUniqueInput
  }


  /**
   * Destinos findUniqueOrThrow
   */
  export type DestinosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
    /**
     * Filter, which Destinos to fetch.
     */
    where: DestinosWhereUniqueInput
  }


  /**
   * Destinos findFirst
   */
  export type DestinosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
    /**
     * Filter, which Destinos to fetch.
     */
    where?: DestinosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Destinos to fetch.
     */
    orderBy?: DestinosOrderByWithRelationInput | DestinosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Destinos.
     */
    cursor?: DestinosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Destinos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Destinos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Destinos.
     */
    distinct?: DestinosScalarFieldEnum | DestinosScalarFieldEnum[]
  }


  /**
   * Destinos findFirstOrThrow
   */
  export type DestinosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
    /**
     * Filter, which Destinos to fetch.
     */
    where?: DestinosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Destinos to fetch.
     */
    orderBy?: DestinosOrderByWithRelationInput | DestinosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Destinos.
     */
    cursor?: DestinosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Destinos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Destinos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Destinos.
     */
    distinct?: DestinosScalarFieldEnum | DestinosScalarFieldEnum[]
  }


  /**
   * Destinos findMany
   */
  export type DestinosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
    /**
     * Filter, which Destinos to fetch.
     */
    where?: DestinosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Destinos to fetch.
     */
    orderBy?: DestinosOrderByWithRelationInput | DestinosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Destinos.
     */
    cursor?: DestinosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Destinos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Destinos.
     */
    skip?: number
    distinct?: DestinosScalarFieldEnum | DestinosScalarFieldEnum[]
  }


  /**
   * Destinos create
   */
  export type DestinosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
    /**
     * The data needed to create a Destinos.
     */
    data: XOR<DestinosCreateInput, DestinosUncheckedCreateInput>
  }


  /**
   * Destinos createMany
   */
  export type DestinosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Destinos.
     */
    data: DestinosCreateManyInput | DestinosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Destinos update
   */
  export type DestinosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
    /**
     * The data needed to update a Destinos.
     */
    data: XOR<DestinosUpdateInput, DestinosUncheckedUpdateInput>
    /**
     * Choose, which Destinos to update.
     */
    where: DestinosWhereUniqueInput
  }


  /**
   * Destinos updateMany
   */
  export type DestinosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Destinos.
     */
    data: XOR<DestinosUpdateManyMutationInput, DestinosUncheckedUpdateManyInput>
    /**
     * Filter which Destinos to update
     */
    where?: DestinosWhereInput
  }


  /**
   * Destinos upsert
   */
  export type DestinosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
    /**
     * The filter to search for the Destinos to update in case it exists.
     */
    where: DestinosWhereUniqueInput
    /**
     * In case the Destinos found by the `where` argument doesn't exist, create a new Destinos with this data.
     */
    create: XOR<DestinosCreateInput, DestinosUncheckedCreateInput>
    /**
     * In case the Destinos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DestinosUpdateInput, DestinosUncheckedUpdateInput>
  }


  /**
   * Destinos delete
   */
  export type DestinosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
    /**
     * Filter which Destinos to delete.
     */
    where: DestinosWhereUniqueInput
  }


  /**
   * Destinos deleteMany
   */
  export type DestinosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Destinos to delete
     */
    where?: DestinosWhereInput
  }


  /**
   * Destinos.admin
   */
  export type Destinos$adminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AdminInclude<ExtArgs> | null
    where?: AdminWhereInput
  }


  /**
   * Destinos without action
   */
  export type DestinosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Destinos
     */
    select?: DestinosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: DestinosInclude<ExtArgs> | null
  }



  /**
   * Model Eventos
   */

  export type AggregateEventos = {
    _count: EventosCountAggregateOutputType | null
    _avg: EventosAvgAggregateOutputType | null
    _sum: EventosSumAggregateOutputType | null
    _min: EventosMinAggregateOutputType | null
    _max: EventosMaxAggregateOutputType | null
  }

  export type EventosAvgAggregateOutputType = {
    ID_evento: number | null
    ID_tipo_e: number | null
    ID_cliente: number | null
    ID_admin: number | null
  }

  export type EventosSumAggregateOutputType = {
    ID_evento: number | null
    ID_tipo_e: number | null
    ID_cliente: number | null
    ID_admin: number | null
  }

  export type EventosMinAggregateOutputType = {
    ID_evento: number | null
    ID_tipo_e: number | null
    ID_cliente: number | null
    descripcion: string | null
    fecha: Date | null
    ID_admin: number | null
  }

  export type EventosMaxAggregateOutputType = {
    ID_evento: number | null
    ID_tipo_e: number | null
    ID_cliente: number | null
    descripcion: string | null
    fecha: Date | null
    ID_admin: number | null
  }

  export type EventosCountAggregateOutputType = {
    ID_evento: number
    ID_tipo_e: number
    ID_cliente: number
    descripcion: number
    fecha: number
    ID_admin: number
    _all: number
  }


  export type EventosAvgAggregateInputType = {
    ID_evento?: true
    ID_tipo_e?: true
    ID_cliente?: true
    ID_admin?: true
  }

  export type EventosSumAggregateInputType = {
    ID_evento?: true
    ID_tipo_e?: true
    ID_cliente?: true
    ID_admin?: true
  }

  export type EventosMinAggregateInputType = {
    ID_evento?: true
    ID_tipo_e?: true
    ID_cliente?: true
    descripcion?: true
    fecha?: true
    ID_admin?: true
  }

  export type EventosMaxAggregateInputType = {
    ID_evento?: true
    ID_tipo_e?: true
    ID_cliente?: true
    descripcion?: true
    fecha?: true
    ID_admin?: true
  }

  export type EventosCountAggregateInputType = {
    ID_evento?: true
    ID_tipo_e?: true
    ID_cliente?: true
    descripcion?: true
    fecha?: true
    ID_admin?: true
    _all?: true
  }

  export type EventosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Eventos to aggregate.
     */
    where?: EventosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eventos to fetch.
     */
    orderBy?: EventosOrderByWithRelationInput | EventosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Eventos
    **/
    _count?: true | EventosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventosMaxAggregateInputType
  }

  export type GetEventosAggregateType<T extends EventosAggregateArgs> = {
        [P in keyof T & keyof AggregateEventos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEventos[P]>
      : GetScalarType<T[P], AggregateEventos[P]>
  }




  export type EventosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventosWhereInput
    orderBy?: EventosOrderByWithAggregationInput | EventosOrderByWithAggregationInput[]
    by: EventosScalarFieldEnum[] | EventosScalarFieldEnum
    having?: EventosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventosCountAggregateInputType | true
    _avg?: EventosAvgAggregateInputType
    _sum?: EventosSumAggregateInputType
    _min?: EventosMinAggregateInputType
    _max?: EventosMaxAggregateInputType
  }

  export type EventosGroupByOutputType = {
    ID_evento: number
    ID_tipo_e: number | null
    ID_cliente: number | null
    descripcion: string | null
    fecha: Date | null
    ID_admin: number | null
    _count: EventosCountAggregateOutputType | null
    _avg: EventosAvgAggregateOutputType | null
    _sum: EventosSumAggregateOutputType | null
    _min: EventosMinAggregateOutputType | null
    _max: EventosMaxAggregateOutputType | null
  }

  type GetEventosGroupByPayload<T extends EventosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventosGroupByOutputType[P]>
            : GetScalarType<T[P], EventosGroupByOutputType[P]>
        }
      >
    >


  export type EventosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_evento?: boolean
    ID_tipo_e?: boolean
    ID_cliente?: boolean
    descripcion?: boolean
    fecha?: boolean
    ID_admin?: boolean
  }, ExtArgs["result"]["eventos"]>

  export type EventosSelectScalar = {
    ID_evento?: boolean
    ID_tipo_e?: boolean
    ID_cliente?: boolean
    descripcion?: boolean
    fecha?: boolean
    ID_admin?: boolean
  }


  export type $EventosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Eventos"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_evento: number
      ID_tipo_e: number | null
      ID_cliente: number | null
      descripcion: string | null
      fecha: Date | null
      ID_admin: number | null
    }, ExtArgs["result"]["eventos"]>
    composites: {}
  }


  type EventosGetPayload<S extends boolean | null | undefined | EventosDefaultArgs> = $Result.GetResult<Prisma.$EventosPayload, S>

  type EventosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EventosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EventosCountAggregateInputType | true
    }

  export interface EventosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Eventos'], meta: { name: 'Eventos' } }
    /**
     * Find zero or one Eventos that matches the filter.
     * @param {EventosFindUniqueArgs} args - Arguments to find a Eventos
     * @example
     * // Get one Eventos
     * const eventos = await prisma.eventos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EventosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, EventosFindUniqueArgs<ExtArgs>>
    ): Prisma__EventosClient<$Result.GetResult<Prisma.$EventosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Eventos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {EventosFindUniqueOrThrowArgs} args - Arguments to find a Eventos
     * @example
     * // Get one Eventos
     * const eventos = await prisma.eventos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends EventosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EventosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__EventosClient<$Result.GetResult<Prisma.$EventosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Eventos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventosFindFirstArgs} args - Arguments to find a Eventos
     * @example
     * // Get one Eventos
     * const eventos = await prisma.eventos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EventosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, EventosFindFirstArgs<ExtArgs>>
    ): Prisma__EventosClient<$Result.GetResult<Prisma.$EventosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Eventos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventosFindFirstOrThrowArgs} args - Arguments to find a Eventos
     * @example
     * // Get one Eventos
     * const eventos = await prisma.eventos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends EventosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, EventosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__EventosClient<$Result.GetResult<Prisma.$EventosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Eventos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Eventos
     * const eventos = await prisma.eventos.findMany()
     * 
     * // Get first 10 Eventos
     * const eventos = await prisma.eventos.findMany({ take: 10 })
     * 
     * // Only select the `ID_evento`
     * const eventosWithID_eventoOnly = await prisma.eventos.findMany({ select: { ID_evento: true } })
     * 
    **/
    findMany<T extends EventosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EventosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Eventos.
     * @param {EventosCreateArgs} args - Arguments to create a Eventos.
     * @example
     * // Create one Eventos
     * const Eventos = await prisma.eventos.create({
     *   data: {
     *     // ... data to create a Eventos
     *   }
     * })
     * 
    **/
    create<T extends EventosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, EventosCreateArgs<ExtArgs>>
    ): Prisma__EventosClient<$Result.GetResult<Prisma.$EventosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Eventos.
     *     @param {EventosCreateManyArgs} args - Arguments to create many Eventos.
     *     @example
     *     // Create many Eventos
     *     const eventos = await prisma.eventos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends EventosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EventosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Eventos.
     * @param {EventosDeleteArgs} args - Arguments to delete one Eventos.
     * @example
     * // Delete one Eventos
     * const Eventos = await prisma.eventos.delete({
     *   where: {
     *     // ... filter to delete one Eventos
     *   }
     * })
     * 
    **/
    delete<T extends EventosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, EventosDeleteArgs<ExtArgs>>
    ): Prisma__EventosClient<$Result.GetResult<Prisma.$EventosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Eventos.
     * @param {EventosUpdateArgs} args - Arguments to update one Eventos.
     * @example
     * // Update one Eventos
     * const eventos = await prisma.eventos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EventosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, EventosUpdateArgs<ExtArgs>>
    ): Prisma__EventosClient<$Result.GetResult<Prisma.$EventosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Eventos.
     * @param {EventosDeleteManyArgs} args - Arguments to filter Eventos to delete.
     * @example
     * // Delete a few Eventos
     * const { count } = await prisma.eventos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EventosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, EventosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Eventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Eventos
     * const eventos = await prisma.eventos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EventosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, EventosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Eventos.
     * @param {EventosUpsertArgs} args - Arguments to update or create a Eventos.
     * @example
     * // Update or create a Eventos
     * const eventos = await prisma.eventos.upsert({
     *   create: {
     *     // ... data to create a Eventos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Eventos we want to update
     *   }
     * })
    **/
    upsert<T extends EventosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, EventosUpsertArgs<ExtArgs>>
    ): Prisma__EventosClient<$Result.GetResult<Prisma.$EventosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Eventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventosCountArgs} args - Arguments to filter Eventos to count.
     * @example
     * // Count the number of Eventos
     * const count = await prisma.eventos.count({
     *   where: {
     *     // ... the filter for the Eventos we want to count
     *   }
     * })
    **/
    count<T extends EventosCountArgs>(
      args?: Subset<T, EventosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Eventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventosAggregateArgs>(args: Subset<T, EventosAggregateArgs>): Prisma.PrismaPromise<GetEventosAggregateType<T>>

    /**
     * Group by Eventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventosGroupByArgs['orderBy'] }
        : { orderBy?: EventosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Eventos model
   */
  readonly fields: EventosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Eventos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Eventos model
   */ 
  interface EventosFieldRefs {
    readonly ID_evento: FieldRef<"Eventos", 'Int'>
    readonly ID_tipo_e: FieldRef<"Eventos", 'Int'>
    readonly ID_cliente: FieldRef<"Eventos", 'Int'>
    readonly descripcion: FieldRef<"Eventos", 'String'>
    readonly fecha: FieldRef<"Eventos", 'DateTime'>
    readonly ID_admin: FieldRef<"Eventos", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * Eventos findUnique
   */
  export type EventosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eventos
     */
    select?: EventosSelect<ExtArgs> | null
    /**
     * Filter, which Eventos to fetch.
     */
    where: EventosWhereUniqueInput
  }


  /**
   * Eventos findUniqueOrThrow
   */
  export type EventosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eventos
     */
    select?: EventosSelect<ExtArgs> | null
    /**
     * Filter, which Eventos to fetch.
     */
    where: EventosWhereUniqueInput
  }


  /**
   * Eventos findFirst
   */
  export type EventosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eventos
     */
    select?: EventosSelect<ExtArgs> | null
    /**
     * Filter, which Eventos to fetch.
     */
    where?: EventosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eventos to fetch.
     */
    orderBy?: EventosOrderByWithRelationInput | EventosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Eventos.
     */
    cursor?: EventosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Eventos.
     */
    distinct?: EventosScalarFieldEnum | EventosScalarFieldEnum[]
  }


  /**
   * Eventos findFirstOrThrow
   */
  export type EventosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eventos
     */
    select?: EventosSelect<ExtArgs> | null
    /**
     * Filter, which Eventos to fetch.
     */
    where?: EventosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eventos to fetch.
     */
    orderBy?: EventosOrderByWithRelationInput | EventosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Eventos.
     */
    cursor?: EventosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Eventos.
     */
    distinct?: EventosScalarFieldEnum | EventosScalarFieldEnum[]
  }


  /**
   * Eventos findMany
   */
  export type EventosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eventos
     */
    select?: EventosSelect<ExtArgs> | null
    /**
     * Filter, which Eventos to fetch.
     */
    where?: EventosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Eventos to fetch.
     */
    orderBy?: EventosOrderByWithRelationInput | EventosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Eventos.
     */
    cursor?: EventosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Eventos.
     */
    skip?: number
    distinct?: EventosScalarFieldEnum | EventosScalarFieldEnum[]
  }


  /**
   * Eventos create
   */
  export type EventosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eventos
     */
    select?: EventosSelect<ExtArgs> | null
    /**
     * The data needed to create a Eventos.
     */
    data?: XOR<EventosCreateInput, EventosUncheckedCreateInput>
  }


  /**
   * Eventos createMany
   */
  export type EventosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Eventos.
     */
    data: EventosCreateManyInput | EventosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Eventos update
   */
  export type EventosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eventos
     */
    select?: EventosSelect<ExtArgs> | null
    /**
     * The data needed to update a Eventos.
     */
    data: XOR<EventosUpdateInput, EventosUncheckedUpdateInput>
    /**
     * Choose, which Eventos to update.
     */
    where: EventosWhereUniqueInput
  }


  /**
   * Eventos updateMany
   */
  export type EventosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Eventos.
     */
    data: XOR<EventosUpdateManyMutationInput, EventosUncheckedUpdateManyInput>
    /**
     * Filter which Eventos to update
     */
    where?: EventosWhereInput
  }


  /**
   * Eventos upsert
   */
  export type EventosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eventos
     */
    select?: EventosSelect<ExtArgs> | null
    /**
     * The filter to search for the Eventos to update in case it exists.
     */
    where: EventosWhereUniqueInput
    /**
     * In case the Eventos found by the `where` argument doesn't exist, create a new Eventos with this data.
     */
    create: XOR<EventosCreateInput, EventosUncheckedCreateInput>
    /**
     * In case the Eventos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventosUpdateInput, EventosUncheckedUpdateInput>
  }


  /**
   * Eventos delete
   */
  export type EventosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eventos
     */
    select?: EventosSelect<ExtArgs> | null
    /**
     * Filter which Eventos to delete.
     */
    where: EventosWhereUniqueInput
  }


  /**
   * Eventos deleteMany
   */
  export type EventosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Eventos to delete
     */
    where?: EventosWhereInput
  }


  /**
   * Eventos without action
   */
  export type EventosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Eventos
     */
    select?: EventosSelect<ExtArgs> | null
  }



  /**
   * Model Idiomas
   */

  export type AggregateIdiomas = {
    _count: IdiomasCountAggregateOutputType | null
    _avg: IdiomasAvgAggregateOutputType | null
    _sum: IdiomasSumAggregateOutputType | null
    _min: IdiomasMinAggregateOutputType | null
    _max: IdiomasMaxAggregateOutputType | null
  }

  export type IdiomasAvgAggregateOutputType = {
    ID_idioma: number | null
  }

  export type IdiomasSumAggregateOutputType = {
    ID_idioma: number | null
  }

  export type IdiomasMinAggregateOutputType = {
    ID_idioma: number | null
    nombre: string | null
    codigo: string | null
  }

  export type IdiomasMaxAggregateOutputType = {
    ID_idioma: number | null
    nombre: string | null
    codigo: string | null
  }

  export type IdiomasCountAggregateOutputType = {
    ID_idioma: number
    nombre: number
    codigo: number
    _all: number
  }


  export type IdiomasAvgAggregateInputType = {
    ID_idioma?: true
  }

  export type IdiomasSumAggregateInputType = {
    ID_idioma?: true
  }

  export type IdiomasMinAggregateInputType = {
    ID_idioma?: true
    nombre?: true
    codigo?: true
  }

  export type IdiomasMaxAggregateInputType = {
    ID_idioma?: true
    nombre?: true
    codigo?: true
  }

  export type IdiomasCountAggregateInputType = {
    ID_idioma?: true
    nombre?: true
    codigo?: true
    _all?: true
  }

  export type IdiomasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Idiomas to aggregate.
     */
    where?: IdiomasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Idiomas to fetch.
     */
    orderBy?: IdiomasOrderByWithRelationInput | IdiomasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IdiomasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Idiomas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Idiomas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Idiomas
    **/
    _count?: true | IdiomasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IdiomasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IdiomasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IdiomasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IdiomasMaxAggregateInputType
  }

  export type GetIdiomasAggregateType<T extends IdiomasAggregateArgs> = {
        [P in keyof T & keyof AggregateIdiomas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIdiomas[P]>
      : GetScalarType<T[P], AggregateIdiomas[P]>
  }




  export type IdiomasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IdiomasWhereInput
    orderBy?: IdiomasOrderByWithAggregationInput | IdiomasOrderByWithAggregationInput[]
    by: IdiomasScalarFieldEnum[] | IdiomasScalarFieldEnum
    having?: IdiomasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IdiomasCountAggregateInputType | true
    _avg?: IdiomasAvgAggregateInputType
    _sum?: IdiomasSumAggregateInputType
    _min?: IdiomasMinAggregateInputType
    _max?: IdiomasMaxAggregateInputType
  }

  export type IdiomasGroupByOutputType = {
    ID_idioma: number
    nombre: string
    codigo: string
    _count: IdiomasCountAggregateOutputType | null
    _avg: IdiomasAvgAggregateOutputType | null
    _sum: IdiomasSumAggregateOutputType | null
    _min: IdiomasMinAggregateOutputType | null
    _max: IdiomasMaxAggregateOutputType | null
  }

  type GetIdiomasGroupByPayload<T extends IdiomasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IdiomasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IdiomasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IdiomasGroupByOutputType[P]>
            : GetScalarType<T[P], IdiomasGroupByOutputType[P]>
        }
      >
    >


  export type IdiomasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_idioma?: boolean
    nombre?: boolean
    codigo?: boolean
    cliente?: boolean | Idiomas$clienteArgs<ExtArgs>
    _count?: boolean | IdiomasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["idiomas"]>

  export type IdiomasSelectScalar = {
    ID_idioma?: boolean
    nombre?: boolean
    codigo?: boolean
  }

  export type IdiomasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | Idiomas$clienteArgs<ExtArgs>
    _count?: boolean | IdiomasCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $IdiomasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Idiomas"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      ID_idioma: number
      nombre: string
      codigo: string
    }, ExtArgs["result"]["idiomas"]>
    composites: {}
  }


  type IdiomasGetPayload<S extends boolean | null | undefined | IdiomasDefaultArgs> = $Result.GetResult<Prisma.$IdiomasPayload, S>

  type IdiomasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<IdiomasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: IdiomasCountAggregateInputType | true
    }

  export interface IdiomasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Idiomas'], meta: { name: 'Idiomas' } }
    /**
     * Find zero or one Idiomas that matches the filter.
     * @param {IdiomasFindUniqueArgs} args - Arguments to find a Idiomas
     * @example
     * // Get one Idiomas
     * const idiomas = await prisma.idiomas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends IdiomasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, IdiomasFindUniqueArgs<ExtArgs>>
    ): Prisma__IdiomasClient<$Result.GetResult<Prisma.$IdiomasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Idiomas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {IdiomasFindUniqueOrThrowArgs} args - Arguments to find a Idiomas
     * @example
     * // Get one Idiomas
     * const idiomas = await prisma.idiomas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends IdiomasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, IdiomasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__IdiomasClient<$Result.GetResult<Prisma.$IdiomasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Idiomas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdiomasFindFirstArgs} args - Arguments to find a Idiomas
     * @example
     * // Get one Idiomas
     * const idiomas = await prisma.idiomas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends IdiomasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, IdiomasFindFirstArgs<ExtArgs>>
    ): Prisma__IdiomasClient<$Result.GetResult<Prisma.$IdiomasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Idiomas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdiomasFindFirstOrThrowArgs} args - Arguments to find a Idiomas
     * @example
     * // Get one Idiomas
     * const idiomas = await prisma.idiomas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends IdiomasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, IdiomasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__IdiomasClient<$Result.GetResult<Prisma.$IdiomasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Idiomas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdiomasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Idiomas
     * const idiomas = await prisma.idiomas.findMany()
     * 
     * // Get first 10 Idiomas
     * const idiomas = await prisma.idiomas.findMany({ take: 10 })
     * 
     * // Only select the `ID_idioma`
     * const idiomasWithID_idiomaOnly = await prisma.idiomas.findMany({ select: { ID_idioma: true } })
     * 
    **/
    findMany<T extends IdiomasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, IdiomasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IdiomasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Idiomas.
     * @param {IdiomasCreateArgs} args - Arguments to create a Idiomas.
     * @example
     * // Create one Idiomas
     * const Idiomas = await prisma.idiomas.create({
     *   data: {
     *     // ... data to create a Idiomas
     *   }
     * })
     * 
    **/
    create<T extends IdiomasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, IdiomasCreateArgs<ExtArgs>>
    ): Prisma__IdiomasClient<$Result.GetResult<Prisma.$IdiomasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Idiomas.
     *     @param {IdiomasCreateManyArgs} args - Arguments to create many Idiomas.
     *     @example
     *     // Create many Idiomas
     *     const idiomas = await prisma.idiomas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends IdiomasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, IdiomasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Idiomas.
     * @param {IdiomasDeleteArgs} args - Arguments to delete one Idiomas.
     * @example
     * // Delete one Idiomas
     * const Idiomas = await prisma.idiomas.delete({
     *   where: {
     *     // ... filter to delete one Idiomas
     *   }
     * })
     * 
    **/
    delete<T extends IdiomasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, IdiomasDeleteArgs<ExtArgs>>
    ): Prisma__IdiomasClient<$Result.GetResult<Prisma.$IdiomasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Idiomas.
     * @param {IdiomasUpdateArgs} args - Arguments to update one Idiomas.
     * @example
     * // Update one Idiomas
     * const idiomas = await prisma.idiomas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends IdiomasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, IdiomasUpdateArgs<ExtArgs>>
    ): Prisma__IdiomasClient<$Result.GetResult<Prisma.$IdiomasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Idiomas.
     * @param {IdiomasDeleteManyArgs} args - Arguments to filter Idiomas to delete.
     * @example
     * // Delete a few Idiomas
     * const { count } = await prisma.idiomas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends IdiomasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, IdiomasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Idiomas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdiomasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Idiomas
     * const idiomas = await prisma.idiomas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends IdiomasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, IdiomasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Idiomas.
     * @param {IdiomasUpsertArgs} args - Arguments to update or create a Idiomas.
     * @example
     * // Update or create a Idiomas
     * const idiomas = await prisma.idiomas.upsert({
     *   create: {
     *     // ... data to create a Idiomas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Idiomas we want to update
     *   }
     * })
    **/
    upsert<T extends IdiomasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, IdiomasUpsertArgs<ExtArgs>>
    ): Prisma__IdiomasClient<$Result.GetResult<Prisma.$IdiomasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Idiomas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdiomasCountArgs} args - Arguments to filter Idiomas to count.
     * @example
     * // Count the number of Idiomas
     * const count = await prisma.idiomas.count({
     *   where: {
     *     // ... the filter for the Idiomas we want to count
     *   }
     * })
    **/
    count<T extends IdiomasCountArgs>(
      args?: Subset<T, IdiomasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IdiomasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Idiomas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdiomasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IdiomasAggregateArgs>(args: Subset<T, IdiomasAggregateArgs>): Prisma.PrismaPromise<GetIdiomasAggregateType<T>>

    /**
     * Group by Idiomas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdiomasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IdiomasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IdiomasGroupByArgs['orderBy'] }
        : { orderBy?: IdiomasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IdiomasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIdiomasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Idiomas model
   */
  readonly fields: IdiomasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Idiomas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IdiomasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    cliente<T extends Idiomas$clienteArgs<ExtArgs> = {}>(args?: Subset<T, Idiomas$clienteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Idiomas model
   */ 
  interface IdiomasFieldRefs {
    readonly ID_idioma: FieldRef<"Idiomas", 'Int'>
    readonly nombre: FieldRef<"Idiomas", 'String'>
    readonly codigo: FieldRef<"Idiomas", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Idiomas findUnique
   */
  export type IdiomasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
    /**
     * Filter, which Idiomas to fetch.
     */
    where: IdiomasWhereUniqueInput
  }


  /**
   * Idiomas findUniqueOrThrow
   */
  export type IdiomasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
    /**
     * Filter, which Idiomas to fetch.
     */
    where: IdiomasWhereUniqueInput
  }


  /**
   * Idiomas findFirst
   */
  export type IdiomasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
    /**
     * Filter, which Idiomas to fetch.
     */
    where?: IdiomasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Idiomas to fetch.
     */
    orderBy?: IdiomasOrderByWithRelationInput | IdiomasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Idiomas.
     */
    cursor?: IdiomasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Idiomas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Idiomas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Idiomas.
     */
    distinct?: IdiomasScalarFieldEnum | IdiomasScalarFieldEnum[]
  }


  /**
   * Idiomas findFirstOrThrow
   */
  export type IdiomasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
    /**
     * Filter, which Idiomas to fetch.
     */
    where?: IdiomasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Idiomas to fetch.
     */
    orderBy?: IdiomasOrderByWithRelationInput | IdiomasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Idiomas.
     */
    cursor?: IdiomasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Idiomas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Idiomas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Idiomas.
     */
    distinct?: IdiomasScalarFieldEnum | IdiomasScalarFieldEnum[]
  }


  /**
   * Idiomas findMany
   */
  export type IdiomasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
    /**
     * Filter, which Idiomas to fetch.
     */
    where?: IdiomasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Idiomas to fetch.
     */
    orderBy?: IdiomasOrderByWithRelationInput | IdiomasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Idiomas.
     */
    cursor?: IdiomasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Idiomas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Idiomas.
     */
    skip?: number
    distinct?: IdiomasScalarFieldEnum | IdiomasScalarFieldEnum[]
  }


  /**
   * Idiomas create
   */
  export type IdiomasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
    /**
     * The data needed to create a Idiomas.
     */
    data: XOR<IdiomasCreateInput, IdiomasUncheckedCreateInput>
  }


  /**
   * Idiomas createMany
   */
  export type IdiomasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Idiomas.
     */
    data: IdiomasCreateManyInput | IdiomasCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Idiomas update
   */
  export type IdiomasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
    /**
     * The data needed to update a Idiomas.
     */
    data: XOR<IdiomasUpdateInput, IdiomasUncheckedUpdateInput>
    /**
     * Choose, which Idiomas to update.
     */
    where: IdiomasWhereUniqueInput
  }


  /**
   * Idiomas updateMany
   */
  export type IdiomasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Idiomas.
     */
    data: XOR<IdiomasUpdateManyMutationInput, IdiomasUncheckedUpdateManyInput>
    /**
     * Filter which Idiomas to update
     */
    where?: IdiomasWhereInput
  }


  /**
   * Idiomas upsert
   */
  export type IdiomasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
    /**
     * The filter to search for the Idiomas to update in case it exists.
     */
    where: IdiomasWhereUniqueInput
    /**
     * In case the Idiomas found by the `where` argument doesn't exist, create a new Idiomas with this data.
     */
    create: XOR<IdiomasCreateInput, IdiomasUncheckedCreateInput>
    /**
     * In case the Idiomas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IdiomasUpdateInput, IdiomasUncheckedUpdateInput>
  }


  /**
   * Idiomas delete
   */
  export type IdiomasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
    /**
     * Filter which Idiomas to delete.
     */
    where: IdiomasWhereUniqueInput
  }


  /**
   * Idiomas deleteMany
   */
  export type IdiomasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Idiomas to delete
     */
    where?: IdiomasWhereInput
  }


  /**
   * Idiomas.cliente
   */
  export type Idiomas$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    cursor?: ClienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }


  /**
   * Idiomas without action
   */
  export type IdiomasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Idiomas
     */
    select?: IdiomasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: IdiomasInclude<ExtArgs> | null
  }



  /**
   * Model Itinerario
   */

  export type AggregateItinerario = {
    _count: ItinerarioCountAggregateOutputType | null
    _avg: ItinerarioAvgAggregateOutputType | null
    _sum: ItinerarioSumAggregateOutputType | null
    _min: ItinerarioMinAggregateOutputType | null
    _max: ItinerarioMaxAggregateOutputType | null
  }

  export type ItinerarioAvgAggregateOutputType = {
    ID_itinerario: number | null
    ID_cliente: number | null
    ID_reserva: number | null
  }

  export type ItinerarioSumAggregateOutputType = {
    ID_itinerario: number | null
    ID_cliente: number | null
    ID_reserva: number | null
  }

  export type ItinerarioMinAggregateOutputType = {
    ID_itinerario: number | null
    ID_cliente: number | null
    ID_reserva: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type ItinerarioMaxAggregateOutputType = {
    ID_itinerario: number | null
    ID_cliente: number | null
    ID_reserva: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type ItinerarioCountAggregateOutputType = {
    ID_itinerario: number
    ID_cliente: number
    ID_reserva: number
    nombre: number
    descripcion: number
    _all: number
  }


  export type ItinerarioAvgAggregateInputType = {
    ID_itinerario?: true
    ID_cliente?: true
    ID_reserva?: true
  }

  export type ItinerarioSumAggregateInputType = {
    ID_itinerario?: true
    ID_cliente?: true
    ID_reserva?: true
  }

  export type ItinerarioMinAggregateInputType = {
    ID_itinerario?: true
    ID_cliente?: true
    ID_reserva?: true
    nombre?: true
    descripcion?: true
  }

  export type ItinerarioMaxAggregateInputType = {
    ID_itinerario?: true
    ID_cliente?: true
    ID_reserva?: true
    nombre?: true
    descripcion?: true
  }

  export type ItinerarioCountAggregateInputType = {
    ID_itinerario?: true
    ID_cliente?: true
    ID_reserva?: true
    nombre?: true
    descripcion?: true
    _all?: true
  }

  export type ItinerarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Itinerario to aggregate.
     */
    where?: ItinerarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Itinerarios to fetch.
     */
    orderBy?: ItinerarioOrderByWithRelationInput | ItinerarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ItinerarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Itinerarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Itinerarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Itinerarios
    **/
    _count?: true | ItinerarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItinerarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItinerarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItinerarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItinerarioMaxAggregateInputType
  }

  export type GetItinerarioAggregateType<T extends ItinerarioAggregateArgs> = {
        [P in keyof T & keyof AggregateItinerario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItinerario[P]>
      : GetScalarType<T[P], AggregateItinerario[P]>
  }




  export type ItinerarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItinerarioWhereInput
    orderBy?: ItinerarioOrderByWithAggregationInput | ItinerarioOrderByWithAggregationInput[]
    by: ItinerarioScalarFieldEnum[] | ItinerarioScalarFieldEnum
    having?: ItinerarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItinerarioCountAggregateInputType | true
    _avg?: ItinerarioAvgAggregateInputType
    _sum?: ItinerarioSumAggregateInputType
    _min?: ItinerarioMinAggregateInputType
    _max?: ItinerarioMaxAggregateInputType
  }

  export type ItinerarioGroupByOutputType = {
    ID_itinerario: number
    ID_cliente: number | null
    ID_reserva: number | null
    nombre: string | null
    descripcion: string | null
    _count: ItinerarioCountAggregateOutputType | null
    _avg: ItinerarioAvgAggregateOutputType | null
    _sum: ItinerarioSumAggregateOutputType | null
    _min: ItinerarioMinAggregateOutputType | null
    _max: ItinerarioMaxAggregateOutputType | null
  }

  type GetItinerarioGroupByPayload<T extends ItinerarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItinerarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItinerarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItinerarioGroupByOutputType[P]>
            : GetScalarType<T[P], ItinerarioGroupByOutputType[P]>
        }
      >
    >


  export type ItinerarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_itinerario?: boolean
    ID_cliente?: boolean
    ID_reserva?: boolean
    nombre?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["itinerario"]>

  export type ItinerarioSelectScalar = {
    ID_itinerario?: boolean
    ID_cliente?: boolean
    ID_reserva?: boolean
    nombre?: boolean
    descripcion?: boolean
  }


  export type $ItinerarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Itinerario"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_itinerario: number
      ID_cliente: number | null
      ID_reserva: number | null
      nombre: string | null
      descripcion: string | null
    }, ExtArgs["result"]["itinerario"]>
    composites: {}
  }


  type ItinerarioGetPayload<S extends boolean | null | undefined | ItinerarioDefaultArgs> = $Result.GetResult<Prisma.$ItinerarioPayload, S>

  type ItinerarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ItinerarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ItinerarioCountAggregateInputType | true
    }

  export interface ItinerarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Itinerario'], meta: { name: 'Itinerario' } }
    /**
     * Find zero or one Itinerario that matches the filter.
     * @param {ItinerarioFindUniqueArgs} args - Arguments to find a Itinerario
     * @example
     * // Get one Itinerario
     * const itinerario = await prisma.itinerario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ItinerarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ItinerarioFindUniqueArgs<ExtArgs>>
    ): Prisma__ItinerarioClient<$Result.GetResult<Prisma.$ItinerarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Itinerario that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ItinerarioFindUniqueOrThrowArgs} args - Arguments to find a Itinerario
     * @example
     * // Get one Itinerario
     * const itinerario = await prisma.itinerario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ItinerarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ItinerarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ItinerarioClient<$Result.GetResult<Prisma.$ItinerarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Itinerario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItinerarioFindFirstArgs} args - Arguments to find a Itinerario
     * @example
     * // Get one Itinerario
     * const itinerario = await prisma.itinerario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ItinerarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ItinerarioFindFirstArgs<ExtArgs>>
    ): Prisma__ItinerarioClient<$Result.GetResult<Prisma.$ItinerarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Itinerario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItinerarioFindFirstOrThrowArgs} args - Arguments to find a Itinerario
     * @example
     * // Get one Itinerario
     * const itinerario = await prisma.itinerario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ItinerarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ItinerarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ItinerarioClient<$Result.GetResult<Prisma.$ItinerarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Itinerarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItinerarioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Itinerarios
     * const itinerarios = await prisma.itinerario.findMany()
     * 
     * // Get first 10 Itinerarios
     * const itinerarios = await prisma.itinerario.findMany({ take: 10 })
     * 
     * // Only select the `ID_itinerario`
     * const itinerarioWithID_itinerarioOnly = await prisma.itinerario.findMany({ select: { ID_itinerario: true } })
     * 
    **/
    findMany<T extends ItinerarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ItinerarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItinerarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Itinerario.
     * @param {ItinerarioCreateArgs} args - Arguments to create a Itinerario.
     * @example
     * // Create one Itinerario
     * const Itinerario = await prisma.itinerario.create({
     *   data: {
     *     // ... data to create a Itinerario
     *   }
     * })
     * 
    **/
    create<T extends ItinerarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ItinerarioCreateArgs<ExtArgs>>
    ): Prisma__ItinerarioClient<$Result.GetResult<Prisma.$ItinerarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Itinerarios.
     *     @param {ItinerarioCreateManyArgs} args - Arguments to create many Itinerarios.
     *     @example
     *     // Create many Itinerarios
     *     const itinerario = await prisma.itinerario.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ItinerarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ItinerarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Itinerario.
     * @param {ItinerarioDeleteArgs} args - Arguments to delete one Itinerario.
     * @example
     * // Delete one Itinerario
     * const Itinerario = await prisma.itinerario.delete({
     *   where: {
     *     // ... filter to delete one Itinerario
     *   }
     * })
     * 
    **/
    delete<T extends ItinerarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ItinerarioDeleteArgs<ExtArgs>>
    ): Prisma__ItinerarioClient<$Result.GetResult<Prisma.$ItinerarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Itinerario.
     * @param {ItinerarioUpdateArgs} args - Arguments to update one Itinerario.
     * @example
     * // Update one Itinerario
     * const itinerario = await prisma.itinerario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ItinerarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ItinerarioUpdateArgs<ExtArgs>>
    ): Prisma__ItinerarioClient<$Result.GetResult<Prisma.$ItinerarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Itinerarios.
     * @param {ItinerarioDeleteManyArgs} args - Arguments to filter Itinerarios to delete.
     * @example
     * // Delete a few Itinerarios
     * const { count } = await prisma.itinerario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ItinerarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ItinerarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Itinerarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItinerarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Itinerarios
     * const itinerario = await prisma.itinerario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ItinerarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ItinerarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Itinerario.
     * @param {ItinerarioUpsertArgs} args - Arguments to update or create a Itinerario.
     * @example
     * // Update or create a Itinerario
     * const itinerario = await prisma.itinerario.upsert({
     *   create: {
     *     // ... data to create a Itinerario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Itinerario we want to update
     *   }
     * })
    **/
    upsert<T extends ItinerarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ItinerarioUpsertArgs<ExtArgs>>
    ): Prisma__ItinerarioClient<$Result.GetResult<Prisma.$ItinerarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Itinerarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItinerarioCountArgs} args - Arguments to filter Itinerarios to count.
     * @example
     * // Count the number of Itinerarios
     * const count = await prisma.itinerario.count({
     *   where: {
     *     // ... the filter for the Itinerarios we want to count
     *   }
     * })
    **/
    count<T extends ItinerarioCountArgs>(
      args?: Subset<T, ItinerarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItinerarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Itinerario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItinerarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItinerarioAggregateArgs>(args: Subset<T, ItinerarioAggregateArgs>): Prisma.PrismaPromise<GetItinerarioAggregateType<T>>

    /**
     * Group by Itinerario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItinerarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ItinerarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ItinerarioGroupByArgs['orderBy'] }
        : { orderBy?: ItinerarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ItinerarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItinerarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Itinerario model
   */
  readonly fields: ItinerarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Itinerario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ItinerarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Itinerario model
   */ 
  interface ItinerarioFieldRefs {
    readonly ID_itinerario: FieldRef<"Itinerario", 'Int'>
    readonly ID_cliente: FieldRef<"Itinerario", 'Int'>
    readonly ID_reserva: FieldRef<"Itinerario", 'Int'>
    readonly nombre: FieldRef<"Itinerario", 'String'>
    readonly descripcion: FieldRef<"Itinerario", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Itinerario findUnique
   */
  export type ItinerarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Itinerario
     */
    select?: ItinerarioSelect<ExtArgs> | null
    /**
     * Filter, which Itinerario to fetch.
     */
    where: ItinerarioWhereUniqueInput
  }


  /**
   * Itinerario findUniqueOrThrow
   */
  export type ItinerarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Itinerario
     */
    select?: ItinerarioSelect<ExtArgs> | null
    /**
     * Filter, which Itinerario to fetch.
     */
    where: ItinerarioWhereUniqueInput
  }


  /**
   * Itinerario findFirst
   */
  export type ItinerarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Itinerario
     */
    select?: ItinerarioSelect<ExtArgs> | null
    /**
     * Filter, which Itinerario to fetch.
     */
    where?: ItinerarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Itinerarios to fetch.
     */
    orderBy?: ItinerarioOrderByWithRelationInput | ItinerarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Itinerarios.
     */
    cursor?: ItinerarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Itinerarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Itinerarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Itinerarios.
     */
    distinct?: ItinerarioScalarFieldEnum | ItinerarioScalarFieldEnum[]
  }


  /**
   * Itinerario findFirstOrThrow
   */
  export type ItinerarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Itinerario
     */
    select?: ItinerarioSelect<ExtArgs> | null
    /**
     * Filter, which Itinerario to fetch.
     */
    where?: ItinerarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Itinerarios to fetch.
     */
    orderBy?: ItinerarioOrderByWithRelationInput | ItinerarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Itinerarios.
     */
    cursor?: ItinerarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Itinerarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Itinerarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Itinerarios.
     */
    distinct?: ItinerarioScalarFieldEnum | ItinerarioScalarFieldEnum[]
  }


  /**
   * Itinerario findMany
   */
  export type ItinerarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Itinerario
     */
    select?: ItinerarioSelect<ExtArgs> | null
    /**
     * Filter, which Itinerarios to fetch.
     */
    where?: ItinerarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Itinerarios to fetch.
     */
    orderBy?: ItinerarioOrderByWithRelationInput | ItinerarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Itinerarios.
     */
    cursor?: ItinerarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Itinerarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Itinerarios.
     */
    skip?: number
    distinct?: ItinerarioScalarFieldEnum | ItinerarioScalarFieldEnum[]
  }


  /**
   * Itinerario create
   */
  export type ItinerarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Itinerario
     */
    select?: ItinerarioSelect<ExtArgs> | null
    /**
     * The data needed to create a Itinerario.
     */
    data?: XOR<ItinerarioCreateInput, ItinerarioUncheckedCreateInput>
  }


  /**
   * Itinerario createMany
   */
  export type ItinerarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Itinerarios.
     */
    data: ItinerarioCreateManyInput | ItinerarioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Itinerario update
   */
  export type ItinerarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Itinerario
     */
    select?: ItinerarioSelect<ExtArgs> | null
    /**
     * The data needed to update a Itinerario.
     */
    data: XOR<ItinerarioUpdateInput, ItinerarioUncheckedUpdateInput>
    /**
     * Choose, which Itinerario to update.
     */
    where: ItinerarioWhereUniqueInput
  }


  /**
   * Itinerario updateMany
   */
  export type ItinerarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Itinerarios.
     */
    data: XOR<ItinerarioUpdateManyMutationInput, ItinerarioUncheckedUpdateManyInput>
    /**
     * Filter which Itinerarios to update
     */
    where?: ItinerarioWhereInput
  }


  /**
   * Itinerario upsert
   */
  export type ItinerarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Itinerario
     */
    select?: ItinerarioSelect<ExtArgs> | null
    /**
     * The filter to search for the Itinerario to update in case it exists.
     */
    where: ItinerarioWhereUniqueInput
    /**
     * In case the Itinerario found by the `where` argument doesn't exist, create a new Itinerario with this data.
     */
    create: XOR<ItinerarioCreateInput, ItinerarioUncheckedCreateInput>
    /**
     * In case the Itinerario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ItinerarioUpdateInput, ItinerarioUncheckedUpdateInput>
  }


  /**
   * Itinerario delete
   */
  export type ItinerarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Itinerario
     */
    select?: ItinerarioSelect<ExtArgs> | null
    /**
     * Filter which Itinerario to delete.
     */
    where: ItinerarioWhereUniqueInput
  }


  /**
   * Itinerario deleteMany
   */
  export type ItinerarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Itinerarios to delete
     */
    where?: ItinerarioWhereInput
  }


  /**
   * Itinerario without action
   */
  export type ItinerarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Itinerario
     */
    select?: ItinerarioSelect<ExtArgs> | null
  }



  /**
   * Model Pagos
   */

  export type AggregatePagos = {
    _count: PagosCountAggregateOutputType | null
    _avg: PagosAvgAggregateOutputType | null
    _sum: PagosSumAggregateOutputType | null
    _min: PagosMinAggregateOutputType | null
    _max: PagosMaxAggregateOutputType | null
  }

  export type PagosAvgAggregateOutputType = {
    ID_pago: number | null
    ID_cliente: number | null
    ID_tipo_m: number | null
    id_detalle_carrito: number | null
    cvv: number | null
  }

  export type PagosSumAggregateOutputType = {
    ID_pago: number | null
    ID_cliente: number | null
    ID_tipo_m: number | null
    id_detalle_carrito: number | null
    cvv: number | null
  }

  export type PagosMinAggregateOutputType = {
    ID_pago: number | null
    ID_cliente: number | null
    ID_tipo_m: number | null
    id_detalle_carrito: number | null
    nombre_titular: string | null
    numero_tarjeta: string | null
    fecha_expiracion: Date | null
    cvv: number | null
    direccion: string | null
  }

  export type PagosMaxAggregateOutputType = {
    ID_pago: number | null
    ID_cliente: number | null
    ID_tipo_m: number | null
    id_detalle_carrito: number | null
    nombre_titular: string | null
    numero_tarjeta: string | null
    fecha_expiracion: Date | null
    cvv: number | null
    direccion: string | null
  }

  export type PagosCountAggregateOutputType = {
    ID_pago: number
    ID_cliente: number
    ID_tipo_m: number
    id_detalle_carrito: number
    nombre_titular: number
    numero_tarjeta: number
    fecha_expiracion: number
    cvv: number
    direccion: number
    _all: number
  }


  export type PagosAvgAggregateInputType = {
    ID_pago?: true
    ID_cliente?: true
    ID_tipo_m?: true
    id_detalle_carrito?: true
    cvv?: true
  }

  export type PagosSumAggregateInputType = {
    ID_pago?: true
    ID_cliente?: true
    ID_tipo_m?: true
    id_detalle_carrito?: true
    cvv?: true
  }

  export type PagosMinAggregateInputType = {
    ID_pago?: true
    ID_cliente?: true
    ID_tipo_m?: true
    id_detalle_carrito?: true
    nombre_titular?: true
    numero_tarjeta?: true
    fecha_expiracion?: true
    cvv?: true
    direccion?: true
  }

  export type PagosMaxAggregateInputType = {
    ID_pago?: true
    ID_cliente?: true
    ID_tipo_m?: true
    id_detalle_carrito?: true
    nombre_titular?: true
    numero_tarjeta?: true
    fecha_expiracion?: true
    cvv?: true
    direccion?: true
  }

  export type PagosCountAggregateInputType = {
    ID_pago?: true
    ID_cliente?: true
    ID_tipo_m?: true
    id_detalle_carrito?: true
    nombre_titular?: true
    numero_tarjeta?: true
    fecha_expiracion?: true
    cvv?: true
    direccion?: true
    _all?: true
  }

  export type PagosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagos to aggregate.
     */
    where?: PagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagosOrderByWithRelationInput | PagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pagos
    **/
    _count?: true | PagosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PagosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PagosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagosMaxAggregateInputType
  }

  export type GetPagosAggregateType<T extends PagosAggregateArgs> = {
        [P in keyof T & keyof AggregatePagos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePagos[P]>
      : GetScalarType<T[P], AggregatePagos[P]>
  }




  export type PagosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagosWhereInput
    orderBy?: PagosOrderByWithAggregationInput | PagosOrderByWithAggregationInput[]
    by: PagosScalarFieldEnum[] | PagosScalarFieldEnum
    having?: PagosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagosCountAggregateInputType | true
    _avg?: PagosAvgAggregateInputType
    _sum?: PagosSumAggregateInputType
    _min?: PagosMinAggregateInputType
    _max?: PagosMaxAggregateInputType
  }

  export type PagosGroupByOutputType = {
    ID_pago: number
    ID_cliente: number | null
    ID_tipo_m: number | null
    id_detalle_carrito: number | null
    nombre_titular: string
    numero_tarjeta: string
    fecha_expiracion: Date | null
    cvv: number | null
    direccion: string | null
    _count: PagosCountAggregateOutputType | null
    _avg: PagosAvgAggregateOutputType | null
    _sum: PagosSumAggregateOutputType | null
    _min: PagosMinAggregateOutputType | null
    _max: PagosMaxAggregateOutputType | null
  }

  type GetPagosGroupByPayload<T extends PagosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagosGroupByOutputType[P]>
            : GetScalarType<T[P], PagosGroupByOutputType[P]>
        }
      >
    >


  export type PagosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_pago?: boolean
    ID_cliente?: boolean
    ID_tipo_m?: boolean
    id_detalle_carrito?: boolean
    nombre_titular?: boolean
    numero_tarjeta?: boolean
    fecha_expiracion?: boolean
    cvv?: boolean
    direccion?: boolean
  }, ExtArgs["result"]["pagos"]>

  export type PagosSelectScalar = {
    ID_pago?: boolean
    ID_cliente?: boolean
    ID_tipo_m?: boolean
    id_detalle_carrito?: boolean
    nombre_titular?: boolean
    numero_tarjeta?: boolean
    fecha_expiracion?: boolean
    cvv?: boolean
    direccion?: boolean
  }


  export type $PagosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pagos"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_pago: number
      ID_cliente: number | null
      ID_tipo_m: number | null
      id_detalle_carrito: number | null
      nombre_titular: string
      numero_tarjeta: string
      fecha_expiracion: Date | null
      cvv: number | null
      direccion: string | null
    }, ExtArgs["result"]["pagos"]>
    composites: {}
  }


  type PagosGetPayload<S extends boolean | null | undefined | PagosDefaultArgs> = $Result.GetResult<Prisma.$PagosPayload, S>

  type PagosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PagosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PagosCountAggregateInputType | true
    }

  export interface PagosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pagos'], meta: { name: 'Pagos' } }
    /**
     * Find zero or one Pagos that matches the filter.
     * @param {PagosFindUniqueArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends PagosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, PagosFindUniqueArgs<ExtArgs>>
    ): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Pagos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {PagosFindUniqueOrThrowArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends PagosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, PagosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosFindFirstArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends PagosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, PagosFindFirstArgs<ExtArgs>>
    ): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Pagos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosFindFirstOrThrowArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends PagosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, PagosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagos
     * const pagos = await prisma.pagos.findMany()
     * 
     * // Get first 10 Pagos
     * const pagos = await prisma.pagos.findMany({ take: 10 })
     * 
     * // Only select the `ID_pago`
     * const pagosWithID_pagoOnly = await prisma.pagos.findMany({ select: { ID_pago: true } })
     * 
    **/
    findMany<T extends PagosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PagosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Pagos.
     * @param {PagosCreateArgs} args - Arguments to create a Pagos.
     * @example
     * // Create one Pagos
     * const Pagos = await prisma.pagos.create({
     *   data: {
     *     // ... data to create a Pagos
     *   }
     * })
     * 
    **/
    create<T extends PagosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, PagosCreateArgs<ExtArgs>>
    ): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Pagos.
     *     @param {PagosCreateManyArgs} args - Arguments to create many Pagos.
     *     @example
     *     // Create many Pagos
     *     const pagos = await prisma.pagos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends PagosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PagosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Pagos.
     * @param {PagosDeleteArgs} args - Arguments to delete one Pagos.
     * @example
     * // Delete one Pagos
     * const Pagos = await prisma.pagos.delete({
     *   where: {
     *     // ... filter to delete one Pagos
     *   }
     * })
     * 
    **/
    delete<T extends PagosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, PagosDeleteArgs<ExtArgs>>
    ): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Pagos.
     * @param {PagosUpdateArgs} args - Arguments to update one Pagos.
     * @example
     * // Update one Pagos
     * const pagos = await prisma.pagos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends PagosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, PagosUpdateArgs<ExtArgs>>
    ): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Pagos.
     * @param {PagosDeleteManyArgs} args - Arguments to filter Pagos to delete.
     * @example
     * // Delete a few Pagos
     * const { count } = await prisma.pagos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends PagosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PagosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagos
     * const pagos = await prisma.pagos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends PagosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, PagosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pagos.
     * @param {PagosUpsertArgs} args - Arguments to update or create a Pagos.
     * @example
     * // Update or create a Pagos
     * const pagos = await prisma.pagos.upsert({
     *   create: {
     *     // ... data to create a Pagos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pagos we want to update
     *   }
     * })
    **/
    upsert<T extends PagosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, PagosUpsertArgs<ExtArgs>>
    ): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosCountArgs} args - Arguments to filter Pagos to count.
     * @example
     * // Count the number of Pagos
     * const count = await prisma.pagos.count({
     *   where: {
     *     // ... the filter for the Pagos we want to count
     *   }
     * })
    **/
    count<T extends PagosCountArgs>(
      args?: Subset<T, PagosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagosAggregateArgs>(args: Subset<T, PagosAggregateArgs>): Prisma.PrismaPromise<GetPagosAggregateType<T>>

    /**
     * Group by Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PagosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PagosGroupByArgs['orderBy'] }
        : { orderBy?: PagosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PagosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pagos model
   */
  readonly fields: PagosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pagos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PagosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Pagos model
   */ 
  interface PagosFieldRefs {
    readonly ID_pago: FieldRef<"Pagos", 'Int'>
    readonly ID_cliente: FieldRef<"Pagos", 'Int'>
    readonly ID_tipo_m: FieldRef<"Pagos", 'Int'>
    readonly id_detalle_carrito: FieldRef<"Pagos", 'Int'>
    readonly nombre_titular: FieldRef<"Pagos", 'String'>
    readonly numero_tarjeta: FieldRef<"Pagos", 'String'>
    readonly fecha_expiracion: FieldRef<"Pagos", 'DateTime'>
    readonly cvv: FieldRef<"Pagos", 'Int'>
    readonly direccion: FieldRef<"Pagos", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Pagos findUnique
   */
  export type PagosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where: PagosWhereUniqueInput
  }


  /**
   * Pagos findUniqueOrThrow
   */
  export type PagosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where: PagosWhereUniqueInput
  }


  /**
   * Pagos findFirst
   */
  export type PagosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where?: PagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagosOrderByWithRelationInput | PagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }


  /**
   * Pagos findFirstOrThrow
   */
  export type PagosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where?: PagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagosOrderByWithRelationInput | PagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }


  /**
   * Pagos findMany
   */
  export type PagosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where?: PagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagosOrderByWithRelationInput | PagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pagos.
     */
    cursor?: PagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }


  /**
   * Pagos create
   */
  export type PagosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * The data needed to create a Pagos.
     */
    data: XOR<PagosCreateInput, PagosUncheckedCreateInput>
  }


  /**
   * Pagos createMany
   */
  export type PagosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pagos.
     */
    data: PagosCreateManyInput | PagosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Pagos update
   */
  export type PagosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * The data needed to update a Pagos.
     */
    data: XOR<PagosUpdateInput, PagosUncheckedUpdateInput>
    /**
     * Choose, which Pagos to update.
     */
    where: PagosWhereUniqueInput
  }


  /**
   * Pagos updateMany
   */
  export type PagosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pagos.
     */
    data: XOR<PagosUpdateManyMutationInput, PagosUncheckedUpdateManyInput>
    /**
     * Filter which Pagos to update
     */
    where?: PagosWhereInput
  }


  /**
   * Pagos upsert
   */
  export type PagosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * The filter to search for the Pagos to update in case it exists.
     */
    where: PagosWhereUniqueInput
    /**
     * In case the Pagos found by the `where` argument doesn't exist, create a new Pagos with this data.
     */
    create: XOR<PagosCreateInput, PagosUncheckedCreateInput>
    /**
     * In case the Pagos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PagosUpdateInput, PagosUncheckedUpdateInput>
  }


  /**
   * Pagos delete
   */
  export type PagosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Filter which Pagos to delete.
     */
    where: PagosWhereUniqueInput
  }


  /**
   * Pagos deleteMany
   */
  export type PagosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagos to delete
     */
    where?: PagosWhereInput
  }


  /**
   * Pagos without action
   */
  export type PagosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
  }



  /**
   * Model RecuperacionContrasena
   */

  export type AggregateRecuperacionContrasena = {
    _count: RecuperacionContrasenaCountAggregateOutputType | null
    _avg: RecuperacionContrasenaAvgAggregateOutputType | null
    _sum: RecuperacionContrasenaSumAggregateOutputType | null
    _min: RecuperacionContrasenaMinAggregateOutputType | null
    _max: RecuperacionContrasenaMaxAggregateOutputType | null
  }

  export type RecuperacionContrasenaAvgAggregateOutputType = {
    ID_request: number | null
    ID_cliente: number | null
    ID_admin: number | null
  }

  export type RecuperacionContrasenaSumAggregateOutputType = {
    ID_request: number | null
    ID_cliente: number | null
    ID_admin: number | null
  }

  export type RecuperacionContrasenaMinAggregateOutputType = {
    ID_request: number | null
    ID_cliente: number | null
    ID_admin: number | null
    Token: string | null
    Fecha: Date | null
    Estado: string | null
  }

  export type RecuperacionContrasenaMaxAggregateOutputType = {
    ID_request: number | null
    ID_cliente: number | null
    ID_admin: number | null
    Token: string | null
    Fecha: Date | null
    Estado: string | null
  }

  export type RecuperacionContrasenaCountAggregateOutputType = {
    ID_request: number
    ID_cliente: number
    ID_admin: number
    Token: number
    Fecha: number
    Estado: number
    _all: number
  }


  export type RecuperacionContrasenaAvgAggregateInputType = {
    ID_request?: true
    ID_cliente?: true
    ID_admin?: true
  }

  export type RecuperacionContrasenaSumAggregateInputType = {
    ID_request?: true
    ID_cliente?: true
    ID_admin?: true
  }

  export type RecuperacionContrasenaMinAggregateInputType = {
    ID_request?: true
    ID_cliente?: true
    ID_admin?: true
    Token?: true
    Fecha?: true
    Estado?: true
  }

  export type RecuperacionContrasenaMaxAggregateInputType = {
    ID_request?: true
    ID_cliente?: true
    ID_admin?: true
    Token?: true
    Fecha?: true
    Estado?: true
  }

  export type RecuperacionContrasenaCountAggregateInputType = {
    ID_request?: true
    ID_cliente?: true
    ID_admin?: true
    Token?: true
    Fecha?: true
    Estado?: true
    _all?: true
  }

  export type RecuperacionContrasenaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RecuperacionContrasena to aggregate.
     */
    where?: RecuperacionContrasenaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RecuperacionContrasenas to fetch.
     */
    orderBy?: RecuperacionContrasenaOrderByWithRelationInput | RecuperacionContrasenaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RecuperacionContrasenaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RecuperacionContrasenas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RecuperacionContrasenas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RecuperacionContrasenas
    **/
    _count?: true | RecuperacionContrasenaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RecuperacionContrasenaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RecuperacionContrasenaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RecuperacionContrasenaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RecuperacionContrasenaMaxAggregateInputType
  }

  export type GetRecuperacionContrasenaAggregateType<T extends RecuperacionContrasenaAggregateArgs> = {
        [P in keyof T & keyof AggregateRecuperacionContrasena]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRecuperacionContrasena[P]>
      : GetScalarType<T[P], AggregateRecuperacionContrasena[P]>
  }




  export type RecuperacionContrasenaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecuperacionContrasenaWhereInput
    orderBy?: RecuperacionContrasenaOrderByWithAggregationInput | RecuperacionContrasenaOrderByWithAggregationInput[]
    by: RecuperacionContrasenaScalarFieldEnum[] | RecuperacionContrasenaScalarFieldEnum
    having?: RecuperacionContrasenaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RecuperacionContrasenaCountAggregateInputType | true
    _avg?: RecuperacionContrasenaAvgAggregateInputType
    _sum?: RecuperacionContrasenaSumAggregateInputType
    _min?: RecuperacionContrasenaMinAggregateInputType
    _max?: RecuperacionContrasenaMaxAggregateInputType
  }

  export type RecuperacionContrasenaGroupByOutputType = {
    ID_request: number
    ID_cliente: number | null
    ID_admin: number | null
    Token: string
    Fecha: Date | null
    Estado: string | null
    _count: RecuperacionContrasenaCountAggregateOutputType | null
    _avg: RecuperacionContrasenaAvgAggregateOutputType | null
    _sum: RecuperacionContrasenaSumAggregateOutputType | null
    _min: RecuperacionContrasenaMinAggregateOutputType | null
    _max: RecuperacionContrasenaMaxAggregateOutputType | null
  }

  type GetRecuperacionContrasenaGroupByPayload<T extends RecuperacionContrasenaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RecuperacionContrasenaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RecuperacionContrasenaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RecuperacionContrasenaGroupByOutputType[P]>
            : GetScalarType<T[P], RecuperacionContrasenaGroupByOutputType[P]>
        }
      >
    >


  export type RecuperacionContrasenaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_request?: boolean
    ID_cliente?: boolean
    ID_admin?: boolean
    Token?: boolean
    Fecha?: boolean
    Estado?: boolean
  }, ExtArgs["result"]["recuperacionContrasena"]>

  export type RecuperacionContrasenaSelectScalar = {
    ID_request?: boolean
    ID_cliente?: boolean
    ID_admin?: boolean
    Token?: boolean
    Fecha?: boolean
    Estado?: boolean
  }


  export type $RecuperacionContrasenaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RecuperacionContrasena"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_request: number
      ID_cliente: number | null
      ID_admin: number | null
      Token: string
      Fecha: Date | null
      Estado: string | null
    }, ExtArgs["result"]["recuperacionContrasena"]>
    composites: {}
  }


  type RecuperacionContrasenaGetPayload<S extends boolean | null | undefined | RecuperacionContrasenaDefaultArgs> = $Result.GetResult<Prisma.$RecuperacionContrasenaPayload, S>

  type RecuperacionContrasenaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RecuperacionContrasenaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RecuperacionContrasenaCountAggregateInputType | true
    }

  export interface RecuperacionContrasenaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RecuperacionContrasena'], meta: { name: 'RecuperacionContrasena' } }
    /**
     * Find zero or one RecuperacionContrasena that matches the filter.
     * @param {RecuperacionContrasenaFindUniqueArgs} args - Arguments to find a RecuperacionContrasena
     * @example
     * // Get one RecuperacionContrasena
     * const recuperacionContrasena = await prisma.recuperacionContrasena.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends RecuperacionContrasenaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, RecuperacionContrasenaFindUniqueArgs<ExtArgs>>
    ): Prisma__RecuperacionContrasenaClient<$Result.GetResult<Prisma.$RecuperacionContrasenaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one RecuperacionContrasena that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {RecuperacionContrasenaFindUniqueOrThrowArgs} args - Arguments to find a RecuperacionContrasena
     * @example
     * // Get one RecuperacionContrasena
     * const recuperacionContrasena = await prisma.recuperacionContrasena.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends RecuperacionContrasenaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, RecuperacionContrasenaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__RecuperacionContrasenaClient<$Result.GetResult<Prisma.$RecuperacionContrasenaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first RecuperacionContrasena that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecuperacionContrasenaFindFirstArgs} args - Arguments to find a RecuperacionContrasena
     * @example
     * // Get one RecuperacionContrasena
     * const recuperacionContrasena = await prisma.recuperacionContrasena.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends RecuperacionContrasenaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, RecuperacionContrasenaFindFirstArgs<ExtArgs>>
    ): Prisma__RecuperacionContrasenaClient<$Result.GetResult<Prisma.$RecuperacionContrasenaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first RecuperacionContrasena that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecuperacionContrasenaFindFirstOrThrowArgs} args - Arguments to find a RecuperacionContrasena
     * @example
     * // Get one RecuperacionContrasena
     * const recuperacionContrasena = await prisma.recuperacionContrasena.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends RecuperacionContrasenaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, RecuperacionContrasenaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__RecuperacionContrasenaClient<$Result.GetResult<Prisma.$RecuperacionContrasenaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more RecuperacionContrasenas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecuperacionContrasenaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RecuperacionContrasenas
     * const recuperacionContrasenas = await prisma.recuperacionContrasena.findMany()
     * 
     * // Get first 10 RecuperacionContrasenas
     * const recuperacionContrasenas = await prisma.recuperacionContrasena.findMany({ take: 10 })
     * 
     * // Only select the `ID_request`
     * const recuperacionContrasenaWithID_requestOnly = await prisma.recuperacionContrasena.findMany({ select: { ID_request: true } })
     * 
    **/
    findMany<T extends RecuperacionContrasenaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, RecuperacionContrasenaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecuperacionContrasenaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a RecuperacionContrasena.
     * @param {RecuperacionContrasenaCreateArgs} args - Arguments to create a RecuperacionContrasena.
     * @example
     * // Create one RecuperacionContrasena
     * const RecuperacionContrasena = await prisma.recuperacionContrasena.create({
     *   data: {
     *     // ... data to create a RecuperacionContrasena
     *   }
     * })
     * 
    **/
    create<T extends RecuperacionContrasenaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, RecuperacionContrasenaCreateArgs<ExtArgs>>
    ): Prisma__RecuperacionContrasenaClient<$Result.GetResult<Prisma.$RecuperacionContrasenaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many RecuperacionContrasenas.
     *     @param {RecuperacionContrasenaCreateManyArgs} args - Arguments to create many RecuperacionContrasenas.
     *     @example
     *     // Create many RecuperacionContrasenas
     *     const recuperacionContrasena = await prisma.recuperacionContrasena.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends RecuperacionContrasenaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, RecuperacionContrasenaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RecuperacionContrasena.
     * @param {RecuperacionContrasenaDeleteArgs} args - Arguments to delete one RecuperacionContrasena.
     * @example
     * // Delete one RecuperacionContrasena
     * const RecuperacionContrasena = await prisma.recuperacionContrasena.delete({
     *   where: {
     *     // ... filter to delete one RecuperacionContrasena
     *   }
     * })
     * 
    **/
    delete<T extends RecuperacionContrasenaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, RecuperacionContrasenaDeleteArgs<ExtArgs>>
    ): Prisma__RecuperacionContrasenaClient<$Result.GetResult<Prisma.$RecuperacionContrasenaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one RecuperacionContrasena.
     * @param {RecuperacionContrasenaUpdateArgs} args - Arguments to update one RecuperacionContrasena.
     * @example
     * // Update one RecuperacionContrasena
     * const recuperacionContrasena = await prisma.recuperacionContrasena.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends RecuperacionContrasenaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, RecuperacionContrasenaUpdateArgs<ExtArgs>>
    ): Prisma__RecuperacionContrasenaClient<$Result.GetResult<Prisma.$RecuperacionContrasenaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more RecuperacionContrasenas.
     * @param {RecuperacionContrasenaDeleteManyArgs} args - Arguments to filter RecuperacionContrasenas to delete.
     * @example
     * // Delete a few RecuperacionContrasenas
     * const { count } = await prisma.recuperacionContrasena.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends RecuperacionContrasenaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, RecuperacionContrasenaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RecuperacionContrasenas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecuperacionContrasenaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RecuperacionContrasenas
     * const recuperacionContrasena = await prisma.recuperacionContrasena.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends RecuperacionContrasenaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, RecuperacionContrasenaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RecuperacionContrasena.
     * @param {RecuperacionContrasenaUpsertArgs} args - Arguments to update or create a RecuperacionContrasena.
     * @example
     * // Update or create a RecuperacionContrasena
     * const recuperacionContrasena = await prisma.recuperacionContrasena.upsert({
     *   create: {
     *     // ... data to create a RecuperacionContrasena
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RecuperacionContrasena we want to update
     *   }
     * })
    **/
    upsert<T extends RecuperacionContrasenaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, RecuperacionContrasenaUpsertArgs<ExtArgs>>
    ): Prisma__RecuperacionContrasenaClient<$Result.GetResult<Prisma.$RecuperacionContrasenaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of RecuperacionContrasenas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecuperacionContrasenaCountArgs} args - Arguments to filter RecuperacionContrasenas to count.
     * @example
     * // Count the number of RecuperacionContrasenas
     * const count = await prisma.recuperacionContrasena.count({
     *   where: {
     *     // ... the filter for the RecuperacionContrasenas we want to count
     *   }
     * })
    **/
    count<T extends RecuperacionContrasenaCountArgs>(
      args?: Subset<T, RecuperacionContrasenaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RecuperacionContrasenaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RecuperacionContrasena.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecuperacionContrasenaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RecuperacionContrasenaAggregateArgs>(args: Subset<T, RecuperacionContrasenaAggregateArgs>): Prisma.PrismaPromise<GetRecuperacionContrasenaAggregateType<T>>

    /**
     * Group by RecuperacionContrasena.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecuperacionContrasenaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RecuperacionContrasenaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RecuperacionContrasenaGroupByArgs['orderBy'] }
        : { orderBy?: RecuperacionContrasenaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RecuperacionContrasenaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRecuperacionContrasenaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RecuperacionContrasena model
   */
  readonly fields: RecuperacionContrasenaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RecuperacionContrasena.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RecuperacionContrasenaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the RecuperacionContrasena model
   */ 
  interface RecuperacionContrasenaFieldRefs {
    readonly ID_request: FieldRef<"RecuperacionContrasena", 'Int'>
    readonly ID_cliente: FieldRef<"RecuperacionContrasena", 'Int'>
    readonly ID_admin: FieldRef<"RecuperacionContrasena", 'Int'>
    readonly Token: FieldRef<"RecuperacionContrasena", 'String'>
    readonly Fecha: FieldRef<"RecuperacionContrasena", 'DateTime'>
    readonly Estado: FieldRef<"RecuperacionContrasena", 'String'>
  }
    

  // Custom InputTypes

  /**
   * RecuperacionContrasena findUnique
   */
  export type RecuperacionContrasenaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecuperacionContrasena
     */
    select?: RecuperacionContrasenaSelect<ExtArgs> | null
    /**
     * Filter, which RecuperacionContrasena to fetch.
     */
    where: RecuperacionContrasenaWhereUniqueInput
  }


  /**
   * RecuperacionContrasena findUniqueOrThrow
   */
  export type RecuperacionContrasenaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecuperacionContrasena
     */
    select?: RecuperacionContrasenaSelect<ExtArgs> | null
    /**
     * Filter, which RecuperacionContrasena to fetch.
     */
    where: RecuperacionContrasenaWhereUniqueInput
  }


  /**
   * RecuperacionContrasena findFirst
   */
  export type RecuperacionContrasenaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecuperacionContrasena
     */
    select?: RecuperacionContrasenaSelect<ExtArgs> | null
    /**
     * Filter, which RecuperacionContrasena to fetch.
     */
    where?: RecuperacionContrasenaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RecuperacionContrasenas to fetch.
     */
    orderBy?: RecuperacionContrasenaOrderByWithRelationInput | RecuperacionContrasenaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RecuperacionContrasenas.
     */
    cursor?: RecuperacionContrasenaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RecuperacionContrasenas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RecuperacionContrasenas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RecuperacionContrasenas.
     */
    distinct?: RecuperacionContrasenaScalarFieldEnum | RecuperacionContrasenaScalarFieldEnum[]
  }


  /**
   * RecuperacionContrasena findFirstOrThrow
   */
  export type RecuperacionContrasenaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecuperacionContrasena
     */
    select?: RecuperacionContrasenaSelect<ExtArgs> | null
    /**
     * Filter, which RecuperacionContrasena to fetch.
     */
    where?: RecuperacionContrasenaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RecuperacionContrasenas to fetch.
     */
    orderBy?: RecuperacionContrasenaOrderByWithRelationInput | RecuperacionContrasenaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RecuperacionContrasenas.
     */
    cursor?: RecuperacionContrasenaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RecuperacionContrasenas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RecuperacionContrasenas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RecuperacionContrasenas.
     */
    distinct?: RecuperacionContrasenaScalarFieldEnum | RecuperacionContrasenaScalarFieldEnum[]
  }


  /**
   * RecuperacionContrasena findMany
   */
  export type RecuperacionContrasenaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecuperacionContrasena
     */
    select?: RecuperacionContrasenaSelect<ExtArgs> | null
    /**
     * Filter, which RecuperacionContrasenas to fetch.
     */
    where?: RecuperacionContrasenaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RecuperacionContrasenas to fetch.
     */
    orderBy?: RecuperacionContrasenaOrderByWithRelationInput | RecuperacionContrasenaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RecuperacionContrasenas.
     */
    cursor?: RecuperacionContrasenaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RecuperacionContrasenas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RecuperacionContrasenas.
     */
    skip?: number
    distinct?: RecuperacionContrasenaScalarFieldEnum | RecuperacionContrasenaScalarFieldEnum[]
  }


  /**
   * RecuperacionContrasena create
   */
  export type RecuperacionContrasenaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecuperacionContrasena
     */
    select?: RecuperacionContrasenaSelect<ExtArgs> | null
    /**
     * The data needed to create a RecuperacionContrasena.
     */
    data: XOR<RecuperacionContrasenaCreateInput, RecuperacionContrasenaUncheckedCreateInput>
  }


  /**
   * RecuperacionContrasena createMany
   */
  export type RecuperacionContrasenaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RecuperacionContrasenas.
     */
    data: RecuperacionContrasenaCreateManyInput | RecuperacionContrasenaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * RecuperacionContrasena update
   */
  export type RecuperacionContrasenaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecuperacionContrasena
     */
    select?: RecuperacionContrasenaSelect<ExtArgs> | null
    /**
     * The data needed to update a RecuperacionContrasena.
     */
    data: XOR<RecuperacionContrasenaUpdateInput, RecuperacionContrasenaUncheckedUpdateInput>
    /**
     * Choose, which RecuperacionContrasena to update.
     */
    where: RecuperacionContrasenaWhereUniqueInput
  }


  /**
   * RecuperacionContrasena updateMany
   */
  export type RecuperacionContrasenaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RecuperacionContrasenas.
     */
    data: XOR<RecuperacionContrasenaUpdateManyMutationInput, RecuperacionContrasenaUncheckedUpdateManyInput>
    /**
     * Filter which RecuperacionContrasenas to update
     */
    where?: RecuperacionContrasenaWhereInput
  }


  /**
   * RecuperacionContrasena upsert
   */
  export type RecuperacionContrasenaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecuperacionContrasena
     */
    select?: RecuperacionContrasenaSelect<ExtArgs> | null
    /**
     * The filter to search for the RecuperacionContrasena to update in case it exists.
     */
    where: RecuperacionContrasenaWhereUniqueInput
    /**
     * In case the RecuperacionContrasena found by the `where` argument doesn't exist, create a new RecuperacionContrasena with this data.
     */
    create: XOR<RecuperacionContrasenaCreateInput, RecuperacionContrasenaUncheckedCreateInput>
    /**
     * In case the RecuperacionContrasena was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RecuperacionContrasenaUpdateInput, RecuperacionContrasenaUncheckedUpdateInput>
  }


  /**
   * RecuperacionContrasena delete
   */
  export type RecuperacionContrasenaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecuperacionContrasena
     */
    select?: RecuperacionContrasenaSelect<ExtArgs> | null
    /**
     * Filter which RecuperacionContrasena to delete.
     */
    where: RecuperacionContrasenaWhereUniqueInput
  }


  /**
   * RecuperacionContrasena deleteMany
   */
  export type RecuperacionContrasenaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RecuperacionContrasenas to delete
     */
    where?: RecuperacionContrasenaWhereInput
  }


  /**
   * RecuperacionContrasena without action
   */
  export type RecuperacionContrasenaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecuperacionContrasena
     */
    select?: RecuperacionContrasenaSelect<ExtArgs> | null
  }



  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    ID_review: number | null
    ID_cliente: number | null
    ID_tipo_s: number | null
    ID_servicio: number | null
    ID_destino: number | null
    calificacion: number | null
    ID_admin: number | null
  }

  export type ReviewSumAggregateOutputType = {
    ID_review: number | null
    ID_cliente: number | null
    ID_tipo_s: number | null
    ID_servicio: number | null
    ID_destino: number | null
    calificacion: number | null
    ID_admin: number | null
  }

  export type ReviewMinAggregateOutputType = {
    ID_review: number | null
    ID_cliente: number | null
    ID_tipo_s: number | null
    ID_servicio: number | null
    ID_destino: number | null
    calificacion: number | null
    comentario: string | null
    fecha: Date | null
    ID_admin: number | null
  }

  export type ReviewMaxAggregateOutputType = {
    ID_review: number | null
    ID_cliente: number | null
    ID_tipo_s: number | null
    ID_servicio: number | null
    ID_destino: number | null
    calificacion: number | null
    comentario: string | null
    fecha: Date | null
    ID_admin: number | null
  }

  export type ReviewCountAggregateOutputType = {
    ID_review: number
    ID_cliente: number
    ID_tipo_s: number
    ID_servicio: number
    ID_destino: number
    calificacion: number
    comentario: number
    fecha: number
    ID_admin: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    ID_review?: true
    ID_cliente?: true
    ID_tipo_s?: true
    ID_servicio?: true
    ID_destino?: true
    calificacion?: true
    ID_admin?: true
  }

  export type ReviewSumAggregateInputType = {
    ID_review?: true
    ID_cliente?: true
    ID_tipo_s?: true
    ID_servicio?: true
    ID_destino?: true
    calificacion?: true
    ID_admin?: true
  }

  export type ReviewMinAggregateInputType = {
    ID_review?: true
    ID_cliente?: true
    ID_tipo_s?: true
    ID_servicio?: true
    ID_destino?: true
    calificacion?: true
    comentario?: true
    fecha?: true
    ID_admin?: true
  }

  export type ReviewMaxAggregateInputType = {
    ID_review?: true
    ID_cliente?: true
    ID_tipo_s?: true
    ID_servicio?: true
    ID_destino?: true
    calificacion?: true
    comentario?: true
    fecha?: true
    ID_admin?: true
  }

  export type ReviewCountAggregateInputType = {
    ID_review?: true
    ID_cliente?: true
    ID_tipo_s?: true
    ID_servicio?: true
    ID_destino?: true
    calificacion?: true
    comentario?: true
    fecha?: true
    ID_admin?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    ID_review: number
    ID_cliente: number | null
    ID_tipo_s: number | null
    ID_servicio: number | null
    ID_destino: number | null
    calificacion: number | null
    comentario: string | null
    fecha: Date | null
    ID_admin: number | null
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_review?: boolean
    ID_cliente?: boolean
    ID_tipo_s?: boolean
    ID_servicio?: boolean
    ID_destino?: boolean
    calificacion?: boolean
    comentario?: boolean
    fecha?: boolean
    ID_admin?: boolean
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectScalar = {
    ID_review?: boolean
    ID_cliente?: boolean
    ID_tipo_s?: boolean
    ID_servicio?: boolean
    ID_destino?: boolean
    calificacion?: boolean
    comentario?: boolean
    fecha?: boolean
    ID_admin?: boolean
  }


  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_review: number
      ID_cliente: number | null
      ID_tipo_s: number | null
      ID_servicio: number | null
      ID_destino: number | null
      calificacion: number | null
      comentario: string | null
      fecha: Date | null
      ID_admin: number | null
    }, ExtArgs["result"]["review"]>
    composites: {}
  }


  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ReviewFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>
    ): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Review that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ReviewFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>
    ): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `ID_review`
     * const reviewWithID_reviewOnly = await prisma.review.findMany({ select: { ID_review: true } })
     * 
    **/
    findMany<T extends ReviewFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
    **/
    create<T extends ReviewCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>
    ): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Reviews.
     *     @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     *     @example
     *     // Create many Reviews
     *     const review = await prisma.review.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ReviewCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
    **/
    delete<T extends ReviewDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>
    ): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ReviewUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>
    ): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ReviewDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ReviewUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
    **/
    upsert<T extends ReviewUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>
    ): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Review model
   */ 
  interface ReviewFieldRefs {
    readonly ID_review: FieldRef<"Review", 'Int'>
    readonly ID_cliente: FieldRef<"Review", 'Int'>
    readonly ID_tipo_s: FieldRef<"Review", 'Int'>
    readonly ID_servicio: FieldRef<"Review", 'Int'>
    readonly ID_destino: FieldRef<"Review", 'Int'>
    readonly calificacion: FieldRef<"Review", 'Int'>
    readonly comentario: FieldRef<"Review", 'String'>
    readonly fecha: FieldRef<"Review", 'DateTime'>
    readonly ID_admin: FieldRef<"Review", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }


  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }


  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }


  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }


  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }


  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data?: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
  }


  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
  }


  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
  }


  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
  }


  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
  }


  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
  }


  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
  }



  /**
   * Model Reservas
   */

  export type AggregateReservas = {
    _count: ReservasCountAggregateOutputType | null
    _avg: ReservasAvgAggregateOutputType | null
    _sum: ReservasSumAggregateOutputType | null
    _min: ReservasMinAggregateOutputType | null
    _max: ReservasMaxAggregateOutputType | null
  }

  export type ReservasAvgAggregateOutputType = {
    ID_reserva: number | null
    ID_cliente: number | null
    ID_itinerario: number | null
    ID_servicio: number | null
    precio_total: number | null
    ID_admin: number | null
  }

  export type ReservasSumAggregateOutputType = {
    ID_reserva: number | null
    ID_cliente: number | null
    ID_itinerario: number | null
    ID_servicio: number | null
    precio_total: number | null
    ID_admin: number | null
  }

  export type ReservasMinAggregateOutputType = {
    ID_reserva: number | null
    ID_cliente: number | null
    ID_itinerario: number | null
    ID_servicio: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    precio_total: number | null
    ID_admin: number | null
  }

  export type ReservasMaxAggregateOutputType = {
    ID_reserva: number | null
    ID_cliente: number | null
    ID_itinerario: number | null
    ID_servicio: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    precio_total: number | null
    ID_admin: number | null
  }

  export type ReservasCountAggregateOutputType = {
    ID_reserva: number
    ID_cliente: number
    ID_itinerario: number
    ID_servicio: number
    fecha_inicio: number
    fecha_fin: number
    precio_total: number
    ID_admin: number
    _all: number
  }


  export type ReservasAvgAggregateInputType = {
    ID_reserva?: true
    ID_cliente?: true
    ID_itinerario?: true
    ID_servicio?: true
    precio_total?: true
    ID_admin?: true
  }

  export type ReservasSumAggregateInputType = {
    ID_reserva?: true
    ID_cliente?: true
    ID_itinerario?: true
    ID_servicio?: true
    precio_total?: true
    ID_admin?: true
  }

  export type ReservasMinAggregateInputType = {
    ID_reserva?: true
    ID_cliente?: true
    ID_itinerario?: true
    ID_servicio?: true
    fecha_inicio?: true
    fecha_fin?: true
    precio_total?: true
    ID_admin?: true
  }

  export type ReservasMaxAggregateInputType = {
    ID_reserva?: true
    ID_cliente?: true
    ID_itinerario?: true
    ID_servicio?: true
    fecha_inicio?: true
    fecha_fin?: true
    precio_total?: true
    ID_admin?: true
  }

  export type ReservasCountAggregateInputType = {
    ID_reserva?: true
    ID_cliente?: true
    ID_itinerario?: true
    ID_servicio?: true
    fecha_inicio?: true
    fecha_fin?: true
    precio_total?: true
    ID_admin?: true
    _all?: true
  }

  export type ReservasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to aggregate.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservas
    **/
    _count?: true | ReservasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservasMaxAggregateInputType
  }

  export type GetReservasAggregateType<T extends ReservasAggregateArgs> = {
        [P in keyof T & keyof AggregateReservas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservas[P]>
      : GetScalarType<T[P], AggregateReservas[P]>
  }




  export type ReservasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservasWhereInput
    orderBy?: ReservasOrderByWithAggregationInput | ReservasOrderByWithAggregationInput[]
    by: ReservasScalarFieldEnum[] | ReservasScalarFieldEnum
    having?: ReservasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservasCountAggregateInputType | true
    _avg?: ReservasAvgAggregateInputType
    _sum?: ReservasSumAggregateInputType
    _min?: ReservasMinAggregateInputType
    _max?: ReservasMaxAggregateInputType
  }

  export type ReservasGroupByOutputType = {
    ID_reserva: number
    ID_cliente: number | null
    ID_itinerario: number | null
    ID_servicio: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    precio_total: number | null
    ID_admin: number | null
    _count: ReservasCountAggregateOutputType | null
    _avg: ReservasAvgAggregateOutputType | null
    _sum: ReservasSumAggregateOutputType | null
    _min: ReservasMinAggregateOutputType | null
    _max: ReservasMaxAggregateOutputType | null
  }

  type GetReservasGroupByPayload<T extends ReservasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservasGroupByOutputType[P]>
            : GetScalarType<T[P], ReservasGroupByOutputType[P]>
        }
      >
    >


  export type ReservasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_reserva?: boolean
    ID_cliente?: boolean
    ID_itinerario?: boolean
    ID_servicio?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    precio_total?: boolean
    ID_admin?: boolean
  }, ExtArgs["result"]["reservas"]>

  export type ReservasSelectScalar = {
    ID_reserva?: boolean
    ID_cliente?: boolean
    ID_itinerario?: boolean
    ID_servicio?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    precio_total?: boolean
    ID_admin?: boolean
  }


  export type $ReservasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reservas"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_reserva: number
      ID_cliente: number | null
      ID_itinerario: number | null
      ID_servicio: number | null
      fecha_inicio: Date | null
      fecha_fin: Date | null
      precio_total: number | null
      ID_admin: number | null
    }, ExtArgs["result"]["reservas"]>
    composites: {}
  }


  type ReservasGetPayload<S extends boolean | null | undefined | ReservasDefaultArgs> = $Result.GetResult<Prisma.$ReservasPayload, S>

  type ReservasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReservasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReservasCountAggregateInputType | true
    }

  export interface ReservasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reservas'], meta: { name: 'Reservas' } }
    /**
     * Find zero or one Reservas that matches the filter.
     * @param {ReservasFindUniqueArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ReservasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ReservasFindUniqueArgs<ExtArgs>>
    ): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Reservas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ReservasFindUniqueOrThrowArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ReservasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ReservasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindFirstArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ReservasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ReservasFindFirstArgs<ExtArgs>>
    ): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Reservas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindFirstOrThrowArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ReservasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ReservasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservas
     * const reservas = await prisma.reservas.findMany()
     * 
     * // Get first 10 Reservas
     * const reservas = await prisma.reservas.findMany({ take: 10 })
     * 
     * // Only select the `ID_reserva`
     * const reservasWithID_reservaOnly = await prisma.reservas.findMany({ select: { ID_reserva: true } })
     * 
    **/
    findMany<T extends ReservasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ReservasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Reservas.
     * @param {ReservasCreateArgs} args - Arguments to create a Reservas.
     * @example
     * // Create one Reservas
     * const Reservas = await prisma.reservas.create({
     *   data: {
     *     // ... data to create a Reservas
     *   }
     * })
     * 
    **/
    create<T extends ReservasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ReservasCreateArgs<ExtArgs>>
    ): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Reservas.
     *     @param {ReservasCreateManyArgs} args - Arguments to create many Reservas.
     *     @example
     *     // Create many Reservas
     *     const reservas = await prisma.reservas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ReservasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ReservasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Reservas.
     * @param {ReservasDeleteArgs} args - Arguments to delete one Reservas.
     * @example
     * // Delete one Reservas
     * const Reservas = await prisma.reservas.delete({
     *   where: {
     *     // ... filter to delete one Reservas
     *   }
     * })
     * 
    **/
    delete<T extends ReservasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ReservasDeleteArgs<ExtArgs>>
    ): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Reservas.
     * @param {ReservasUpdateArgs} args - Arguments to update one Reservas.
     * @example
     * // Update one Reservas
     * const reservas = await prisma.reservas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ReservasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ReservasUpdateArgs<ExtArgs>>
    ): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Reservas.
     * @param {ReservasDeleteManyArgs} args - Arguments to filter Reservas to delete.
     * @example
     * // Delete a few Reservas
     * const { count } = await prisma.reservas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ReservasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ReservasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservas
     * const reservas = await prisma.reservas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ReservasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ReservasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reservas.
     * @param {ReservasUpsertArgs} args - Arguments to update or create a Reservas.
     * @example
     * // Update or create a Reservas
     * const reservas = await prisma.reservas.upsert({
     *   create: {
     *     // ... data to create a Reservas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reservas we want to update
     *   }
     * })
    **/
    upsert<T extends ReservasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ReservasUpsertArgs<ExtArgs>>
    ): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasCountArgs} args - Arguments to filter Reservas to count.
     * @example
     * // Count the number of Reservas
     * const count = await prisma.reservas.count({
     *   where: {
     *     // ... the filter for the Reservas we want to count
     *   }
     * })
    **/
    count<T extends ReservasCountArgs>(
      args?: Subset<T, ReservasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservasAggregateArgs>(args: Subset<T, ReservasAggregateArgs>): Prisma.PrismaPromise<GetReservasAggregateType<T>>

    /**
     * Group by Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservasGroupByArgs['orderBy'] }
        : { orderBy?: ReservasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reservas model
   */
  readonly fields: ReservasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reservas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Reservas model
   */ 
  interface ReservasFieldRefs {
    readonly ID_reserva: FieldRef<"Reservas", 'Int'>
    readonly ID_cliente: FieldRef<"Reservas", 'Int'>
    readonly ID_itinerario: FieldRef<"Reservas", 'Int'>
    readonly ID_servicio: FieldRef<"Reservas", 'Int'>
    readonly fecha_inicio: FieldRef<"Reservas", 'DateTime'>
    readonly fecha_fin: FieldRef<"Reservas", 'DateTime'>
    readonly precio_total: FieldRef<"Reservas", 'Float'>
    readonly ID_admin: FieldRef<"Reservas", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * Reservas findUnique
   */
  export type ReservasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where: ReservasWhereUniqueInput
  }


  /**
   * Reservas findUniqueOrThrow
   */
  export type ReservasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where: ReservasWhereUniqueInput
  }


  /**
   * Reservas findFirst
   */
  export type ReservasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }


  /**
   * Reservas findFirstOrThrow
   */
  export type ReservasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }


  /**
   * Reservas findMany
   */
  export type ReservasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }


  /**
   * Reservas create
   */
  export type ReservasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * The data needed to create a Reservas.
     */
    data?: XOR<ReservasCreateInput, ReservasUncheckedCreateInput>
  }


  /**
   * Reservas createMany
   */
  export type ReservasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservas.
     */
    data: ReservasCreateManyInput | ReservasCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Reservas update
   */
  export type ReservasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * The data needed to update a Reservas.
     */
    data: XOR<ReservasUpdateInput, ReservasUncheckedUpdateInput>
    /**
     * Choose, which Reservas to update.
     */
    where: ReservasWhereUniqueInput
  }


  /**
   * Reservas updateMany
   */
  export type ReservasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservasWhereInput
  }


  /**
   * Reservas upsert
   */
  export type ReservasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * The filter to search for the Reservas to update in case it exists.
     */
    where: ReservasWhereUniqueInput
    /**
     * In case the Reservas found by the `where` argument doesn't exist, create a new Reservas with this data.
     */
    create: XOR<ReservasCreateInput, ReservasUncheckedCreateInput>
    /**
     * In case the Reservas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservasUpdateInput, ReservasUncheckedUpdateInput>
  }


  /**
   * Reservas delete
   */
  export type ReservasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Filter which Reservas to delete.
     */
    where: ReservasWhereUniqueInput
  }


  /**
   * Reservas deleteMany
   */
  export type ReservasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to delete
     */
    where?: ReservasWhereInput
  }


  /**
   * Reservas without action
   */
  export type ReservasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
  }



  /**
   * Model Servicios
   */

  export type AggregateServicios = {
    _count: ServiciosCountAggregateOutputType | null
    _avg: ServiciosAvgAggregateOutputType | null
    _sum: ServiciosSumAggregateOutputType | null
    _min: ServiciosMinAggregateOutputType | null
    _max: ServiciosMaxAggregateOutputType | null
  }

  export type ServiciosAvgAggregateOutputType = {
    ID_servicio: number | null
    ID_tipo_s: number | null
    precio_diario: number | null
    ID_admin: number | null
  }

  export type ServiciosSumAggregateOutputType = {
    ID_servicio: number | null
    ID_tipo_s: number | null
    precio_diario: number | null
    ID_admin: number | null
  }

  export type ServiciosMinAggregateOutputType = {
    ID_servicio: number | null
    ID_tipo_s: number | null
    nombre: string | null
    destino: string | null
    precio_diario: number | null
    detalles: string | null
    ID_admin: number | null
  }

  export type ServiciosMaxAggregateOutputType = {
    ID_servicio: number | null
    ID_tipo_s: number | null
    nombre: string | null
    destino: string | null
    precio_diario: number | null
    detalles: string | null
    ID_admin: number | null
  }

  export type ServiciosCountAggregateOutputType = {
    ID_servicio: number
    ID_tipo_s: number
    nombre: number
    destino: number
    precio_diario: number
    detalles: number
    ID_admin: number
    _all: number
  }


  export type ServiciosAvgAggregateInputType = {
    ID_servicio?: true
    ID_tipo_s?: true
    precio_diario?: true
    ID_admin?: true
  }

  export type ServiciosSumAggregateInputType = {
    ID_servicio?: true
    ID_tipo_s?: true
    precio_diario?: true
    ID_admin?: true
  }

  export type ServiciosMinAggregateInputType = {
    ID_servicio?: true
    ID_tipo_s?: true
    nombre?: true
    destino?: true
    precio_diario?: true
    detalles?: true
    ID_admin?: true
  }

  export type ServiciosMaxAggregateInputType = {
    ID_servicio?: true
    ID_tipo_s?: true
    nombre?: true
    destino?: true
    precio_diario?: true
    detalles?: true
    ID_admin?: true
  }

  export type ServiciosCountAggregateInputType = {
    ID_servicio?: true
    ID_tipo_s?: true
    nombre?: true
    destino?: true
    precio_diario?: true
    detalles?: true
    ID_admin?: true
    _all?: true
  }

  export type ServiciosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Servicios to aggregate.
     */
    where?: ServiciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicios to fetch.
     */
    orderBy?: ServiciosOrderByWithRelationInput | ServiciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Servicios
    **/
    _count?: true | ServiciosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiciosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiciosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiciosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiciosMaxAggregateInputType
  }

  export type GetServiciosAggregateType<T extends ServiciosAggregateArgs> = {
        [P in keyof T & keyof AggregateServicios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServicios[P]>
      : GetScalarType<T[P], AggregateServicios[P]>
  }




  export type ServiciosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiciosWhereInput
    orderBy?: ServiciosOrderByWithAggregationInput | ServiciosOrderByWithAggregationInput[]
    by: ServiciosScalarFieldEnum[] | ServiciosScalarFieldEnum
    having?: ServiciosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiciosCountAggregateInputType | true
    _avg?: ServiciosAvgAggregateInputType
    _sum?: ServiciosSumAggregateInputType
    _min?: ServiciosMinAggregateInputType
    _max?: ServiciosMaxAggregateInputType
  }

  export type ServiciosGroupByOutputType = {
    ID_servicio: number
    ID_tipo_s: number | null
    nombre: string
    destino: string | null
    precio_diario: number | null
    detalles: string | null
    ID_admin: number | null
    _count: ServiciosCountAggregateOutputType | null
    _avg: ServiciosAvgAggregateOutputType | null
    _sum: ServiciosSumAggregateOutputType | null
    _min: ServiciosMinAggregateOutputType | null
    _max: ServiciosMaxAggregateOutputType | null
  }

  type GetServiciosGroupByPayload<T extends ServiciosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiciosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiciosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiciosGroupByOutputType[P]>
            : GetScalarType<T[P], ServiciosGroupByOutputType[P]>
        }
      >
    >


  export type ServiciosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_servicio?: boolean
    ID_tipo_s?: boolean
    nombre?: boolean
    destino?: boolean
    precio_diario?: boolean
    detalles?: boolean
    ID_admin?: boolean
  }, ExtArgs["result"]["servicios"]>

  export type ServiciosSelectScalar = {
    ID_servicio?: boolean
    ID_tipo_s?: boolean
    nombre?: boolean
    destino?: boolean
    precio_diario?: boolean
    detalles?: boolean
    ID_admin?: boolean
  }


  export type $ServiciosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Servicios"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_servicio: number
      ID_tipo_s: number | null
      nombre: string
      destino: string | null
      precio_diario: number | null
      detalles: string | null
      ID_admin: number | null
    }, ExtArgs["result"]["servicios"]>
    composites: {}
  }


  type ServiciosGetPayload<S extends boolean | null | undefined | ServiciosDefaultArgs> = $Result.GetResult<Prisma.$ServiciosPayload, S>

  type ServiciosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ServiciosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ServiciosCountAggregateInputType | true
    }

  export interface ServiciosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Servicios'], meta: { name: 'Servicios' } }
    /**
     * Find zero or one Servicios that matches the filter.
     * @param {ServiciosFindUniqueArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ServiciosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ServiciosFindUniqueArgs<ExtArgs>>
    ): Prisma__ServiciosClient<$Result.GetResult<Prisma.$ServiciosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Servicios that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ServiciosFindUniqueOrThrowArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ServiciosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ServiciosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ServiciosClient<$Result.GetResult<Prisma.$ServiciosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Servicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiciosFindFirstArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ServiciosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ServiciosFindFirstArgs<ExtArgs>>
    ): Prisma__ServiciosClient<$Result.GetResult<Prisma.$ServiciosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Servicios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiciosFindFirstOrThrowArgs} args - Arguments to find a Servicios
     * @example
     * // Get one Servicios
     * const servicios = await prisma.servicios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ServiciosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ServiciosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ServiciosClient<$Result.GetResult<Prisma.$ServiciosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Servicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiciosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Servicios
     * const servicios = await prisma.servicios.findMany()
     * 
     * // Get first 10 Servicios
     * const servicios = await prisma.servicios.findMany({ take: 10 })
     * 
     * // Only select the `ID_servicio`
     * const serviciosWithID_servicioOnly = await prisma.servicios.findMany({ select: { ID_servicio: true } })
     * 
    **/
    findMany<T extends ServiciosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ServiciosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiciosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Servicios.
     * @param {ServiciosCreateArgs} args - Arguments to create a Servicios.
     * @example
     * // Create one Servicios
     * const Servicios = await prisma.servicios.create({
     *   data: {
     *     // ... data to create a Servicios
     *   }
     * })
     * 
    **/
    create<T extends ServiciosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ServiciosCreateArgs<ExtArgs>>
    ): Prisma__ServiciosClient<$Result.GetResult<Prisma.$ServiciosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Servicios.
     *     @param {ServiciosCreateManyArgs} args - Arguments to create many Servicios.
     *     @example
     *     // Create many Servicios
     *     const servicios = await prisma.servicios.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ServiciosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ServiciosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Servicios.
     * @param {ServiciosDeleteArgs} args - Arguments to delete one Servicios.
     * @example
     * // Delete one Servicios
     * const Servicios = await prisma.servicios.delete({
     *   where: {
     *     // ... filter to delete one Servicios
     *   }
     * })
     * 
    **/
    delete<T extends ServiciosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ServiciosDeleteArgs<ExtArgs>>
    ): Prisma__ServiciosClient<$Result.GetResult<Prisma.$ServiciosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Servicios.
     * @param {ServiciosUpdateArgs} args - Arguments to update one Servicios.
     * @example
     * // Update one Servicios
     * const servicios = await prisma.servicios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ServiciosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ServiciosUpdateArgs<ExtArgs>>
    ): Prisma__ServiciosClient<$Result.GetResult<Prisma.$ServiciosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Servicios.
     * @param {ServiciosDeleteManyArgs} args - Arguments to filter Servicios to delete.
     * @example
     * // Delete a few Servicios
     * const { count } = await prisma.servicios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ServiciosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ServiciosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiciosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Servicios
     * const servicios = await prisma.servicios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ServiciosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ServiciosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Servicios.
     * @param {ServiciosUpsertArgs} args - Arguments to update or create a Servicios.
     * @example
     * // Update or create a Servicios
     * const servicios = await prisma.servicios.upsert({
     *   create: {
     *     // ... data to create a Servicios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Servicios we want to update
     *   }
     * })
    **/
    upsert<T extends ServiciosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ServiciosUpsertArgs<ExtArgs>>
    ): Prisma__ServiciosClient<$Result.GetResult<Prisma.$ServiciosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiciosCountArgs} args - Arguments to filter Servicios to count.
     * @example
     * // Count the number of Servicios
     * const count = await prisma.servicios.count({
     *   where: {
     *     // ... the filter for the Servicios we want to count
     *   }
     * })
    **/
    count<T extends ServiciosCountArgs>(
      args?: Subset<T, ServiciosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiciosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiciosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiciosAggregateArgs>(args: Subset<T, ServiciosAggregateArgs>): Prisma.PrismaPromise<GetServiciosAggregateType<T>>

    /**
     * Group by Servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiciosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiciosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiciosGroupByArgs['orderBy'] }
        : { orderBy?: ServiciosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiciosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiciosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Servicios model
   */
  readonly fields: ServiciosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Servicios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiciosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Servicios model
   */ 
  interface ServiciosFieldRefs {
    readonly ID_servicio: FieldRef<"Servicios", 'Int'>
    readonly ID_tipo_s: FieldRef<"Servicios", 'Int'>
    readonly nombre: FieldRef<"Servicios", 'String'>
    readonly destino: FieldRef<"Servicios", 'String'>
    readonly precio_diario: FieldRef<"Servicios", 'Float'>
    readonly detalles: FieldRef<"Servicios", 'String'>
    readonly ID_admin: FieldRef<"Servicios", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * Servicios findUnique
   */
  export type ServiciosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicios
     */
    select?: ServiciosSelect<ExtArgs> | null
    /**
     * Filter, which Servicios to fetch.
     */
    where: ServiciosWhereUniqueInput
  }


  /**
   * Servicios findUniqueOrThrow
   */
  export type ServiciosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicios
     */
    select?: ServiciosSelect<ExtArgs> | null
    /**
     * Filter, which Servicios to fetch.
     */
    where: ServiciosWhereUniqueInput
  }


  /**
   * Servicios findFirst
   */
  export type ServiciosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicios
     */
    select?: ServiciosSelect<ExtArgs> | null
    /**
     * Filter, which Servicios to fetch.
     */
    where?: ServiciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicios to fetch.
     */
    orderBy?: ServiciosOrderByWithRelationInput | ServiciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Servicios.
     */
    cursor?: ServiciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Servicios.
     */
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }


  /**
   * Servicios findFirstOrThrow
   */
  export type ServiciosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicios
     */
    select?: ServiciosSelect<ExtArgs> | null
    /**
     * Filter, which Servicios to fetch.
     */
    where?: ServiciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicios to fetch.
     */
    orderBy?: ServiciosOrderByWithRelationInput | ServiciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Servicios.
     */
    cursor?: ServiciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Servicios.
     */
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }


  /**
   * Servicios findMany
   */
  export type ServiciosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicios
     */
    select?: ServiciosSelect<ExtArgs> | null
    /**
     * Filter, which Servicios to fetch.
     */
    where?: ServiciosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Servicios to fetch.
     */
    orderBy?: ServiciosOrderByWithRelationInput | ServiciosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Servicios.
     */
    cursor?: ServiciosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Servicios.
     */
    skip?: number
    distinct?: ServiciosScalarFieldEnum | ServiciosScalarFieldEnum[]
  }


  /**
   * Servicios create
   */
  export type ServiciosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicios
     */
    select?: ServiciosSelect<ExtArgs> | null
    /**
     * The data needed to create a Servicios.
     */
    data: XOR<ServiciosCreateInput, ServiciosUncheckedCreateInput>
  }


  /**
   * Servicios createMany
   */
  export type ServiciosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Servicios.
     */
    data: ServiciosCreateManyInput | ServiciosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Servicios update
   */
  export type ServiciosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicios
     */
    select?: ServiciosSelect<ExtArgs> | null
    /**
     * The data needed to update a Servicios.
     */
    data: XOR<ServiciosUpdateInput, ServiciosUncheckedUpdateInput>
    /**
     * Choose, which Servicios to update.
     */
    where: ServiciosWhereUniqueInput
  }


  /**
   * Servicios updateMany
   */
  export type ServiciosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Servicios.
     */
    data: XOR<ServiciosUpdateManyMutationInput, ServiciosUncheckedUpdateManyInput>
    /**
     * Filter which Servicios to update
     */
    where?: ServiciosWhereInput
  }


  /**
   * Servicios upsert
   */
  export type ServiciosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicios
     */
    select?: ServiciosSelect<ExtArgs> | null
    /**
     * The filter to search for the Servicios to update in case it exists.
     */
    where: ServiciosWhereUniqueInput
    /**
     * In case the Servicios found by the `where` argument doesn't exist, create a new Servicios with this data.
     */
    create: XOR<ServiciosCreateInput, ServiciosUncheckedCreateInput>
    /**
     * In case the Servicios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiciosUpdateInput, ServiciosUncheckedUpdateInput>
  }


  /**
   * Servicios delete
   */
  export type ServiciosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicios
     */
    select?: ServiciosSelect<ExtArgs> | null
    /**
     * Filter which Servicios to delete.
     */
    where: ServiciosWhereUniqueInput
  }


  /**
   * Servicios deleteMany
   */
  export type ServiciosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Servicios to delete
     */
    where?: ServiciosWhereInput
  }


  /**
   * Servicios without action
   */
  export type ServiciosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Servicios
     */
    select?: ServiciosSelect<ExtArgs> | null
  }



  /**
   * Model Tipo_evento
   */

  export type AggregateTipo_evento = {
    _count: Tipo_eventoCountAggregateOutputType | null
    _avg: Tipo_eventoAvgAggregateOutputType | null
    _sum: Tipo_eventoSumAggregateOutputType | null
    _min: Tipo_eventoMinAggregateOutputType | null
    _max: Tipo_eventoMaxAggregateOutputType | null
  }

  export type Tipo_eventoAvgAggregateOutputType = {
    ID_tipo_e: number | null
    ID_destino: number | null
    ID_servicio: number | null
    ID_reserva: number | null
  }

  export type Tipo_eventoSumAggregateOutputType = {
    ID_tipo_e: number | null
    ID_destino: number | null
    ID_servicio: number | null
    ID_reserva: number | null
  }

  export type Tipo_eventoMinAggregateOutputType = {
    ID_tipo_e: number | null
    ID_destino: number | null
    ID_servicio: number | null
    ID_reserva: number | null
  }

  export type Tipo_eventoMaxAggregateOutputType = {
    ID_tipo_e: number | null
    ID_destino: number | null
    ID_servicio: number | null
    ID_reserva: number | null
  }

  export type Tipo_eventoCountAggregateOutputType = {
    ID_tipo_e: number
    ID_destino: number
    ID_servicio: number
    ID_reserva: number
    _all: number
  }


  export type Tipo_eventoAvgAggregateInputType = {
    ID_tipo_e?: true
    ID_destino?: true
    ID_servicio?: true
    ID_reserva?: true
  }

  export type Tipo_eventoSumAggregateInputType = {
    ID_tipo_e?: true
    ID_destino?: true
    ID_servicio?: true
    ID_reserva?: true
  }

  export type Tipo_eventoMinAggregateInputType = {
    ID_tipo_e?: true
    ID_destino?: true
    ID_servicio?: true
    ID_reserva?: true
  }

  export type Tipo_eventoMaxAggregateInputType = {
    ID_tipo_e?: true
    ID_destino?: true
    ID_servicio?: true
    ID_reserva?: true
  }

  export type Tipo_eventoCountAggregateInputType = {
    ID_tipo_e?: true
    ID_destino?: true
    ID_servicio?: true
    ID_reserva?: true
    _all?: true
  }

  export type Tipo_eventoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tipo_evento to aggregate.
     */
    where?: Tipo_eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_eventos to fetch.
     */
    orderBy?: Tipo_eventoOrderByWithRelationInput | Tipo_eventoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Tipo_eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tipo_eventos
    **/
    _count?: true | Tipo_eventoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_eventoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_eventoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_eventoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_eventoMaxAggregateInputType
  }

  export type GetTipo_eventoAggregateType<T extends Tipo_eventoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_evento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_evento[P]>
      : GetScalarType<T[P], AggregateTipo_evento[P]>
  }




  export type Tipo_eventoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Tipo_eventoWhereInput
    orderBy?: Tipo_eventoOrderByWithAggregationInput | Tipo_eventoOrderByWithAggregationInput[]
    by: Tipo_eventoScalarFieldEnum[] | Tipo_eventoScalarFieldEnum
    having?: Tipo_eventoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_eventoCountAggregateInputType | true
    _avg?: Tipo_eventoAvgAggregateInputType
    _sum?: Tipo_eventoSumAggregateInputType
    _min?: Tipo_eventoMinAggregateInputType
    _max?: Tipo_eventoMaxAggregateInputType
  }

  export type Tipo_eventoGroupByOutputType = {
    ID_tipo_e: number
    ID_destino: number | null
    ID_servicio: number | null
    ID_reserva: number | null
    _count: Tipo_eventoCountAggregateOutputType | null
    _avg: Tipo_eventoAvgAggregateOutputType | null
    _sum: Tipo_eventoSumAggregateOutputType | null
    _min: Tipo_eventoMinAggregateOutputType | null
    _max: Tipo_eventoMaxAggregateOutputType | null
  }

  type GetTipo_eventoGroupByPayload<T extends Tipo_eventoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_eventoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_eventoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_eventoGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_eventoGroupByOutputType[P]>
        }
      >
    >


  export type Tipo_eventoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_tipo_e?: boolean
    ID_destino?: boolean
    ID_servicio?: boolean
    ID_reserva?: boolean
  }, ExtArgs["result"]["tipo_evento"]>

  export type Tipo_eventoSelectScalar = {
    ID_tipo_e?: boolean
    ID_destino?: boolean
    ID_servicio?: boolean
    ID_reserva?: boolean
  }


  export type $Tipo_eventoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tipo_evento"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_tipo_e: number
      ID_destino: number | null
      ID_servicio: number | null
      ID_reserva: number | null
    }, ExtArgs["result"]["tipo_evento"]>
    composites: {}
  }


  type Tipo_eventoGetPayload<S extends boolean | null | undefined | Tipo_eventoDefaultArgs> = $Result.GetResult<Prisma.$Tipo_eventoPayload, S>

  type Tipo_eventoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Tipo_eventoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tipo_eventoCountAggregateInputType | true
    }

  export interface Tipo_eventoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tipo_evento'], meta: { name: 'Tipo_evento' } }
    /**
     * Find zero or one Tipo_evento that matches the filter.
     * @param {Tipo_eventoFindUniqueArgs} args - Arguments to find a Tipo_evento
     * @example
     * // Get one Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Tipo_eventoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_eventoFindUniqueArgs<ExtArgs>>
    ): Prisma__Tipo_eventoClient<$Result.GetResult<Prisma.$Tipo_eventoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tipo_evento that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Tipo_eventoFindUniqueOrThrowArgs} args - Arguments to find a Tipo_evento
     * @example
     * // Get one Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Tipo_eventoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_eventoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__Tipo_eventoClient<$Result.GetResult<Prisma.$Tipo_eventoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tipo_evento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_eventoFindFirstArgs} args - Arguments to find a Tipo_evento
     * @example
     * // Get one Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Tipo_eventoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_eventoFindFirstArgs<ExtArgs>>
    ): Prisma__Tipo_eventoClient<$Result.GetResult<Prisma.$Tipo_eventoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tipo_evento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_eventoFindFirstOrThrowArgs} args - Arguments to find a Tipo_evento
     * @example
     * // Get one Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Tipo_eventoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_eventoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__Tipo_eventoClient<$Result.GetResult<Prisma.$Tipo_eventoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tipo_eventos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_eventoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_eventos
     * const tipo_eventos = await prisma.tipo_evento.findMany()
     * 
     * // Get first 10 Tipo_eventos
     * const tipo_eventos = await prisma.tipo_evento.findMany({ take: 10 })
     * 
     * // Only select the `ID_tipo_e`
     * const tipo_eventoWithID_tipo_eOnly = await prisma.tipo_evento.findMany({ select: { ID_tipo_e: true } })
     * 
    **/
    findMany<T extends Tipo_eventoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_eventoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Tipo_eventoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tipo_evento.
     * @param {Tipo_eventoCreateArgs} args - Arguments to create a Tipo_evento.
     * @example
     * // Create one Tipo_evento
     * const Tipo_evento = await prisma.tipo_evento.create({
     *   data: {
     *     // ... data to create a Tipo_evento
     *   }
     * })
     * 
    **/
    create<T extends Tipo_eventoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_eventoCreateArgs<ExtArgs>>
    ): Prisma__Tipo_eventoClient<$Result.GetResult<Prisma.$Tipo_eventoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tipo_eventos.
     *     @param {Tipo_eventoCreateManyArgs} args - Arguments to create many Tipo_eventos.
     *     @example
     *     // Create many Tipo_eventos
     *     const tipo_evento = await prisma.tipo_evento.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Tipo_eventoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_eventoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipo_evento.
     * @param {Tipo_eventoDeleteArgs} args - Arguments to delete one Tipo_evento.
     * @example
     * // Delete one Tipo_evento
     * const Tipo_evento = await prisma.tipo_evento.delete({
     *   where: {
     *     // ... filter to delete one Tipo_evento
     *   }
     * })
     * 
    **/
    delete<T extends Tipo_eventoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_eventoDeleteArgs<ExtArgs>>
    ): Prisma__Tipo_eventoClient<$Result.GetResult<Prisma.$Tipo_eventoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tipo_evento.
     * @param {Tipo_eventoUpdateArgs} args - Arguments to update one Tipo_evento.
     * @example
     * // Update one Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Tipo_eventoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_eventoUpdateArgs<ExtArgs>>
    ): Prisma__Tipo_eventoClient<$Result.GetResult<Prisma.$Tipo_eventoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tipo_eventos.
     * @param {Tipo_eventoDeleteManyArgs} args - Arguments to filter Tipo_eventos to delete.
     * @example
     * // Delete a few Tipo_eventos
     * const { count } = await prisma.tipo_evento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Tipo_eventoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_eventoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_eventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_eventoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_eventos
     * const tipo_evento = await prisma.tipo_evento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Tipo_eventoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_eventoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipo_evento.
     * @param {Tipo_eventoUpsertArgs} args - Arguments to update or create a Tipo_evento.
     * @example
     * // Update or create a Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.upsert({
     *   create: {
     *     // ... data to create a Tipo_evento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_evento we want to update
     *   }
     * })
    **/
    upsert<T extends Tipo_eventoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_eventoUpsertArgs<ExtArgs>>
    ): Prisma__Tipo_eventoClient<$Result.GetResult<Prisma.$Tipo_eventoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tipo_eventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_eventoCountArgs} args - Arguments to filter Tipo_eventos to count.
     * @example
     * // Count the number of Tipo_eventos
     * const count = await prisma.tipo_evento.count({
     *   where: {
     *     // ... the filter for the Tipo_eventos we want to count
     *   }
     * })
    **/
    count<T extends Tipo_eventoCountArgs>(
      args?: Subset<T, Tipo_eventoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_eventoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_evento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_eventoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_eventoAggregateArgs>(args: Subset<T, Tipo_eventoAggregateArgs>): Prisma.PrismaPromise<GetTipo_eventoAggregateType<T>>

    /**
     * Group by Tipo_evento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_eventoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Tipo_eventoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Tipo_eventoGroupByArgs['orderBy'] }
        : { orderBy?: Tipo_eventoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Tipo_eventoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_eventoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tipo_evento model
   */
  readonly fields: Tipo_eventoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tipo_evento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Tipo_eventoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Tipo_evento model
   */ 
  interface Tipo_eventoFieldRefs {
    readonly ID_tipo_e: FieldRef<"Tipo_evento", 'Int'>
    readonly ID_destino: FieldRef<"Tipo_evento", 'Int'>
    readonly ID_servicio: FieldRef<"Tipo_evento", 'Int'>
    readonly ID_reserva: FieldRef<"Tipo_evento", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * Tipo_evento findUnique
   */
  export type Tipo_eventoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_evento
     */
    select?: Tipo_eventoSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_evento to fetch.
     */
    where: Tipo_eventoWhereUniqueInput
  }


  /**
   * Tipo_evento findUniqueOrThrow
   */
  export type Tipo_eventoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_evento
     */
    select?: Tipo_eventoSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_evento to fetch.
     */
    where: Tipo_eventoWhereUniqueInput
  }


  /**
   * Tipo_evento findFirst
   */
  export type Tipo_eventoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_evento
     */
    select?: Tipo_eventoSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_evento to fetch.
     */
    where?: Tipo_eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_eventos to fetch.
     */
    orderBy?: Tipo_eventoOrderByWithRelationInput | Tipo_eventoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tipo_eventos.
     */
    cursor?: Tipo_eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tipo_eventos.
     */
    distinct?: Tipo_eventoScalarFieldEnum | Tipo_eventoScalarFieldEnum[]
  }


  /**
   * Tipo_evento findFirstOrThrow
   */
  export type Tipo_eventoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_evento
     */
    select?: Tipo_eventoSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_evento to fetch.
     */
    where?: Tipo_eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_eventos to fetch.
     */
    orderBy?: Tipo_eventoOrderByWithRelationInput | Tipo_eventoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tipo_eventos.
     */
    cursor?: Tipo_eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tipo_eventos.
     */
    distinct?: Tipo_eventoScalarFieldEnum | Tipo_eventoScalarFieldEnum[]
  }


  /**
   * Tipo_evento findMany
   */
  export type Tipo_eventoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_evento
     */
    select?: Tipo_eventoSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_eventos to fetch.
     */
    where?: Tipo_eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_eventos to fetch.
     */
    orderBy?: Tipo_eventoOrderByWithRelationInput | Tipo_eventoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tipo_eventos.
     */
    cursor?: Tipo_eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_eventos.
     */
    skip?: number
    distinct?: Tipo_eventoScalarFieldEnum | Tipo_eventoScalarFieldEnum[]
  }


  /**
   * Tipo_evento create
   */
  export type Tipo_eventoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_evento
     */
    select?: Tipo_eventoSelect<ExtArgs> | null
    /**
     * The data needed to create a Tipo_evento.
     */
    data?: XOR<Tipo_eventoCreateInput, Tipo_eventoUncheckedCreateInput>
  }


  /**
   * Tipo_evento createMany
   */
  export type Tipo_eventoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tipo_eventos.
     */
    data: Tipo_eventoCreateManyInput | Tipo_eventoCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Tipo_evento update
   */
  export type Tipo_eventoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_evento
     */
    select?: Tipo_eventoSelect<ExtArgs> | null
    /**
     * The data needed to update a Tipo_evento.
     */
    data: XOR<Tipo_eventoUpdateInput, Tipo_eventoUncheckedUpdateInput>
    /**
     * Choose, which Tipo_evento to update.
     */
    where: Tipo_eventoWhereUniqueInput
  }


  /**
   * Tipo_evento updateMany
   */
  export type Tipo_eventoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tipo_eventos.
     */
    data: XOR<Tipo_eventoUpdateManyMutationInput, Tipo_eventoUncheckedUpdateManyInput>
    /**
     * Filter which Tipo_eventos to update
     */
    where?: Tipo_eventoWhereInput
  }


  /**
   * Tipo_evento upsert
   */
  export type Tipo_eventoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_evento
     */
    select?: Tipo_eventoSelect<ExtArgs> | null
    /**
     * The filter to search for the Tipo_evento to update in case it exists.
     */
    where: Tipo_eventoWhereUniqueInput
    /**
     * In case the Tipo_evento found by the `where` argument doesn't exist, create a new Tipo_evento with this data.
     */
    create: XOR<Tipo_eventoCreateInput, Tipo_eventoUncheckedCreateInput>
    /**
     * In case the Tipo_evento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Tipo_eventoUpdateInput, Tipo_eventoUncheckedUpdateInput>
  }


  /**
   * Tipo_evento delete
   */
  export type Tipo_eventoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_evento
     */
    select?: Tipo_eventoSelect<ExtArgs> | null
    /**
     * Filter which Tipo_evento to delete.
     */
    where: Tipo_eventoWhereUniqueInput
  }


  /**
   * Tipo_evento deleteMany
   */
  export type Tipo_eventoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tipo_eventos to delete
     */
    where?: Tipo_eventoWhereInput
  }


  /**
   * Tipo_evento without action
   */
  export type Tipo_eventoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_evento
     */
    select?: Tipo_eventoSelect<ExtArgs> | null
  }



  /**
   * Model Tipo_moneda
   */

  export type AggregateTipo_moneda = {
    _count: Tipo_monedaCountAggregateOutputType | null
    _avg: Tipo_monedaAvgAggregateOutputType | null
    _sum: Tipo_monedaSumAggregateOutputType | null
    _min: Tipo_monedaMinAggregateOutputType | null
    _max: Tipo_monedaMaxAggregateOutputType | null
  }

  export type Tipo_monedaAvgAggregateOutputType = {
    ID_tipo_m: number | null
  }

  export type Tipo_monedaSumAggregateOutputType = {
    ID_tipo_m: number | null
  }

  export type Tipo_monedaMinAggregateOutputType = {
    ID_tipo_m: number | null
    nombre: string | null
    codigo: string | null
    simbolo: string | null
  }

  export type Tipo_monedaMaxAggregateOutputType = {
    ID_tipo_m: number | null
    nombre: string | null
    codigo: string | null
    simbolo: string | null
  }

  export type Tipo_monedaCountAggregateOutputType = {
    ID_tipo_m: number
    nombre: number
    codigo: number
    simbolo: number
    _all: number
  }


  export type Tipo_monedaAvgAggregateInputType = {
    ID_tipo_m?: true
  }

  export type Tipo_monedaSumAggregateInputType = {
    ID_tipo_m?: true
  }

  export type Tipo_monedaMinAggregateInputType = {
    ID_tipo_m?: true
    nombre?: true
    codigo?: true
    simbolo?: true
  }

  export type Tipo_monedaMaxAggregateInputType = {
    ID_tipo_m?: true
    nombre?: true
    codigo?: true
    simbolo?: true
  }

  export type Tipo_monedaCountAggregateInputType = {
    ID_tipo_m?: true
    nombre?: true
    codigo?: true
    simbolo?: true
    _all?: true
  }

  export type Tipo_monedaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tipo_moneda to aggregate.
     */
    where?: Tipo_monedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_monedas to fetch.
     */
    orderBy?: Tipo_monedaOrderByWithRelationInput | Tipo_monedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Tipo_monedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_monedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tipo_monedas
    **/
    _count?: true | Tipo_monedaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_monedaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_monedaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_monedaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_monedaMaxAggregateInputType
  }

  export type GetTipo_monedaAggregateType<T extends Tipo_monedaAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_moneda]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_moneda[P]>
      : GetScalarType<T[P], AggregateTipo_moneda[P]>
  }




  export type Tipo_monedaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Tipo_monedaWhereInput
    orderBy?: Tipo_monedaOrderByWithAggregationInput | Tipo_monedaOrderByWithAggregationInput[]
    by: Tipo_monedaScalarFieldEnum[] | Tipo_monedaScalarFieldEnum
    having?: Tipo_monedaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_monedaCountAggregateInputType | true
    _avg?: Tipo_monedaAvgAggregateInputType
    _sum?: Tipo_monedaSumAggregateInputType
    _min?: Tipo_monedaMinAggregateInputType
    _max?: Tipo_monedaMaxAggregateInputType
  }

  export type Tipo_monedaGroupByOutputType = {
    ID_tipo_m: number
    nombre: string
    codigo: string
    simbolo: string | null
    _count: Tipo_monedaCountAggregateOutputType | null
    _avg: Tipo_monedaAvgAggregateOutputType | null
    _sum: Tipo_monedaSumAggregateOutputType | null
    _min: Tipo_monedaMinAggregateOutputType | null
    _max: Tipo_monedaMaxAggregateOutputType | null
  }

  type GetTipo_monedaGroupByPayload<T extends Tipo_monedaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_monedaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_monedaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_monedaGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_monedaGroupByOutputType[P]>
        }
      >
    >


  export type Tipo_monedaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_tipo_m?: boolean
    nombre?: boolean
    codigo?: boolean
    simbolo?: boolean
  }, ExtArgs["result"]["tipo_moneda"]>

  export type Tipo_monedaSelectScalar = {
    ID_tipo_m?: boolean
    nombre?: boolean
    codigo?: boolean
    simbolo?: boolean
  }


  export type $Tipo_monedaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tipo_moneda"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_tipo_m: number
      nombre: string
      codigo: string
      simbolo: string | null
    }, ExtArgs["result"]["tipo_moneda"]>
    composites: {}
  }


  type Tipo_monedaGetPayload<S extends boolean | null | undefined | Tipo_monedaDefaultArgs> = $Result.GetResult<Prisma.$Tipo_monedaPayload, S>

  type Tipo_monedaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Tipo_monedaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tipo_monedaCountAggregateInputType | true
    }

  export interface Tipo_monedaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tipo_moneda'], meta: { name: 'Tipo_moneda' } }
    /**
     * Find zero or one Tipo_moneda that matches the filter.
     * @param {Tipo_monedaFindUniqueArgs} args - Arguments to find a Tipo_moneda
     * @example
     * // Get one Tipo_moneda
     * const tipo_moneda = await prisma.tipo_moneda.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Tipo_monedaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_monedaFindUniqueArgs<ExtArgs>>
    ): Prisma__Tipo_monedaClient<$Result.GetResult<Prisma.$Tipo_monedaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tipo_moneda that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Tipo_monedaFindUniqueOrThrowArgs} args - Arguments to find a Tipo_moneda
     * @example
     * // Get one Tipo_moneda
     * const tipo_moneda = await prisma.tipo_moneda.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Tipo_monedaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_monedaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__Tipo_monedaClient<$Result.GetResult<Prisma.$Tipo_monedaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tipo_moneda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_monedaFindFirstArgs} args - Arguments to find a Tipo_moneda
     * @example
     * // Get one Tipo_moneda
     * const tipo_moneda = await prisma.tipo_moneda.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Tipo_monedaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_monedaFindFirstArgs<ExtArgs>>
    ): Prisma__Tipo_monedaClient<$Result.GetResult<Prisma.$Tipo_monedaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tipo_moneda that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_monedaFindFirstOrThrowArgs} args - Arguments to find a Tipo_moneda
     * @example
     * // Get one Tipo_moneda
     * const tipo_moneda = await prisma.tipo_moneda.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Tipo_monedaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_monedaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__Tipo_monedaClient<$Result.GetResult<Prisma.$Tipo_monedaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tipo_monedas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_monedaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_monedas
     * const tipo_monedas = await prisma.tipo_moneda.findMany()
     * 
     * // Get first 10 Tipo_monedas
     * const tipo_monedas = await prisma.tipo_moneda.findMany({ take: 10 })
     * 
     * // Only select the `ID_tipo_m`
     * const tipo_monedaWithID_tipo_mOnly = await prisma.tipo_moneda.findMany({ select: { ID_tipo_m: true } })
     * 
    **/
    findMany<T extends Tipo_monedaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_monedaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Tipo_monedaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tipo_moneda.
     * @param {Tipo_monedaCreateArgs} args - Arguments to create a Tipo_moneda.
     * @example
     * // Create one Tipo_moneda
     * const Tipo_moneda = await prisma.tipo_moneda.create({
     *   data: {
     *     // ... data to create a Tipo_moneda
     *   }
     * })
     * 
    **/
    create<T extends Tipo_monedaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_monedaCreateArgs<ExtArgs>>
    ): Prisma__Tipo_monedaClient<$Result.GetResult<Prisma.$Tipo_monedaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tipo_monedas.
     *     @param {Tipo_monedaCreateManyArgs} args - Arguments to create many Tipo_monedas.
     *     @example
     *     // Create many Tipo_monedas
     *     const tipo_moneda = await prisma.tipo_moneda.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Tipo_monedaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_monedaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipo_moneda.
     * @param {Tipo_monedaDeleteArgs} args - Arguments to delete one Tipo_moneda.
     * @example
     * // Delete one Tipo_moneda
     * const Tipo_moneda = await prisma.tipo_moneda.delete({
     *   where: {
     *     // ... filter to delete one Tipo_moneda
     *   }
     * })
     * 
    **/
    delete<T extends Tipo_monedaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_monedaDeleteArgs<ExtArgs>>
    ): Prisma__Tipo_monedaClient<$Result.GetResult<Prisma.$Tipo_monedaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tipo_moneda.
     * @param {Tipo_monedaUpdateArgs} args - Arguments to update one Tipo_moneda.
     * @example
     * // Update one Tipo_moneda
     * const tipo_moneda = await prisma.tipo_moneda.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Tipo_monedaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_monedaUpdateArgs<ExtArgs>>
    ): Prisma__Tipo_monedaClient<$Result.GetResult<Prisma.$Tipo_monedaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tipo_monedas.
     * @param {Tipo_monedaDeleteManyArgs} args - Arguments to filter Tipo_monedas to delete.
     * @example
     * // Delete a few Tipo_monedas
     * const { count } = await prisma.tipo_moneda.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Tipo_monedaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_monedaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_monedas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_monedaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_monedas
     * const tipo_moneda = await prisma.tipo_moneda.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Tipo_monedaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_monedaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipo_moneda.
     * @param {Tipo_monedaUpsertArgs} args - Arguments to update or create a Tipo_moneda.
     * @example
     * // Update or create a Tipo_moneda
     * const tipo_moneda = await prisma.tipo_moneda.upsert({
     *   create: {
     *     // ... data to create a Tipo_moneda
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_moneda we want to update
     *   }
     * })
    **/
    upsert<T extends Tipo_monedaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_monedaUpsertArgs<ExtArgs>>
    ): Prisma__Tipo_monedaClient<$Result.GetResult<Prisma.$Tipo_monedaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tipo_monedas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_monedaCountArgs} args - Arguments to filter Tipo_monedas to count.
     * @example
     * // Count the number of Tipo_monedas
     * const count = await prisma.tipo_moneda.count({
     *   where: {
     *     // ... the filter for the Tipo_monedas we want to count
     *   }
     * })
    **/
    count<T extends Tipo_monedaCountArgs>(
      args?: Subset<T, Tipo_monedaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_monedaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_moneda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_monedaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_monedaAggregateArgs>(args: Subset<T, Tipo_monedaAggregateArgs>): Prisma.PrismaPromise<GetTipo_monedaAggregateType<T>>

    /**
     * Group by Tipo_moneda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_monedaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Tipo_monedaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Tipo_monedaGroupByArgs['orderBy'] }
        : { orderBy?: Tipo_monedaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Tipo_monedaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_monedaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tipo_moneda model
   */
  readonly fields: Tipo_monedaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tipo_moneda.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Tipo_monedaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Tipo_moneda model
   */ 
  interface Tipo_monedaFieldRefs {
    readonly ID_tipo_m: FieldRef<"Tipo_moneda", 'Int'>
    readonly nombre: FieldRef<"Tipo_moneda", 'String'>
    readonly codigo: FieldRef<"Tipo_moneda", 'String'>
    readonly simbolo: FieldRef<"Tipo_moneda", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Tipo_moneda findUnique
   */
  export type Tipo_monedaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_moneda
     */
    select?: Tipo_monedaSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_moneda to fetch.
     */
    where: Tipo_monedaWhereUniqueInput
  }


  /**
   * Tipo_moneda findUniqueOrThrow
   */
  export type Tipo_monedaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_moneda
     */
    select?: Tipo_monedaSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_moneda to fetch.
     */
    where: Tipo_monedaWhereUniqueInput
  }


  /**
   * Tipo_moneda findFirst
   */
  export type Tipo_monedaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_moneda
     */
    select?: Tipo_monedaSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_moneda to fetch.
     */
    where?: Tipo_monedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_monedas to fetch.
     */
    orderBy?: Tipo_monedaOrderByWithRelationInput | Tipo_monedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tipo_monedas.
     */
    cursor?: Tipo_monedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_monedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tipo_monedas.
     */
    distinct?: Tipo_monedaScalarFieldEnum | Tipo_monedaScalarFieldEnum[]
  }


  /**
   * Tipo_moneda findFirstOrThrow
   */
  export type Tipo_monedaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_moneda
     */
    select?: Tipo_monedaSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_moneda to fetch.
     */
    where?: Tipo_monedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_monedas to fetch.
     */
    orderBy?: Tipo_monedaOrderByWithRelationInput | Tipo_monedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tipo_monedas.
     */
    cursor?: Tipo_monedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_monedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tipo_monedas.
     */
    distinct?: Tipo_monedaScalarFieldEnum | Tipo_monedaScalarFieldEnum[]
  }


  /**
   * Tipo_moneda findMany
   */
  export type Tipo_monedaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_moneda
     */
    select?: Tipo_monedaSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_monedas to fetch.
     */
    where?: Tipo_monedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_monedas to fetch.
     */
    orderBy?: Tipo_monedaOrderByWithRelationInput | Tipo_monedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tipo_monedas.
     */
    cursor?: Tipo_monedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_monedas.
     */
    skip?: number
    distinct?: Tipo_monedaScalarFieldEnum | Tipo_monedaScalarFieldEnum[]
  }


  /**
   * Tipo_moneda create
   */
  export type Tipo_monedaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_moneda
     */
    select?: Tipo_monedaSelect<ExtArgs> | null
    /**
     * The data needed to create a Tipo_moneda.
     */
    data: XOR<Tipo_monedaCreateInput, Tipo_monedaUncheckedCreateInput>
  }


  /**
   * Tipo_moneda createMany
   */
  export type Tipo_monedaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tipo_monedas.
     */
    data: Tipo_monedaCreateManyInput | Tipo_monedaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Tipo_moneda update
   */
  export type Tipo_monedaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_moneda
     */
    select?: Tipo_monedaSelect<ExtArgs> | null
    /**
     * The data needed to update a Tipo_moneda.
     */
    data: XOR<Tipo_monedaUpdateInput, Tipo_monedaUncheckedUpdateInput>
    /**
     * Choose, which Tipo_moneda to update.
     */
    where: Tipo_monedaWhereUniqueInput
  }


  /**
   * Tipo_moneda updateMany
   */
  export type Tipo_monedaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tipo_monedas.
     */
    data: XOR<Tipo_monedaUpdateManyMutationInput, Tipo_monedaUncheckedUpdateManyInput>
    /**
     * Filter which Tipo_monedas to update
     */
    where?: Tipo_monedaWhereInput
  }


  /**
   * Tipo_moneda upsert
   */
  export type Tipo_monedaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_moneda
     */
    select?: Tipo_monedaSelect<ExtArgs> | null
    /**
     * The filter to search for the Tipo_moneda to update in case it exists.
     */
    where: Tipo_monedaWhereUniqueInput
    /**
     * In case the Tipo_moneda found by the `where` argument doesn't exist, create a new Tipo_moneda with this data.
     */
    create: XOR<Tipo_monedaCreateInput, Tipo_monedaUncheckedCreateInput>
    /**
     * In case the Tipo_moneda was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Tipo_monedaUpdateInput, Tipo_monedaUncheckedUpdateInput>
  }


  /**
   * Tipo_moneda delete
   */
  export type Tipo_monedaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_moneda
     */
    select?: Tipo_monedaSelect<ExtArgs> | null
    /**
     * Filter which Tipo_moneda to delete.
     */
    where: Tipo_monedaWhereUniqueInput
  }


  /**
   * Tipo_moneda deleteMany
   */
  export type Tipo_monedaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tipo_monedas to delete
     */
    where?: Tipo_monedaWhereInput
  }


  /**
   * Tipo_moneda without action
   */
  export type Tipo_monedaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_moneda
     */
    select?: Tipo_monedaSelect<ExtArgs> | null
  }



  /**
   * Model Tipo_servicio
   */

  export type AggregateTipo_servicio = {
    _count: Tipo_servicioCountAggregateOutputType | null
    _avg: Tipo_servicioAvgAggregateOutputType | null
    _sum: Tipo_servicioSumAggregateOutputType | null
    _min: Tipo_servicioMinAggregateOutputType | null
    _max: Tipo_servicioMaxAggregateOutputType | null
  }

  export type Tipo_servicioAvgAggregateOutputType = {
    ID_tipo_s: number | null
  }

  export type Tipo_servicioSumAggregateOutputType = {
    ID_tipo_s: number | null
  }

  export type Tipo_servicioMinAggregateOutputType = {
    ID_tipo_s: number | null
    Descripcion: string | null
  }

  export type Tipo_servicioMaxAggregateOutputType = {
    ID_tipo_s: number | null
    Descripcion: string | null
  }

  export type Tipo_servicioCountAggregateOutputType = {
    ID_tipo_s: number
    Descripcion: number
    _all: number
  }


  export type Tipo_servicioAvgAggregateInputType = {
    ID_tipo_s?: true
  }

  export type Tipo_servicioSumAggregateInputType = {
    ID_tipo_s?: true
  }

  export type Tipo_servicioMinAggregateInputType = {
    ID_tipo_s?: true
    Descripcion?: true
  }

  export type Tipo_servicioMaxAggregateInputType = {
    ID_tipo_s?: true
    Descripcion?: true
  }

  export type Tipo_servicioCountAggregateInputType = {
    ID_tipo_s?: true
    Descripcion?: true
    _all?: true
  }

  export type Tipo_servicioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tipo_servicio to aggregate.
     */
    where?: Tipo_servicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_servicios to fetch.
     */
    orderBy?: Tipo_servicioOrderByWithRelationInput | Tipo_servicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Tipo_servicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tipo_servicios
    **/
    _count?: true | Tipo_servicioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_servicioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_servicioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_servicioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_servicioMaxAggregateInputType
  }

  export type GetTipo_servicioAggregateType<T extends Tipo_servicioAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_servicio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_servicio[P]>
      : GetScalarType<T[P], AggregateTipo_servicio[P]>
  }




  export type Tipo_servicioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Tipo_servicioWhereInput
    orderBy?: Tipo_servicioOrderByWithAggregationInput | Tipo_servicioOrderByWithAggregationInput[]
    by: Tipo_servicioScalarFieldEnum[] | Tipo_servicioScalarFieldEnum
    having?: Tipo_servicioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_servicioCountAggregateInputType | true
    _avg?: Tipo_servicioAvgAggregateInputType
    _sum?: Tipo_servicioSumAggregateInputType
    _min?: Tipo_servicioMinAggregateInputType
    _max?: Tipo_servicioMaxAggregateInputType
  }

  export type Tipo_servicioGroupByOutputType = {
    ID_tipo_s: number
    Descripcion: string | null
    _count: Tipo_servicioCountAggregateOutputType | null
    _avg: Tipo_servicioAvgAggregateOutputType | null
    _sum: Tipo_servicioSumAggregateOutputType | null
    _min: Tipo_servicioMinAggregateOutputType | null
    _max: Tipo_servicioMaxAggregateOutputType | null
  }

  type GetTipo_servicioGroupByPayload<T extends Tipo_servicioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_servicioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_servicioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_servicioGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_servicioGroupByOutputType[P]>
        }
      >
    >


  export type Tipo_servicioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_tipo_s?: boolean
    Descripcion?: boolean
  }, ExtArgs["result"]["tipo_servicio"]>

  export type Tipo_servicioSelectScalar = {
    ID_tipo_s?: boolean
    Descripcion?: boolean
  }


  export type $Tipo_servicioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tipo_servicio"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_tipo_s: number
      Descripcion: string | null
    }, ExtArgs["result"]["tipo_servicio"]>
    composites: {}
  }


  type Tipo_servicioGetPayload<S extends boolean | null | undefined | Tipo_servicioDefaultArgs> = $Result.GetResult<Prisma.$Tipo_servicioPayload, S>

  type Tipo_servicioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Tipo_servicioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tipo_servicioCountAggregateInputType | true
    }

  export interface Tipo_servicioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tipo_servicio'], meta: { name: 'Tipo_servicio' } }
    /**
     * Find zero or one Tipo_servicio that matches the filter.
     * @param {Tipo_servicioFindUniqueArgs} args - Arguments to find a Tipo_servicio
     * @example
     * // Get one Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Tipo_servicioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_servicioFindUniqueArgs<ExtArgs>>
    ): Prisma__Tipo_servicioClient<$Result.GetResult<Prisma.$Tipo_servicioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tipo_servicio that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Tipo_servicioFindUniqueOrThrowArgs} args - Arguments to find a Tipo_servicio
     * @example
     * // Get one Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Tipo_servicioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_servicioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__Tipo_servicioClient<$Result.GetResult<Prisma.$Tipo_servicioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tipo_servicio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_servicioFindFirstArgs} args - Arguments to find a Tipo_servicio
     * @example
     * // Get one Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Tipo_servicioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_servicioFindFirstArgs<ExtArgs>>
    ): Prisma__Tipo_servicioClient<$Result.GetResult<Prisma.$Tipo_servicioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tipo_servicio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_servicioFindFirstOrThrowArgs} args - Arguments to find a Tipo_servicio
     * @example
     * // Get one Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Tipo_servicioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_servicioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__Tipo_servicioClient<$Result.GetResult<Prisma.$Tipo_servicioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tipo_servicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_servicioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_servicios
     * const tipo_servicios = await prisma.tipo_servicio.findMany()
     * 
     * // Get first 10 Tipo_servicios
     * const tipo_servicios = await prisma.tipo_servicio.findMany({ take: 10 })
     * 
     * // Only select the `ID_tipo_s`
     * const tipo_servicioWithID_tipo_sOnly = await prisma.tipo_servicio.findMany({ select: { ID_tipo_s: true } })
     * 
    **/
    findMany<T extends Tipo_servicioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_servicioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Tipo_servicioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tipo_servicio.
     * @param {Tipo_servicioCreateArgs} args - Arguments to create a Tipo_servicio.
     * @example
     * // Create one Tipo_servicio
     * const Tipo_servicio = await prisma.tipo_servicio.create({
     *   data: {
     *     // ... data to create a Tipo_servicio
     *   }
     * })
     * 
    **/
    create<T extends Tipo_servicioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_servicioCreateArgs<ExtArgs>>
    ): Prisma__Tipo_servicioClient<$Result.GetResult<Prisma.$Tipo_servicioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tipo_servicios.
     *     @param {Tipo_servicioCreateManyArgs} args - Arguments to create many Tipo_servicios.
     *     @example
     *     // Create many Tipo_servicios
     *     const tipo_servicio = await prisma.tipo_servicio.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Tipo_servicioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_servicioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipo_servicio.
     * @param {Tipo_servicioDeleteArgs} args - Arguments to delete one Tipo_servicio.
     * @example
     * // Delete one Tipo_servicio
     * const Tipo_servicio = await prisma.tipo_servicio.delete({
     *   where: {
     *     // ... filter to delete one Tipo_servicio
     *   }
     * })
     * 
    **/
    delete<T extends Tipo_servicioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_servicioDeleteArgs<ExtArgs>>
    ): Prisma__Tipo_servicioClient<$Result.GetResult<Prisma.$Tipo_servicioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tipo_servicio.
     * @param {Tipo_servicioUpdateArgs} args - Arguments to update one Tipo_servicio.
     * @example
     * // Update one Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Tipo_servicioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_servicioUpdateArgs<ExtArgs>>
    ): Prisma__Tipo_servicioClient<$Result.GetResult<Prisma.$Tipo_servicioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tipo_servicios.
     * @param {Tipo_servicioDeleteManyArgs} args - Arguments to filter Tipo_servicios to delete.
     * @example
     * // Delete a few Tipo_servicios
     * const { count } = await prisma.tipo_servicio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Tipo_servicioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, Tipo_servicioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_servicioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_servicios
     * const tipo_servicio = await prisma.tipo_servicio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Tipo_servicioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_servicioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipo_servicio.
     * @param {Tipo_servicioUpsertArgs} args - Arguments to update or create a Tipo_servicio.
     * @example
     * // Update or create a Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.upsert({
     *   create: {
     *     // ... data to create a Tipo_servicio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_servicio we want to update
     *   }
     * })
    **/
    upsert<T extends Tipo_servicioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, Tipo_servicioUpsertArgs<ExtArgs>>
    ): Prisma__Tipo_servicioClient<$Result.GetResult<Prisma.$Tipo_servicioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tipo_servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_servicioCountArgs} args - Arguments to filter Tipo_servicios to count.
     * @example
     * // Count the number of Tipo_servicios
     * const count = await prisma.tipo_servicio.count({
     *   where: {
     *     // ... the filter for the Tipo_servicios we want to count
     *   }
     * })
    **/
    count<T extends Tipo_servicioCountArgs>(
      args?: Subset<T, Tipo_servicioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_servicioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_servicio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_servicioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_servicioAggregateArgs>(args: Subset<T, Tipo_servicioAggregateArgs>): Prisma.PrismaPromise<GetTipo_servicioAggregateType<T>>

    /**
     * Group by Tipo_servicio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_servicioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Tipo_servicioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Tipo_servicioGroupByArgs['orderBy'] }
        : { orderBy?: Tipo_servicioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Tipo_servicioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_servicioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tipo_servicio model
   */
  readonly fields: Tipo_servicioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tipo_servicio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Tipo_servicioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Tipo_servicio model
   */ 
  interface Tipo_servicioFieldRefs {
    readonly ID_tipo_s: FieldRef<"Tipo_servicio", 'Int'>
    readonly Descripcion: FieldRef<"Tipo_servicio", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Tipo_servicio findUnique
   */
  export type Tipo_servicioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_servicio
     */
    select?: Tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_servicio to fetch.
     */
    where: Tipo_servicioWhereUniqueInput
  }


  /**
   * Tipo_servicio findUniqueOrThrow
   */
  export type Tipo_servicioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_servicio
     */
    select?: Tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_servicio to fetch.
     */
    where: Tipo_servicioWhereUniqueInput
  }


  /**
   * Tipo_servicio findFirst
   */
  export type Tipo_servicioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_servicio
     */
    select?: Tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_servicio to fetch.
     */
    where?: Tipo_servicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_servicios to fetch.
     */
    orderBy?: Tipo_servicioOrderByWithRelationInput | Tipo_servicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tipo_servicios.
     */
    cursor?: Tipo_servicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tipo_servicios.
     */
    distinct?: Tipo_servicioScalarFieldEnum | Tipo_servicioScalarFieldEnum[]
  }


  /**
   * Tipo_servicio findFirstOrThrow
   */
  export type Tipo_servicioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_servicio
     */
    select?: Tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_servicio to fetch.
     */
    where?: Tipo_servicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_servicios to fetch.
     */
    orderBy?: Tipo_servicioOrderByWithRelationInput | Tipo_servicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tipo_servicios.
     */
    cursor?: Tipo_servicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tipo_servicios.
     */
    distinct?: Tipo_servicioScalarFieldEnum | Tipo_servicioScalarFieldEnum[]
  }


  /**
   * Tipo_servicio findMany
   */
  export type Tipo_servicioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_servicio
     */
    select?: Tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter, which Tipo_servicios to fetch.
     */
    where?: Tipo_servicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tipo_servicios to fetch.
     */
    orderBy?: Tipo_servicioOrderByWithRelationInput | Tipo_servicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tipo_servicios.
     */
    cursor?: Tipo_servicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tipo_servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tipo_servicios.
     */
    skip?: number
    distinct?: Tipo_servicioScalarFieldEnum | Tipo_servicioScalarFieldEnum[]
  }


  /**
   * Tipo_servicio create
   */
  export type Tipo_servicioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_servicio
     */
    select?: Tipo_servicioSelect<ExtArgs> | null
    /**
     * The data needed to create a Tipo_servicio.
     */
    data?: XOR<Tipo_servicioCreateInput, Tipo_servicioUncheckedCreateInput>
  }


  /**
   * Tipo_servicio createMany
   */
  export type Tipo_servicioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tipo_servicios.
     */
    data: Tipo_servicioCreateManyInput | Tipo_servicioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Tipo_servicio update
   */
  export type Tipo_servicioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_servicio
     */
    select?: Tipo_servicioSelect<ExtArgs> | null
    /**
     * The data needed to update a Tipo_servicio.
     */
    data: XOR<Tipo_servicioUpdateInput, Tipo_servicioUncheckedUpdateInput>
    /**
     * Choose, which Tipo_servicio to update.
     */
    where: Tipo_servicioWhereUniqueInput
  }


  /**
   * Tipo_servicio updateMany
   */
  export type Tipo_servicioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tipo_servicios.
     */
    data: XOR<Tipo_servicioUpdateManyMutationInput, Tipo_servicioUncheckedUpdateManyInput>
    /**
     * Filter which Tipo_servicios to update
     */
    where?: Tipo_servicioWhereInput
  }


  /**
   * Tipo_servicio upsert
   */
  export type Tipo_servicioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_servicio
     */
    select?: Tipo_servicioSelect<ExtArgs> | null
    /**
     * The filter to search for the Tipo_servicio to update in case it exists.
     */
    where: Tipo_servicioWhereUniqueInput
    /**
     * In case the Tipo_servicio found by the `where` argument doesn't exist, create a new Tipo_servicio with this data.
     */
    create: XOR<Tipo_servicioCreateInput, Tipo_servicioUncheckedCreateInput>
    /**
     * In case the Tipo_servicio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Tipo_servicioUpdateInput, Tipo_servicioUncheckedUpdateInput>
  }


  /**
   * Tipo_servicio delete
   */
  export type Tipo_servicioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_servicio
     */
    select?: Tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter which Tipo_servicio to delete.
     */
    where: Tipo_servicioWhereUniqueInput
  }


  /**
   * Tipo_servicio deleteMany
   */
  export type Tipo_servicioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tipo_servicios to delete
     */
    where?: Tipo_servicioWhereInput
  }


  /**
   * Tipo_servicio without action
   */
  export type Tipo_servicioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_servicio
     */
    select?: Tipo_servicioSelect<ExtArgs> | null
  }



  /**
   * Model DetalleCarrito
   */

  export type AggregateDetalleCarrito = {
    _count: DetalleCarritoCountAggregateOutputType | null
    _avg: DetalleCarritoAvgAggregateOutputType | null
    _sum: DetalleCarritoSumAggregateOutputType | null
    _min: DetalleCarritoMinAggregateOutputType | null
    _max: DetalleCarritoMaxAggregateOutputType | null
  }

  export type DetalleCarritoAvgAggregateOutputType = {
    id_detalle_carrito: number | null
    cantidad: number | null
    precio: number | null
    id_cliente: number | null
    subtotal: number | null
  }

  export type DetalleCarritoSumAggregateOutputType = {
    id_detalle_carrito: number | null
    cantidad: number | null
    precio: number | null
    id_cliente: number | null
    subtotal: number | null
  }

  export type DetalleCarritoMinAggregateOutputType = {
    id_detalle_carrito: number | null
    item: string | null
    cantidad: number | null
    precio: number | null
    id_cliente: number | null
    subtotal: number | null
  }

  export type DetalleCarritoMaxAggregateOutputType = {
    id_detalle_carrito: number | null
    item: string | null
    cantidad: number | null
    precio: number | null
    id_cliente: number | null
    subtotal: number | null
  }

  export type DetalleCarritoCountAggregateOutputType = {
    id_detalle_carrito: number
    item: number
    cantidad: number
    precio: number
    id_cliente: number
    subtotal: number
    _all: number
  }


  export type DetalleCarritoAvgAggregateInputType = {
    id_detalle_carrito?: true
    cantidad?: true
    precio?: true
    id_cliente?: true
    subtotal?: true
  }

  export type DetalleCarritoSumAggregateInputType = {
    id_detalle_carrito?: true
    cantidad?: true
    precio?: true
    id_cliente?: true
    subtotal?: true
  }

  export type DetalleCarritoMinAggregateInputType = {
    id_detalle_carrito?: true
    item?: true
    cantidad?: true
    precio?: true
    id_cliente?: true
    subtotal?: true
  }

  export type DetalleCarritoMaxAggregateInputType = {
    id_detalle_carrito?: true
    item?: true
    cantidad?: true
    precio?: true
    id_cliente?: true
    subtotal?: true
  }

  export type DetalleCarritoCountAggregateInputType = {
    id_detalle_carrito?: true
    item?: true
    cantidad?: true
    precio?: true
    id_cliente?: true
    subtotal?: true
    _all?: true
  }

  export type DetalleCarritoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleCarrito to aggregate.
     */
    where?: DetalleCarritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCarritos to fetch.
     */
    orderBy?: DetalleCarritoOrderByWithRelationInput | DetalleCarritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DetalleCarritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCarritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCarritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DetalleCarritos
    **/
    _count?: true | DetalleCarritoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleCarritoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleCarritoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleCarritoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleCarritoMaxAggregateInputType
  }

  export type GetDetalleCarritoAggregateType<T extends DetalleCarritoAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleCarrito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleCarrito[P]>
      : GetScalarType<T[P], AggregateDetalleCarrito[P]>
  }




  export type DetalleCarritoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCarritoWhereInput
    orderBy?: DetalleCarritoOrderByWithAggregationInput | DetalleCarritoOrderByWithAggregationInput[]
    by: DetalleCarritoScalarFieldEnum[] | DetalleCarritoScalarFieldEnum
    having?: DetalleCarritoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleCarritoCountAggregateInputType | true
    _avg?: DetalleCarritoAvgAggregateInputType
    _sum?: DetalleCarritoSumAggregateInputType
    _min?: DetalleCarritoMinAggregateInputType
    _max?: DetalleCarritoMaxAggregateInputType
  }

  export type DetalleCarritoGroupByOutputType = {
    id_detalle_carrito: number
    item: string
    cantidad: number
    precio: number
    id_cliente: number | null
    subtotal: number
    _count: DetalleCarritoCountAggregateOutputType | null
    _avg: DetalleCarritoAvgAggregateOutputType | null
    _sum: DetalleCarritoSumAggregateOutputType | null
    _min: DetalleCarritoMinAggregateOutputType | null
    _max: DetalleCarritoMaxAggregateOutputType | null
  }

  type GetDetalleCarritoGroupByPayload<T extends DetalleCarritoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleCarritoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleCarritoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleCarritoGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleCarritoGroupByOutputType[P]>
        }
      >
    >


  export type DetalleCarritoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_carrito?: boolean
    item?: boolean
    cantidad?: boolean
    precio?: boolean
    id_cliente?: boolean
    subtotal?: boolean
  }, ExtArgs["result"]["detalleCarrito"]>

  export type DetalleCarritoSelectScalar = {
    id_detalle_carrito?: boolean
    item?: boolean
    cantidad?: boolean
    precio?: boolean
    id_cliente?: boolean
    subtotal?: boolean
  }


  export type $DetalleCarritoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DetalleCarrito"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_detalle_carrito: number
      item: string
      cantidad: number
      precio: number
      id_cliente: number | null
      subtotal: number
    }, ExtArgs["result"]["detalleCarrito"]>
    composites: {}
  }


  type DetalleCarritoGetPayload<S extends boolean | null | undefined | DetalleCarritoDefaultArgs> = $Result.GetResult<Prisma.$DetalleCarritoPayload, S>

  type DetalleCarritoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DetalleCarritoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DetalleCarritoCountAggregateInputType | true
    }

  export interface DetalleCarritoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DetalleCarrito'], meta: { name: 'DetalleCarrito' } }
    /**
     * Find zero or one DetalleCarrito that matches the filter.
     * @param {DetalleCarritoFindUniqueArgs} args - Arguments to find a DetalleCarrito
     * @example
     * // Get one DetalleCarrito
     * const detalleCarrito = await prisma.detalleCarrito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DetalleCarritoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, DetalleCarritoFindUniqueArgs<ExtArgs>>
    ): Prisma__DetalleCarritoClient<$Result.GetResult<Prisma.$DetalleCarritoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one DetalleCarrito that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {DetalleCarritoFindUniqueOrThrowArgs} args - Arguments to find a DetalleCarrito
     * @example
     * // Get one DetalleCarrito
     * const detalleCarrito = await prisma.detalleCarrito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DetalleCarritoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DetalleCarritoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__DetalleCarritoClient<$Result.GetResult<Prisma.$DetalleCarritoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first DetalleCarrito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarritoFindFirstArgs} args - Arguments to find a DetalleCarrito
     * @example
     * // Get one DetalleCarrito
     * const detalleCarrito = await prisma.detalleCarrito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DetalleCarritoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, DetalleCarritoFindFirstArgs<ExtArgs>>
    ): Prisma__DetalleCarritoClient<$Result.GetResult<Prisma.$DetalleCarritoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first DetalleCarrito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarritoFindFirstOrThrowArgs} args - Arguments to find a DetalleCarrito
     * @example
     * // Get one DetalleCarrito
     * const detalleCarrito = await prisma.detalleCarrito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DetalleCarritoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, DetalleCarritoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__DetalleCarritoClient<$Result.GetResult<Prisma.$DetalleCarritoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more DetalleCarritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarritoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetalleCarritos
     * const detalleCarritos = await prisma.detalleCarrito.findMany()
     * 
     * // Get first 10 DetalleCarritos
     * const detalleCarritos = await prisma.detalleCarrito.findMany({ take: 10 })
     * 
     * // Only select the `id_detalle_carrito`
     * const detalleCarritoWithId_detalle_carritoOnly = await prisma.detalleCarrito.findMany({ select: { id_detalle_carrito: true } })
     * 
    **/
    findMany<T extends DetalleCarritoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DetalleCarritoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCarritoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a DetalleCarrito.
     * @param {DetalleCarritoCreateArgs} args - Arguments to create a DetalleCarrito.
     * @example
     * // Create one DetalleCarrito
     * const DetalleCarrito = await prisma.detalleCarrito.create({
     *   data: {
     *     // ... data to create a DetalleCarrito
     *   }
     * })
     * 
    **/
    create<T extends DetalleCarritoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, DetalleCarritoCreateArgs<ExtArgs>>
    ): Prisma__DetalleCarritoClient<$Result.GetResult<Prisma.$DetalleCarritoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many DetalleCarritos.
     *     @param {DetalleCarritoCreateManyArgs} args - Arguments to create many DetalleCarritos.
     *     @example
     *     // Create many DetalleCarritos
     *     const detalleCarrito = await prisma.detalleCarrito.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends DetalleCarritoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DetalleCarritoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DetalleCarrito.
     * @param {DetalleCarritoDeleteArgs} args - Arguments to delete one DetalleCarrito.
     * @example
     * // Delete one DetalleCarrito
     * const DetalleCarrito = await prisma.detalleCarrito.delete({
     *   where: {
     *     // ... filter to delete one DetalleCarrito
     *   }
     * })
     * 
    **/
    delete<T extends DetalleCarritoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, DetalleCarritoDeleteArgs<ExtArgs>>
    ): Prisma__DetalleCarritoClient<$Result.GetResult<Prisma.$DetalleCarritoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one DetalleCarrito.
     * @param {DetalleCarritoUpdateArgs} args - Arguments to update one DetalleCarrito.
     * @example
     * // Update one DetalleCarrito
     * const detalleCarrito = await prisma.detalleCarrito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DetalleCarritoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, DetalleCarritoUpdateArgs<ExtArgs>>
    ): Prisma__DetalleCarritoClient<$Result.GetResult<Prisma.$DetalleCarritoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more DetalleCarritos.
     * @param {DetalleCarritoDeleteManyArgs} args - Arguments to filter DetalleCarritos to delete.
     * @example
     * // Delete a few DetalleCarritos
     * const { count } = await prisma.detalleCarrito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DetalleCarritoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, DetalleCarritoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleCarritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarritoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetalleCarritos
     * const detalleCarrito = await prisma.detalleCarrito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DetalleCarritoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, DetalleCarritoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DetalleCarrito.
     * @param {DetalleCarritoUpsertArgs} args - Arguments to update or create a DetalleCarrito.
     * @example
     * // Update or create a DetalleCarrito
     * const detalleCarrito = await prisma.detalleCarrito.upsert({
     *   create: {
     *     // ... data to create a DetalleCarrito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetalleCarrito we want to update
     *   }
     * })
    **/
    upsert<T extends DetalleCarritoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, DetalleCarritoUpsertArgs<ExtArgs>>
    ): Prisma__DetalleCarritoClient<$Result.GetResult<Prisma.$DetalleCarritoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of DetalleCarritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarritoCountArgs} args - Arguments to filter DetalleCarritos to count.
     * @example
     * // Count the number of DetalleCarritos
     * const count = await prisma.detalleCarrito.count({
     *   where: {
     *     // ... the filter for the DetalleCarritos we want to count
     *   }
     * })
    **/
    count<T extends DetalleCarritoCountArgs>(
      args?: Subset<T, DetalleCarritoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleCarritoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetalleCarrito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarritoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleCarritoAggregateArgs>(args: Subset<T, DetalleCarritoAggregateArgs>): Prisma.PrismaPromise<GetDetalleCarritoAggregateType<T>>

    /**
     * Group by DetalleCarrito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarritoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DetalleCarritoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DetalleCarritoGroupByArgs['orderBy'] }
        : { orderBy?: DetalleCarritoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DetalleCarritoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleCarritoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DetalleCarrito model
   */
  readonly fields: DetalleCarritoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DetalleCarrito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DetalleCarritoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the DetalleCarrito model
   */ 
  interface DetalleCarritoFieldRefs {
    readonly id_detalle_carrito: FieldRef<"DetalleCarrito", 'Int'>
    readonly item: FieldRef<"DetalleCarrito", 'String'>
    readonly cantidad: FieldRef<"DetalleCarrito", 'Int'>
    readonly precio: FieldRef<"DetalleCarrito", 'Float'>
    readonly id_cliente: FieldRef<"DetalleCarrito", 'Int'>
    readonly subtotal: FieldRef<"DetalleCarrito", 'Float'>
  }
    

  // Custom InputTypes

  /**
   * DetalleCarrito findUnique
   */
  export type DetalleCarritoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarrito
     */
    select?: DetalleCarritoSelect<ExtArgs> | null
    /**
     * Filter, which DetalleCarrito to fetch.
     */
    where: DetalleCarritoWhereUniqueInput
  }


  /**
   * DetalleCarrito findUniqueOrThrow
   */
  export type DetalleCarritoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarrito
     */
    select?: DetalleCarritoSelect<ExtArgs> | null
    /**
     * Filter, which DetalleCarrito to fetch.
     */
    where: DetalleCarritoWhereUniqueInput
  }


  /**
   * DetalleCarrito findFirst
   */
  export type DetalleCarritoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarrito
     */
    select?: DetalleCarritoSelect<ExtArgs> | null
    /**
     * Filter, which DetalleCarrito to fetch.
     */
    where?: DetalleCarritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCarritos to fetch.
     */
    orderBy?: DetalleCarritoOrderByWithRelationInput | DetalleCarritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleCarritos.
     */
    cursor?: DetalleCarritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCarritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCarritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleCarritos.
     */
    distinct?: DetalleCarritoScalarFieldEnum | DetalleCarritoScalarFieldEnum[]
  }


  /**
   * DetalleCarrito findFirstOrThrow
   */
  export type DetalleCarritoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarrito
     */
    select?: DetalleCarritoSelect<ExtArgs> | null
    /**
     * Filter, which DetalleCarrito to fetch.
     */
    where?: DetalleCarritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCarritos to fetch.
     */
    orderBy?: DetalleCarritoOrderByWithRelationInput | DetalleCarritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleCarritos.
     */
    cursor?: DetalleCarritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCarritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCarritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleCarritos.
     */
    distinct?: DetalleCarritoScalarFieldEnum | DetalleCarritoScalarFieldEnum[]
  }


  /**
   * DetalleCarrito findMany
   */
  export type DetalleCarritoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarrito
     */
    select?: DetalleCarritoSelect<ExtArgs> | null
    /**
     * Filter, which DetalleCarritos to fetch.
     */
    where?: DetalleCarritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCarritos to fetch.
     */
    orderBy?: DetalleCarritoOrderByWithRelationInput | DetalleCarritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DetalleCarritos.
     */
    cursor?: DetalleCarritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCarritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCarritos.
     */
    skip?: number
    distinct?: DetalleCarritoScalarFieldEnum | DetalleCarritoScalarFieldEnum[]
  }


  /**
   * DetalleCarrito create
   */
  export type DetalleCarritoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarrito
     */
    select?: DetalleCarritoSelect<ExtArgs> | null
    /**
     * The data needed to create a DetalleCarrito.
     */
    data: XOR<DetalleCarritoCreateInput, DetalleCarritoUncheckedCreateInput>
  }


  /**
   * DetalleCarrito createMany
   */
  export type DetalleCarritoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DetalleCarritos.
     */
    data: DetalleCarritoCreateManyInput | DetalleCarritoCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * DetalleCarrito update
   */
  export type DetalleCarritoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarrito
     */
    select?: DetalleCarritoSelect<ExtArgs> | null
    /**
     * The data needed to update a DetalleCarrito.
     */
    data: XOR<DetalleCarritoUpdateInput, DetalleCarritoUncheckedUpdateInput>
    /**
     * Choose, which DetalleCarrito to update.
     */
    where: DetalleCarritoWhereUniqueInput
  }


  /**
   * DetalleCarrito updateMany
   */
  export type DetalleCarritoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DetalleCarritos.
     */
    data: XOR<DetalleCarritoUpdateManyMutationInput, DetalleCarritoUncheckedUpdateManyInput>
    /**
     * Filter which DetalleCarritos to update
     */
    where?: DetalleCarritoWhereInput
  }


  /**
   * DetalleCarrito upsert
   */
  export type DetalleCarritoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarrito
     */
    select?: DetalleCarritoSelect<ExtArgs> | null
    /**
     * The filter to search for the DetalleCarrito to update in case it exists.
     */
    where: DetalleCarritoWhereUniqueInput
    /**
     * In case the DetalleCarrito found by the `where` argument doesn't exist, create a new DetalleCarrito with this data.
     */
    create: XOR<DetalleCarritoCreateInput, DetalleCarritoUncheckedCreateInput>
    /**
     * In case the DetalleCarrito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DetalleCarritoUpdateInput, DetalleCarritoUncheckedUpdateInput>
  }


  /**
   * DetalleCarrito delete
   */
  export type DetalleCarritoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarrito
     */
    select?: DetalleCarritoSelect<ExtArgs> | null
    /**
     * Filter which DetalleCarrito to delete.
     */
    where: DetalleCarritoWhereUniqueInput
  }


  /**
   * DetalleCarrito deleteMany
   */
  export type DetalleCarritoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleCarritos to delete
     */
    where?: DetalleCarritoWhereInput
  }


  /**
   * DetalleCarrito without action
   */
  export type DetalleCarritoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarrito
     */
    select?: DetalleCarritoSelect<ExtArgs> | null
  }



  /**
   * Model HistorialCompra
   */

  export type AggregateHistorialCompra = {
    _count: HistorialCompraCountAggregateOutputType | null
    _avg: HistorialCompraAvgAggregateOutputType | null
    _sum: HistorialCompraSumAggregateOutputType | null
    _min: HistorialCompraMinAggregateOutputType | null
    _max: HistorialCompraMaxAggregateOutputType | null
  }

  export type HistorialCompraAvgAggregateOutputType = {
    id_historial_compra: number | null
    id_cliente: number | null
    precio: number | null
    subtotal: number | null
    cantidad: number | null
  }

  export type HistorialCompraSumAggregateOutputType = {
    id_historial_compra: number | null
    id_cliente: number | null
    precio: number | null
    subtotal: number | null
    cantidad: number | null
  }

  export type HistorialCompraMinAggregateOutputType = {
    id_historial_compra: number | null
    id_cliente: number | null
    fecha_compra: Date | null
    precio: number | null
    subtotal: number | null
    cantidad: number | null
    items: string | null
  }

  export type HistorialCompraMaxAggregateOutputType = {
    id_historial_compra: number | null
    id_cliente: number | null
    fecha_compra: Date | null
    precio: number | null
    subtotal: number | null
    cantidad: number | null
    items: string | null
  }

  export type HistorialCompraCountAggregateOutputType = {
    id_historial_compra: number
    id_cliente: number
    fecha_compra: number
    precio: number
    subtotal: number
    cantidad: number
    items: number
    _all: number
  }


  export type HistorialCompraAvgAggregateInputType = {
    id_historial_compra?: true
    id_cliente?: true
    precio?: true
    subtotal?: true
    cantidad?: true
  }

  export type HistorialCompraSumAggregateInputType = {
    id_historial_compra?: true
    id_cliente?: true
    precio?: true
    subtotal?: true
    cantidad?: true
  }

  export type HistorialCompraMinAggregateInputType = {
    id_historial_compra?: true
    id_cliente?: true
    fecha_compra?: true
    precio?: true
    subtotal?: true
    cantidad?: true
    items?: true
  }

  export type HistorialCompraMaxAggregateInputType = {
    id_historial_compra?: true
    id_cliente?: true
    fecha_compra?: true
    precio?: true
    subtotal?: true
    cantidad?: true
    items?: true
  }

  export type HistorialCompraCountAggregateInputType = {
    id_historial_compra?: true
    id_cliente?: true
    fecha_compra?: true
    precio?: true
    subtotal?: true
    cantidad?: true
    items?: true
    _all?: true
  }

  export type HistorialCompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialCompra to aggregate.
     */
    where?: HistorialCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialCompras to fetch.
     */
    orderBy?: HistorialCompraOrderByWithRelationInput | HistorialCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistorialCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistorialCompras
    **/
    _count?: true | HistorialCompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialCompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialCompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialCompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialCompraMaxAggregateInputType
  }

  export type GetHistorialCompraAggregateType<T extends HistorialCompraAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialCompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialCompra[P]>
      : GetScalarType<T[P], AggregateHistorialCompra[P]>
  }




  export type HistorialCompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialCompraWhereInput
    orderBy?: HistorialCompraOrderByWithAggregationInput | HistorialCompraOrderByWithAggregationInput[]
    by: HistorialCompraScalarFieldEnum[] | HistorialCompraScalarFieldEnum
    having?: HistorialCompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialCompraCountAggregateInputType | true
    _avg?: HistorialCompraAvgAggregateInputType
    _sum?: HistorialCompraSumAggregateInputType
    _min?: HistorialCompraMinAggregateInputType
    _max?: HistorialCompraMaxAggregateInputType
  }

  export type HistorialCompraGroupByOutputType = {
    id_historial_compra: number
    id_cliente: number | null
    fecha_compra: Date
    precio: number
    subtotal: number
    cantidad: number
    items: string
    _count: HistorialCompraCountAggregateOutputType | null
    _avg: HistorialCompraAvgAggregateOutputType | null
    _sum: HistorialCompraSumAggregateOutputType | null
    _min: HistorialCompraMinAggregateOutputType | null
    _max: HistorialCompraMaxAggregateOutputType | null
  }

  type GetHistorialCompraGroupByPayload<T extends HistorialCompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialCompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialCompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialCompraGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialCompraGroupByOutputType[P]>
        }
      >
    >


  export type HistorialCompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_historial_compra?: boolean
    id_cliente?: boolean
    fecha_compra?: boolean
    precio?: boolean
    subtotal?: boolean
    cantidad?: boolean
    items?: boolean
  }, ExtArgs["result"]["historialCompra"]>

  export type HistorialCompraSelectScalar = {
    id_historial_compra?: boolean
    id_cliente?: boolean
    fecha_compra?: boolean
    precio?: boolean
    subtotal?: boolean
    cantidad?: boolean
    items?: boolean
  }


  export type $HistorialCompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistorialCompra"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_historial_compra: number
      id_cliente: number | null
      fecha_compra: Date
      precio: number
      subtotal: number
      cantidad: number
      items: string
    }, ExtArgs["result"]["historialCompra"]>
    composites: {}
  }


  type HistorialCompraGetPayload<S extends boolean | null | undefined | HistorialCompraDefaultArgs> = $Result.GetResult<Prisma.$HistorialCompraPayload, S>

  type HistorialCompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<HistorialCompraFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HistorialCompraCountAggregateInputType | true
    }

  export interface HistorialCompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistorialCompra'], meta: { name: 'HistorialCompra' } }
    /**
     * Find zero or one HistorialCompra that matches the filter.
     * @param {HistorialCompraFindUniqueArgs} args - Arguments to find a HistorialCompra
     * @example
     * // Get one HistorialCompra
     * const historialCompra = await prisma.historialCompra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends HistorialCompraFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, HistorialCompraFindUniqueArgs<ExtArgs>>
    ): Prisma__HistorialCompraClient<$Result.GetResult<Prisma.$HistorialCompraPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one HistorialCompra that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {HistorialCompraFindUniqueOrThrowArgs} args - Arguments to find a HistorialCompra
     * @example
     * // Get one HistorialCompra
     * const historialCompra = await prisma.historialCompra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends HistorialCompraFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, HistorialCompraFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__HistorialCompraClient<$Result.GetResult<Prisma.$HistorialCompraPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first HistorialCompra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialCompraFindFirstArgs} args - Arguments to find a HistorialCompra
     * @example
     * // Get one HistorialCompra
     * const historialCompra = await prisma.historialCompra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends HistorialCompraFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, HistorialCompraFindFirstArgs<ExtArgs>>
    ): Prisma__HistorialCompraClient<$Result.GetResult<Prisma.$HistorialCompraPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first HistorialCompra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialCompraFindFirstOrThrowArgs} args - Arguments to find a HistorialCompra
     * @example
     * // Get one HistorialCompra
     * const historialCompra = await prisma.historialCompra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends HistorialCompraFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, HistorialCompraFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__HistorialCompraClient<$Result.GetResult<Prisma.$HistorialCompraPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more HistorialCompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialCompraFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialCompras
     * const historialCompras = await prisma.historialCompra.findMany()
     * 
     * // Get first 10 HistorialCompras
     * const historialCompras = await prisma.historialCompra.findMany({ take: 10 })
     * 
     * // Only select the `id_historial_compra`
     * const historialCompraWithId_historial_compraOnly = await prisma.historialCompra.findMany({ select: { id_historial_compra: true } })
     * 
    **/
    findMany<T extends HistorialCompraFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, HistorialCompraFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialCompraPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a HistorialCompra.
     * @param {HistorialCompraCreateArgs} args - Arguments to create a HistorialCompra.
     * @example
     * // Create one HistorialCompra
     * const HistorialCompra = await prisma.historialCompra.create({
     *   data: {
     *     // ... data to create a HistorialCompra
     *   }
     * })
     * 
    **/
    create<T extends HistorialCompraCreateArgs<ExtArgs>>(
      args: SelectSubset<T, HistorialCompraCreateArgs<ExtArgs>>
    ): Prisma__HistorialCompraClient<$Result.GetResult<Prisma.$HistorialCompraPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many HistorialCompras.
     *     @param {HistorialCompraCreateManyArgs} args - Arguments to create many HistorialCompras.
     *     @example
     *     // Create many HistorialCompras
     *     const historialCompra = await prisma.historialCompra.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends HistorialCompraCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, HistorialCompraCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a HistorialCompra.
     * @param {HistorialCompraDeleteArgs} args - Arguments to delete one HistorialCompra.
     * @example
     * // Delete one HistorialCompra
     * const HistorialCompra = await prisma.historialCompra.delete({
     *   where: {
     *     // ... filter to delete one HistorialCompra
     *   }
     * })
     * 
    **/
    delete<T extends HistorialCompraDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, HistorialCompraDeleteArgs<ExtArgs>>
    ): Prisma__HistorialCompraClient<$Result.GetResult<Prisma.$HistorialCompraPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one HistorialCompra.
     * @param {HistorialCompraUpdateArgs} args - Arguments to update one HistorialCompra.
     * @example
     * // Update one HistorialCompra
     * const historialCompra = await prisma.historialCompra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends HistorialCompraUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, HistorialCompraUpdateArgs<ExtArgs>>
    ): Prisma__HistorialCompraClient<$Result.GetResult<Prisma.$HistorialCompraPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more HistorialCompras.
     * @param {HistorialCompraDeleteManyArgs} args - Arguments to filter HistorialCompras to delete.
     * @example
     * // Delete a few HistorialCompras
     * const { count } = await prisma.historialCompra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends HistorialCompraDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, HistorialCompraDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialCompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialCompras
     * const historialCompra = await prisma.historialCompra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends HistorialCompraUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, HistorialCompraUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistorialCompra.
     * @param {HistorialCompraUpsertArgs} args - Arguments to update or create a HistorialCompra.
     * @example
     * // Update or create a HistorialCompra
     * const historialCompra = await prisma.historialCompra.upsert({
     *   create: {
     *     // ... data to create a HistorialCompra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialCompra we want to update
     *   }
     * })
    **/
    upsert<T extends HistorialCompraUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, HistorialCompraUpsertArgs<ExtArgs>>
    ): Prisma__HistorialCompraClient<$Result.GetResult<Prisma.$HistorialCompraPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of HistorialCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialCompraCountArgs} args - Arguments to filter HistorialCompras to count.
     * @example
     * // Count the number of HistorialCompras
     * const count = await prisma.historialCompra.count({
     *   where: {
     *     // ... the filter for the HistorialCompras we want to count
     *   }
     * })
    **/
    count<T extends HistorialCompraCountArgs>(
      args?: Subset<T, HistorialCompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialCompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialCompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialCompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialCompraAggregateArgs>(args: Subset<T, HistorialCompraAggregateArgs>): Prisma.PrismaPromise<GetHistorialCompraAggregateType<T>>

    /**
     * Group by HistorialCompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialCompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistorialCompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistorialCompraGroupByArgs['orderBy'] }
        : { orderBy?: HistorialCompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistorialCompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialCompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistorialCompra model
   */
  readonly fields: HistorialCompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistorialCompra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistorialCompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the HistorialCompra model
   */ 
  interface HistorialCompraFieldRefs {
    readonly id_historial_compra: FieldRef<"HistorialCompra", 'Int'>
    readonly id_cliente: FieldRef<"HistorialCompra", 'Int'>
    readonly fecha_compra: FieldRef<"HistorialCompra", 'DateTime'>
    readonly precio: FieldRef<"HistorialCompra", 'Float'>
    readonly subtotal: FieldRef<"HistorialCompra", 'Float'>
    readonly cantidad: FieldRef<"HistorialCompra", 'Int'>
    readonly items: FieldRef<"HistorialCompra", 'String'>
  }
    

  // Custom InputTypes

  /**
   * HistorialCompra findUnique
   */
  export type HistorialCompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialCompra
     */
    select?: HistorialCompraSelect<ExtArgs> | null
    /**
     * Filter, which HistorialCompra to fetch.
     */
    where: HistorialCompraWhereUniqueInput
  }


  /**
   * HistorialCompra findUniqueOrThrow
   */
  export type HistorialCompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialCompra
     */
    select?: HistorialCompraSelect<ExtArgs> | null
    /**
     * Filter, which HistorialCompra to fetch.
     */
    where: HistorialCompraWhereUniqueInput
  }


  /**
   * HistorialCompra findFirst
   */
  export type HistorialCompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialCompra
     */
    select?: HistorialCompraSelect<ExtArgs> | null
    /**
     * Filter, which HistorialCompra to fetch.
     */
    where?: HistorialCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialCompras to fetch.
     */
    orderBy?: HistorialCompraOrderByWithRelationInput | HistorialCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialCompras.
     */
    cursor?: HistorialCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialCompras.
     */
    distinct?: HistorialCompraScalarFieldEnum | HistorialCompraScalarFieldEnum[]
  }


  /**
   * HistorialCompra findFirstOrThrow
   */
  export type HistorialCompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialCompra
     */
    select?: HistorialCompraSelect<ExtArgs> | null
    /**
     * Filter, which HistorialCompra to fetch.
     */
    where?: HistorialCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialCompras to fetch.
     */
    orderBy?: HistorialCompraOrderByWithRelationInput | HistorialCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialCompras.
     */
    cursor?: HistorialCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialCompras.
     */
    distinct?: HistorialCompraScalarFieldEnum | HistorialCompraScalarFieldEnum[]
  }


  /**
   * HistorialCompra findMany
   */
  export type HistorialCompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialCompra
     */
    select?: HistorialCompraSelect<ExtArgs> | null
    /**
     * Filter, which HistorialCompras to fetch.
     */
    where?: HistorialCompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialCompras to fetch.
     */
    orderBy?: HistorialCompraOrderByWithRelationInput | HistorialCompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistorialCompras.
     */
    cursor?: HistorialCompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialCompras.
     */
    skip?: number
    distinct?: HistorialCompraScalarFieldEnum | HistorialCompraScalarFieldEnum[]
  }


  /**
   * HistorialCompra create
   */
  export type HistorialCompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialCompra
     */
    select?: HistorialCompraSelect<ExtArgs> | null
    /**
     * The data needed to create a HistorialCompra.
     */
    data: XOR<HistorialCompraCreateInput, HistorialCompraUncheckedCreateInput>
  }


  /**
   * HistorialCompra createMany
   */
  export type HistorialCompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistorialCompras.
     */
    data: HistorialCompraCreateManyInput | HistorialCompraCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * HistorialCompra update
   */
  export type HistorialCompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialCompra
     */
    select?: HistorialCompraSelect<ExtArgs> | null
    /**
     * The data needed to update a HistorialCompra.
     */
    data: XOR<HistorialCompraUpdateInput, HistorialCompraUncheckedUpdateInput>
    /**
     * Choose, which HistorialCompra to update.
     */
    where: HistorialCompraWhereUniqueInput
  }


  /**
   * HistorialCompra updateMany
   */
  export type HistorialCompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistorialCompras.
     */
    data: XOR<HistorialCompraUpdateManyMutationInput, HistorialCompraUncheckedUpdateManyInput>
    /**
     * Filter which HistorialCompras to update
     */
    where?: HistorialCompraWhereInput
  }


  /**
   * HistorialCompra upsert
   */
  export type HistorialCompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialCompra
     */
    select?: HistorialCompraSelect<ExtArgs> | null
    /**
     * The filter to search for the HistorialCompra to update in case it exists.
     */
    where: HistorialCompraWhereUniqueInput
    /**
     * In case the HistorialCompra found by the `where` argument doesn't exist, create a new HistorialCompra with this data.
     */
    create: XOR<HistorialCompraCreateInput, HistorialCompraUncheckedCreateInput>
    /**
     * In case the HistorialCompra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistorialCompraUpdateInput, HistorialCompraUncheckedUpdateInput>
  }


  /**
   * HistorialCompra delete
   */
  export type HistorialCompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialCompra
     */
    select?: HistorialCompraSelect<ExtArgs> | null
    /**
     * Filter which HistorialCompra to delete.
     */
    where: HistorialCompraWhereUniqueInput
  }


  /**
   * HistorialCompra deleteMany
   */
  export type HistorialCompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialCompras to delete
     */
    where?: HistorialCompraWhereInput
  }


  /**
   * HistorialCompra without action
   */
  export type HistorialCompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialCompra
     */
    select?: HistorialCompraSelect<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AdminScalarFieldEnum: {
    ID_admin: 'ID_admin',
    nombre: 'nombre',
    correo: 'correo',
    contrasena: 'contrasena',
    imagen: 'imagen'
  };

  export type AdminScalarFieldEnum = (typeof AdminScalarFieldEnum)[keyof typeof AdminScalarFieldEnum]


  export const ClienteScalarFieldEnum: {
    ID_cliente: 'ID_cliente',
    nombre: 'nombre',
    telefono: 'telefono',
    correo: 'correo',
    contrasena: 'contrasena',
    ID_instagram: 'ID_instagram',
    ID_Facebook: 'ID_Facebook',
    imagen: 'imagen',
    Preferencias: 'Preferencias',
    ID_idioma: 'ID_idioma'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const DestinosScalarFieldEnum: {
    ID_destino: 'ID_destino',
    nombre: 'nombre',
    precio: 'precio',
    ubicacion: 'ubicacion',
    categoria: 'categoria',
    actividades: 'actividades',
    cupos: 'cupos',
    ID_admin: 'ID_admin'
  };

  export type DestinosScalarFieldEnum = (typeof DestinosScalarFieldEnum)[keyof typeof DestinosScalarFieldEnum]


  export const EventosScalarFieldEnum: {
    ID_evento: 'ID_evento',
    ID_tipo_e: 'ID_tipo_e',
    ID_cliente: 'ID_cliente',
    descripcion: 'descripcion',
    fecha: 'fecha',
    ID_admin: 'ID_admin'
  };

  export type EventosScalarFieldEnum = (typeof EventosScalarFieldEnum)[keyof typeof EventosScalarFieldEnum]


  export const IdiomasScalarFieldEnum: {
    ID_idioma: 'ID_idioma',
    nombre: 'nombre',
    codigo: 'codigo'
  };

  export type IdiomasScalarFieldEnum = (typeof IdiomasScalarFieldEnum)[keyof typeof IdiomasScalarFieldEnum]


  export const ItinerarioScalarFieldEnum: {
    ID_itinerario: 'ID_itinerario',
    ID_cliente: 'ID_cliente',
    ID_reserva: 'ID_reserva',
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type ItinerarioScalarFieldEnum = (typeof ItinerarioScalarFieldEnum)[keyof typeof ItinerarioScalarFieldEnum]


  export const PagosScalarFieldEnum: {
    ID_pago: 'ID_pago',
    ID_cliente: 'ID_cliente',
    ID_tipo_m: 'ID_tipo_m',
    id_detalle_carrito: 'id_detalle_carrito',
    nombre_titular: 'nombre_titular',
    numero_tarjeta: 'numero_tarjeta',
    fecha_expiracion: 'fecha_expiracion',
    cvv: 'cvv',
    direccion: 'direccion'
  };

  export type PagosScalarFieldEnum = (typeof PagosScalarFieldEnum)[keyof typeof PagosScalarFieldEnum]


  export const RecuperacionContrasenaScalarFieldEnum: {
    ID_request: 'ID_request',
    ID_cliente: 'ID_cliente',
    ID_admin: 'ID_admin',
    Token: 'Token',
    Fecha: 'Fecha',
    Estado: 'Estado'
  };

  export type RecuperacionContrasenaScalarFieldEnum = (typeof RecuperacionContrasenaScalarFieldEnum)[keyof typeof RecuperacionContrasenaScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    ID_review: 'ID_review',
    ID_cliente: 'ID_cliente',
    ID_tipo_s: 'ID_tipo_s',
    ID_servicio: 'ID_servicio',
    ID_destino: 'ID_destino',
    calificacion: 'calificacion',
    comentario: 'comentario',
    fecha: 'fecha',
    ID_admin: 'ID_admin'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const ReservasScalarFieldEnum: {
    ID_reserva: 'ID_reserva',
    ID_cliente: 'ID_cliente',
    ID_itinerario: 'ID_itinerario',
    ID_servicio: 'ID_servicio',
    fecha_inicio: 'fecha_inicio',
    fecha_fin: 'fecha_fin',
    precio_total: 'precio_total',
    ID_admin: 'ID_admin'
  };

  export type ReservasScalarFieldEnum = (typeof ReservasScalarFieldEnum)[keyof typeof ReservasScalarFieldEnum]


  export const ServiciosScalarFieldEnum: {
    ID_servicio: 'ID_servicio',
    ID_tipo_s: 'ID_tipo_s',
    nombre: 'nombre',
    destino: 'destino',
    precio_diario: 'precio_diario',
    detalles: 'detalles',
    ID_admin: 'ID_admin'
  };

  export type ServiciosScalarFieldEnum = (typeof ServiciosScalarFieldEnum)[keyof typeof ServiciosScalarFieldEnum]


  export const Tipo_eventoScalarFieldEnum: {
    ID_tipo_e: 'ID_tipo_e',
    ID_destino: 'ID_destino',
    ID_servicio: 'ID_servicio',
    ID_reserva: 'ID_reserva'
  };

  export type Tipo_eventoScalarFieldEnum = (typeof Tipo_eventoScalarFieldEnum)[keyof typeof Tipo_eventoScalarFieldEnum]


  export const Tipo_monedaScalarFieldEnum: {
    ID_tipo_m: 'ID_tipo_m',
    nombre: 'nombre',
    codigo: 'codigo',
    simbolo: 'simbolo'
  };

  export type Tipo_monedaScalarFieldEnum = (typeof Tipo_monedaScalarFieldEnum)[keyof typeof Tipo_monedaScalarFieldEnum]


  export const Tipo_servicioScalarFieldEnum: {
    ID_tipo_s: 'ID_tipo_s',
    Descripcion: 'Descripcion'
  };

  export type Tipo_servicioScalarFieldEnum = (typeof Tipo_servicioScalarFieldEnum)[keyof typeof Tipo_servicioScalarFieldEnum]


  export const DetalleCarritoScalarFieldEnum: {
    id_detalle_carrito: 'id_detalle_carrito',
    item: 'item',
    cantidad: 'cantidad',
    precio: 'precio',
    id_cliente: 'id_cliente',
    subtotal: 'subtotal'
  };

  export type DetalleCarritoScalarFieldEnum = (typeof DetalleCarritoScalarFieldEnum)[keyof typeof DetalleCarritoScalarFieldEnum]


  export const HistorialCompraScalarFieldEnum: {
    id_historial_compra: 'id_historial_compra',
    id_cliente: 'id_cliente',
    fecha_compra: 'fecha_compra',
    precio: 'precio',
    subtotal: 'subtotal',
    cantidad: 'cantidad',
    items: 'items'
  };

  export type HistorialCompraScalarFieldEnum = (typeof HistorialCompraScalarFieldEnum)[keyof typeof HistorialCompraScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Bytes'
   */
  export type BytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes'>
    


  /**
   * Reference to a field of type 'Bytes[]'
   */
  export type ListBytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    
  /**
   * Deep Input Types
   */


  export type AdminWhereInput = {
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    ID_admin?: IntFilter<"Admin"> | number
    nombre?: StringFilter<"Admin"> | string
    correo?: StringFilter<"Admin"> | string
    contrasena?: StringFilter<"Admin"> | string
    imagen?: BytesNullableFilter<"Admin"> | Buffer | null
    destinos?: DestinosListRelationFilter
  }

  export type AdminOrderByWithRelationInput = {
    ID_admin?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    imagen?: SortOrderInput | SortOrder
    destinos?: DestinosOrderByRelationAggregateInput
  }

  export type AdminWhereUniqueInput = Prisma.AtLeast<{
    ID_admin?: number
    nombre?: string
    correo?: string
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    contrasena?: StringFilter<"Admin"> | string
    imagen?: BytesNullableFilter<"Admin"> | Buffer | null
    destinos?: DestinosListRelationFilter
  }, "ID_admin" | "nombre" | "correo">

  export type AdminOrderByWithAggregationInput = {
    ID_admin?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    imagen?: SortOrderInput | SortOrder
    _count?: AdminCountOrderByAggregateInput
    _avg?: AdminAvgOrderByAggregateInput
    _max?: AdminMaxOrderByAggregateInput
    _min?: AdminMinOrderByAggregateInput
    _sum?: AdminSumOrderByAggregateInput
  }

  export type AdminScalarWhereWithAggregatesInput = {
    AND?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    OR?: AdminScalarWhereWithAggregatesInput[]
    NOT?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    ID_admin?: IntWithAggregatesFilter<"Admin"> | number
    nombre?: StringWithAggregatesFilter<"Admin"> | string
    correo?: StringWithAggregatesFilter<"Admin"> | string
    contrasena?: StringWithAggregatesFilter<"Admin"> | string
    imagen?: BytesNullableWithAggregatesFilter<"Admin"> | Buffer | null
  }

  export type ClienteWhereInput = {
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    ID_cliente?: IntFilter<"Cliente"> | number
    nombre?: StringFilter<"Cliente"> | string
    telefono?: StringNullableFilter<"Cliente"> | string | null
    correo?: StringFilter<"Cliente"> | string
    contrasena?: StringFilter<"Cliente"> | string
    ID_instagram?: StringNullableFilter<"Cliente"> | string | null
    ID_Facebook?: StringNullableFilter<"Cliente"> | string | null
    imagen?: BytesNullableFilter<"Cliente"> | Buffer | null
    Preferencias?: StringNullableFilter<"Cliente"> | string | null
    ID_idioma?: IntNullableFilter<"Cliente"> | number | null
    idioma?: XOR<IdiomasNullableRelationFilter, IdiomasWhereInput> | null
  }

  export type ClienteOrderByWithRelationInput = {
    ID_cliente?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrderInput | SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    ID_instagram?: SortOrderInput | SortOrder
    ID_Facebook?: SortOrderInput | SortOrder
    imagen?: SortOrderInput | SortOrder
    Preferencias?: SortOrderInput | SortOrder
    ID_idioma?: SortOrderInput | SortOrder
    idioma?: IdiomasOrderByWithRelationInput
  }

  export type ClienteWhereUniqueInput = Prisma.AtLeast<{
    ID_cliente?: number
    nombre?: string
    correo?: string
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    telefono?: StringNullableFilter<"Cliente"> | string | null
    contrasena?: StringFilter<"Cliente"> | string
    ID_instagram?: StringNullableFilter<"Cliente"> | string | null
    ID_Facebook?: StringNullableFilter<"Cliente"> | string | null
    imagen?: BytesNullableFilter<"Cliente"> | Buffer | null
    Preferencias?: StringNullableFilter<"Cliente"> | string | null
    ID_idioma?: IntNullableFilter<"Cliente"> | number | null
    idioma?: XOR<IdiomasNullableRelationFilter, IdiomasWhereInput> | null
  }, "ID_cliente" | "nombre" | "correo">

  export type ClienteOrderByWithAggregationInput = {
    ID_cliente?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrderInput | SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    ID_instagram?: SortOrderInput | SortOrder
    ID_Facebook?: SortOrderInput | SortOrder
    imagen?: SortOrderInput | SortOrder
    Preferencias?: SortOrderInput | SortOrder
    ID_idioma?: SortOrderInput | SortOrder
    _count?: ClienteCountOrderByAggregateInput
    _avg?: ClienteAvgOrderByAggregateInput
    _max?: ClienteMaxOrderByAggregateInput
    _min?: ClienteMinOrderByAggregateInput
    _sum?: ClienteSumOrderByAggregateInput
  }

  export type ClienteScalarWhereWithAggregatesInput = {
    AND?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    OR?: ClienteScalarWhereWithAggregatesInput[]
    NOT?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    ID_cliente?: IntWithAggregatesFilter<"Cliente"> | number
    nombre?: StringWithAggregatesFilter<"Cliente"> | string
    telefono?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    correo?: StringWithAggregatesFilter<"Cliente"> | string
    contrasena?: StringWithAggregatesFilter<"Cliente"> | string
    ID_instagram?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    ID_Facebook?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    imagen?: BytesNullableWithAggregatesFilter<"Cliente"> | Buffer | null
    Preferencias?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    ID_idioma?: IntNullableWithAggregatesFilter<"Cliente"> | number | null
  }

  export type DestinosWhereInput = {
    AND?: DestinosWhereInput | DestinosWhereInput[]
    OR?: DestinosWhereInput[]
    NOT?: DestinosWhereInput | DestinosWhereInput[]
    ID_destino?: IntFilter<"Destinos"> | number
    nombre?: StringFilter<"Destinos"> | string
    precio?: FloatNullableFilter<"Destinos"> | number | null
    ubicacion?: StringNullableFilter<"Destinos"> | string | null
    categoria?: StringNullableFilter<"Destinos"> | string | null
    actividades?: StringNullableFilter<"Destinos"> | string | null
    cupos?: IntNullableFilter<"Destinos"> | number | null
    ID_admin?: IntNullableFilter<"Destinos"> | number | null
    admin?: XOR<AdminNullableRelationFilter, AdminWhereInput> | null
  }

  export type DestinosOrderByWithRelationInput = {
    ID_destino?: SortOrder
    nombre?: SortOrder
    precio?: SortOrderInput | SortOrder
    ubicacion?: SortOrderInput | SortOrder
    categoria?: SortOrderInput | SortOrder
    actividades?: SortOrderInput | SortOrder
    cupos?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
    admin?: AdminOrderByWithRelationInput
  }

  export type DestinosWhereUniqueInput = Prisma.AtLeast<{
    ID_destino?: number
    AND?: DestinosWhereInput | DestinosWhereInput[]
    OR?: DestinosWhereInput[]
    NOT?: DestinosWhereInput | DestinosWhereInput[]
    nombre?: StringFilter<"Destinos"> | string
    precio?: FloatNullableFilter<"Destinos"> | number | null
    ubicacion?: StringNullableFilter<"Destinos"> | string | null
    categoria?: StringNullableFilter<"Destinos"> | string | null
    actividades?: StringNullableFilter<"Destinos"> | string | null
    cupos?: IntNullableFilter<"Destinos"> | number | null
    ID_admin?: IntNullableFilter<"Destinos"> | number | null
    admin?: XOR<AdminNullableRelationFilter, AdminWhereInput> | null
  }, "ID_destino">

  export type DestinosOrderByWithAggregationInput = {
    ID_destino?: SortOrder
    nombre?: SortOrder
    precio?: SortOrderInput | SortOrder
    ubicacion?: SortOrderInput | SortOrder
    categoria?: SortOrderInput | SortOrder
    actividades?: SortOrderInput | SortOrder
    cupos?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
    _count?: DestinosCountOrderByAggregateInput
    _avg?: DestinosAvgOrderByAggregateInput
    _max?: DestinosMaxOrderByAggregateInput
    _min?: DestinosMinOrderByAggregateInput
    _sum?: DestinosSumOrderByAggregateInput
  }

  export type DestinosScalarWhereWithAggregatesInput = {
    AND?: DestinosScalarWhereWithAggregatesInput | DestinosScalarWhereWithAggregatesInput[]
    OR?: DestinosScalarWhereWithAggregatesInput[]
    NOT?: DestinosScalarWhereWithAggregatesInput | DestinosScalarWhereWithAggregatesInput[]
    ID_destino?: IntWithAggregatesFilter<"Destinos"> | number
    nombre?: StringWithAggregatesFilter<"Destinos"> | string
    precio?: FloatNullableWithAggregatesFilter<"Destinos"> | number | null
    ubicacion?: StringNullableWithAggregatesFilter<"Destinos"> | string | null
    categoria?: StringNullableWithAggregatesFilter<"Destinos"> | string | null
    actividades?: StringNullableWithAggregatesFilter<"Destinos"> | string | null
    cupos?: IntNullableWithAggregatesFilter<"Destinos"> | number | null
    ID_admin?: IntNullableWithAggregatesFilter<"Destinos"> | number | null
  }

  export type EventosWhereInput = {
    AND?: EventosWhereInput | EventosWhereInput[]
    OR?: EventosWhereInput[]
    NOT?: EventosWhereInput | EventosWhereInput[]
    ID_evento?: IntFilter<"Eventos"> | number
    ID_tipo_e?: IntNullableFilter<"Eventos"> | number | null
    ID_cliente?: IntNullableFilter<"Eventos"> | number | null
    descripcion?: StringNullableFilter<"Eventos"> | string | null
    fecha?: DateTimeNullableFilter<"Eventos"> | Date | string | null
    ID_admin?: IntNullableFilter<"Eventos"> | number | null
  }

  export type EventosOrderByWithRelationInput = {
    ID_evento?: SortOrder
    ID_tipo_e?: SortOrderInput | SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
  }

  export type EventosWhereUniqueInput = Prisma.AtLeast<{
    ID_evento?: number
    AND?: EventosWhereInput | EventosWhereInput[]
    OR?: EventosWhereInput[]
    NOT?: EventosWhereInput | EventosWhereInput[]
    ID_tipo_e?: IntNullableFilter<"Eventos"> | number | null
    ID_cliente?: IntNullableFilter<"Eventos"> | number | null
    descripcion?: StringNullableFilter<"Eventos"> | string | null
    fecha?: DateTimeNullableFilter<"Eventos"> | Date | string | null
    ID_admin?: IntNullableFilter<"Eventos"> | number | null
  }, "ID_evento">

  export type EventosOrderByWithAggregationInput = {
    ID_evento?: SortOrder
    ID_tipo_e?: SortOrderInput | SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
    _count?: EventosCountOrderByAggregateInput
    _avg?: EventosAvgOrderByAggregateInput
    _max?: EventosMaxOrderByAggregateInput
    _min?: EventosMinOrderByAggregateInput
    _sum?: EventosSumOrderByAggregateInput
  }

  export type EventosScalarWhereWithAggregatesInput = {
    AND?: EventosScalarWhereWithAggregatesInput | EventosScalarWhereWithAggregatesInput[]
    OR?: EventosScalarWhereWithAggregatesInput[]
    NOT?: EventosScalarWhereWithAggregatesInput | EventosScalarWhereWithAggregatesInput[]
    ID_evento?: IntWithAggregatesFilter<"Eventos"> | number
    ID_tipo_e?: IntNullableWithAggregatesFilter<"Eventos"> | number | null
    ID_cliente?: IntNullableWithAggregatesFilter<"Eventos"> | number | null
    descripcion?: StringNullableWithAggregatesFilter<"Eventos"> | string | null
    fecha?: DateTimeNullableWithAggregatesFilter<"Eventos"> | Date | string | null
    ID_admin?: IntNullableWithAggregatesFilter<"Eventos"> | number | null
  }

  export type IdiomasWhereInput = {
    AND?: IdiomasWhereInput | IdiomasWhereInput[]
    OR?: IdiomasWhereInput[]
    NOT?: IdiomasWhereInput | IdiomasWhereInput[]
    ID_idioma?: IntFilter<"Idiomas"> | number
    nombre?: StringFilter<"Idiomas"> | string
    codigo?: StringFilter<"Idiomas"> | string
    cliente?: ClienteListRelationFilter
  }

  export type IdiomasOrderByWithRelationInput = {
    ID_idioma?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    cliente?: ClienteOrderByRelationAggregateInput
  }

  export type IdiomasWhereUniqueInput = Prisma.AtLeast<{
    ID_idioma?: number
    AND?: IdiomasWhereInput | IdiomasWhereInput[]
    OR?: IdiomasWhereInput[]
    NOT?: IdiomasWhereInput | IdiomasWhereInput[]
    nombre?: StringFilter<"Idiomas"> | string
    codigo?: StringFilter<"Idiomas"> | string
    cliente?: ClienteListRelationFilter
  }, "ID_idioma">

  export type IdiomasOrderByWithAggregationInput = {
    ID_idioma?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    _count?: IdiomasCountOrderByAggregateInput
    _avg?: IdiomasAvgOrderByAggregateInput
    _max?: IdiomasMaxOrderByAggregateInput
    _min?: IdiomasMinOrderByAggregateInput
    _sum?: IdiomasSumOrderByAggregateInput
  }

  export type IdiomasScalarWhereWithAggregatesInput = {
    AND?: IdiomasScalarWhereWithAggregatesInput | IdiomasScalarWhereWithAggregatesInput[]
    OR?: IdiomasScalarWhereWithAggregatesInput[]
    NOT?: IdiomasScalarWhereWithAggregatesInput | IdiomasScalarWhereWithAggregatesInput[]
    ID_idioma?: IntWithAggregatesFilter<"Idiomas"> | number
    nombre?: StringWithAggregatesFilter<"Idiomas"> | string
    codigo?: StringWithAggregatesFilter<"Idiomas"> | string
  }

  export type ItinerarioWhereInput = {
    AND?: ItinerarioWhereInput | ItinerarioWhereInput[]
    OR?: ItinerarioWhereInput[]
    NOT?: ItinerarioWhereInput | ItinerarioWhereInput[]
    ID_itinerario?: IntFilter<"Itinerario"> | number
    ID_cliente?: IntNullableFilter<"Itinerario"> | number | null
    ID_reserva?: IntNullableFilter<"Itinerario"> | number | null
    nombre?: StringNullableFilter<"Itinerario"> | string | null
    descripcion?: StringNullableFilter<"Itinerario"> | string | null
  }

  export type ItinerarioOrderByWithRelationInput = {
    ID_itinerario?: SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    ID_reserva?: SortOrderInput | SortOrder
    nombre?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
  }

  export type ItinerarioWhereUniqueInput = Prisma.AtLeast<{
    ID_itinerario?: number
    AND?: ItinerarioWhereInput | ItinerarioWhereInput[]
    OR?: ItinerarioWhereInput[]
    NOT?: ItinerarioWhereInput | ItinerarioWhereInput[]
    ID_cliente?: IntNullableFilter<"Itinerario"> | number | null
    ID_reserva?: IntNullableFilter<"Itinerario"> | number | null
    nombre?: StringNullableFilter<"Itinerario"> | string | null
    descripcion?: StringNullableFilter<"Itinerario"> | string | null
  }, "ID_itinerario">

  export type ItinerarioOrderByWithAggregationInput = {
    ID_itinerario?: SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    ID_reserva?: SortOrderInput | SortOrder
    nombre?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: ItinerarioCountOrderByAggregateInput
    _avg?: ItinerarioAvgOrderByAggregateInput
    _max?: ItinerarioMaxOrderByAggregateInput
    _min?: ItinerarioMinOrderByAggregateInput
    _sum?: ItinerarioSumOrderByAggregateInput
  }

  export type ItinerarioScalarWhereWithAggregatesInput = {
    AND?: ItinerarioScalarWhereWithAggregatesInput | ItinerarioScalarWhereWithAggregatesInput[]
    OR?: ItinerarioScalarWhereWithAggregatesInput[]
    NOT?: ItinerarioScalarWhereWithAggregatesInput | ItinerarioScalarWhereWithAggregatesInput[]
    ID_itinerario?: IntWithAggregatesFilter<"Itinerario"> | number
    ID_cliente?: IntNullableWithAggregatesFilter<"Itinerario"> | number | null
    ID_reserva?: IntNullableWithAggregatesFilter<"Itinerario"> | number | null
    nombre?: StringNullableWithAggregatesFilter<"Itinerario"> | string | null
    descripcion?: StringNullableWithAggregatesFilter<"Itinerario"> | string | null
  }

  export type PagosWhereInput = {
    AND?: PagosWhereInput | PagosWhereInput[]
    OR?: PagosWhereInput[]
    NOT?: PagosWhereInput | PagosWhereInput[]
    ID_pago?: IntFilter<"Pagos"> | number
    ID_cliente?: IntNullableFilter<"Pagos"> | number | null
    ID_tipo_m?: IntNullableFilter<"Pagos"> | number | null
    id_detalle_carrito?: IntNullableFilter<"Pagos"> | number | null
    nombre_titular?: StringFilter<"Pagos"> | string
    numero_tarjeta?: StringFilter<"Pagos"> | string
    fecha_expiracion?: DateTimeNullableFilter<"Pagos"> | Date | string | null
    cvv?: IntNullableFilter<"Pagos"> | number | null
    direccion?: StringNullableFilter<"Pagos"> | string | null
  }

  export type PagosOrderByWithRelationInput = {
    ID_pago?: SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    ID_tipo_m?: SortOrderInput | SortOrder
    id_detalle_carrito?: SortOrderInput | SortOrder
    nombre_titular?: SortOrder
    numero_tarjeta?: SortOrder
    fecha_expiracion?: SortOrderInput | SortOrder
    cvv?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
  }

  export type PagosWhereUniqueInput = Prisma.AtLeast<{
    ID_pago?: number
    AND?: PagosWhereInput | PagosWhereInput[]
    OR?: PagosWhereInput[]
    NOT?: PagosWhereInput | PagosWhereInput[]
    ID_cliente?: IntNullableFilter<"Pagos"> | number | null
    ID_tipo_m?: IntNullableFilter<"Pagos"> | number | null
    id_detalle_carrito?: IntNullableFilter<"Pagos"> | number | null
    nombre_titular?: StringFilter<"Pagos"> | string
    numero_tarjeta?: StringFilter<"Pagos"> | string
    fecha_expiracion?: DateTimeNullableFilter<"Pagos"> | Date | string | null
    cvv?: IntNullableFilter<"Pagos"> | number | null
    direccion?: StringNullableFilter<"Pagos"> | string | null
  }, "ID_pago">

  export type PagosOrderByWithAggregationInput = {
    ID_pago?: SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    ID_tipo_m?: SortOrderInput | SortOrder
    id_detalle_carrito?: SortOrderInput | SortOrder
    nombre_titular?: SortOrder
    numero_tarjeta?: SortOrder
    fecha_expiracion?: SortOrderInput | SortOrder
    cvv?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    _count?: PagosCountOrderByAggregateInput
    _avg?: PagosAvgOrderByAggregateInput
    _max?: PagosMaxOrderByAggregateInput
    _min?: PagosMinOrderByAggregateInput
    _sum?: PagosSumOrderByAggregateInput
  }

  export type PagosScalarWhereWithAggregatesInput = {
    AND?: PagosScalarWhereWithAggregatesInput | PagosScalarWhereWithAggregatesInput[]
    OR?: PagosScalarWhereWithAggregatesInput[]
    NOT?: PagosScalarWhereWithAggregatesInput | PagosScalarWhereWithAggregatesInput[]
    ID_pago?: IntWithAggregatesFilter<"Pagos"> | number
    ID_cliente?: IntNullableWithAggregatesFilter<"Pagos"> | number | null
    ID_tipo_m?: IntNullableWithAggregatesFilter<"Pagos"> | number | null
    id_detalle_carrito?: IntNullableWithAggregatesFilter<"Pagos"> | number | null
    nombre_titular?: StringWithAggregatesFilter<"Pagos"> | string
    numero_tarjeta?: StringWithAggregatesFilter<"Pagos"> | string
    fecha_expiracion?: DateTimeNullableWithAggregatesFilter<"Pagos"> | Date | string | null
    cvv?: IntNullableWithAggregatesFilter<"Pagos"> | number | null
    direccion?: StringNullableWithAggregatesFilter<"Pagos"> | string | null
  }

  export type RecuperacionContrasenaWhereInput = {
    AND?: RecuperacionContrasenaWhereInput | RecuperacionContrasenaWhereInput[]
    OR?: RecuperacionContrasenaWhereInput[]
    NOT?: RecuperacionContrasenaWhereInput | RecuperacionContrasenaWhereInput[]
    ID_request?: IntFilter<"RecuperacionContrasena"> | number
    ID_cliente?: IntNullableFilter<"RecuperacionContrasena"> | number | null
    ID_admin?: IntNullableFilter<"RecuperacionContrasena"> | number | null
    Token?: StringFilter<"RecuperacionContrasena"> | string
    Fecha?: DateTimeNullableFilter<"RecuperacionContrasena"> | Date | string | null
    Estado?: StringNullableFilter<"RecuperacionContrasena"> | string | null
  }

  export type RecuperacionContrasenaOrderByWithRelationInput = {
    ID_request?: SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
    Token?: SortOrder
    Fecha?: SortOrderInput | SortOrder
    Estado?: SortOrderInput | SortOrder
  }

  export type RecuperacionContrasenaWhereUniqueInput = Prisma.AtLeast<{
    ID_request?: number
    AND?: RecuperacionContrasenaWhereInput | RecuperacionContrasenaWhereInput[]
    OR?: RecuperacionContrasenaWhereInput[]
    NOT?: RecuperacionContrasenaWhereInput | RecuperacionContrasenaWhereInput[]
    ID_cliente?: IntNullableFilter<"RecuperacionContrasena"> | number | null
    ID_admin?: IntNullableFilter<"RecuperacionContrasena"> | number | null
    Token?: StringFilter<"RecuperacionContrasena"> | string
    Fecha?: DateTimeNullableFilter<"RecuperacionContrasena"> | Date | string | null
    Estado?: StringNullableFilter<"RecuperacionContrasena"> | string | null
  }, "ID_request">

  export type RecuperacionContrasenaOrderByWithAggregationInput = {
    ID_request?: SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
    Token?: SortOrder
    Fecha?: SortOrderInput | SortOrder
    Estado?: SortOrderInput | SortOrder
    _count?: RecuperacionContrasenaCountOrderByAggregateInput
    _avg?: RecuperacionContrasenaAvgOrderByAggregateInput
    _max?: RecuperacionContrasenaMaxOrderByAggregateInput
    _min?: RecuperacionContrasenaMinOrderByAggregateInput
    _sum?: RecuperacionContrasenaSumOrderByAggregateInput
  }

  export type RecuperacionContrasenaScalarWhereWithAggregatesInput = {
    AND?: RecuperacionContrasenaScalarWhereWithAggregatesInput | RecuperacionContrasenaScalarWhereWithAggregatesInput[]
    OR?: RecuperacionContrasenaScalarWhereWithAggregatesInput[]
    NOT?: RecuperacionContrasenaScalarWhereWithAggregatesInput | RecuperacionContrasenaScalarWhereWithAggregatesInput[]
    ID_request?: IntWithAggregatesFilter<"RecuperacionContrasena"> | number
    ID_cliente?: IntNullableWithAggregatesFilter<"RecuperacionContrasena"> | number | null
    ID_admin?: IntNullableWithAggregatesFilter<"RecuperacionContrasena"> | number | null
    Token?: StringWithAggregatesFilter<"RecuperacionContrasena"> | string
    Fecha?: DateTimeNullableWithAggregatesFilter<"RecuperacionContrasena"> | Date | string | null
    Estado?: StringNullableWithAggregatesFilter<"RecuperacionContrasena"> | string | null
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    ID_review?: IntFilter<"Review"> | number
    ID_cliente?: IntNullableFilter<"Review"> | number | null
    ID_tipo_s?: IntNullableFilter<"Review"> | number | null
    ID_servicio?: IntNullableFilter<"Review"> | number | null
    ID_destino?: IntNullableFilter<"Review"> | number | null
    calificacion?: IntNullableFilter<"Review"> | number | null
    comentario?: StringNullableFilter<"Review"> | string | null
    fecha?: DateTimeNullableFilter<"Review"> | Date | string | null
    ID_admin?: IntNullableFilter<"Review"> | number | null
  }

  export type ReviewOrderByWithRelationInput = {
    ID_review?: SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    ID_tipo_s?: SortOrderInput | SortOrder
    ID_servicio?: SortOrderInput | SortOrder
    ID_destino?: SortOrderInput | SortOrder
    calificacion?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    ID_review?: number
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    ID_cliente?: IntNullableFilter<"Review"> | number | null
    ID_tipo_s?: IntNullableFilter<"Review"> | number | null
    ID_servicio?: IntNullableFilter<"Review"> | number | null
    ID_destino?: IntNullableFilter<"Review"> | number | null
    calificacion?: IntNullableFilter<"Review"> | number | null
    comentario?: StringNullableFilter<"Review"> | string | null
    fecha?: DateTimeNullableFilter<"Review"> | Date | string | null
    ID_admin?: IntNullableFilter<"Review"> | number | null
  }, "ID_review">

  export type ReviewOrderByWithAggregationInput = {
    ID_review?: SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    ID_tipo_s?: SortOrderInput | SortOrder
    ID_servicio?: SortOrderInput | SortOrder
    ID_destino?: SortOrderInput | SortOrder
    calificacion?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    ID_review?: IntWithAggregatesFilter<"Review"> | number
    ID_cliente?: IntNullableWithAggregatesFilter<"Review"> | number | null
    ID_tipo_s?: IntNullableWithAggregatesFilter<"Review"> | number | null
    ID_servicio?: IntNullableWithAggregatesFilter<"Review"> | number | null
    ID_destino?: IntNullableWithAggregatesFilter<"Review"> | number | null
    calificacion?: IntNullableWithAggregatesFilter<"Review"> | number | null
    comentario?: StringNullableWithAggregatesFilter<"Review"> | string | null
    fecha?: DateTimeNullableWithAggregatesFilter<"Review"> | Date | string | null
    ID_admin?: IntNullableWithAggregatesFilter<"Review"> | number | null
  }

  export type ReservasWhereInput = {
    AND?: ReservasWhereInput | ReservasWhereInput[]
    OR?: ReservasWhereInput[]
    NOT?: ReservasWhereInput | ReservasWhereInput[]
    ID_reserva?: IntFilter<"Reservas"> | number
    ID_cliente?: IntNullableFilter<"Reservas"> | number | null
    ID_itinerario?: IntNullableFilter<"Reservas"> | number | null
    ID_servicio?: IntNullableFilter<"Reservas"> | number | null
    fecha_inicio?: DateTimeNullableFilter<"Reservas"> | Date | string | null
    fecha_fin?: DateTimeNullableFilter<"Reservas"> | Date | string | null
    precio_total?: FloatNullableFilter<"Reservas"> | number | null
    ID_admin?: IntNullableFilter<"Reservas"> | number | null
  }

  export type ReservasOrderByWithRelationInput = {
    ID_reserva?: SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    ID_itinerario?: SortOrderInput | SortOrder
    ID_servicio?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrderInput | SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    precio_total?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
  }

  export type ReservasWhereUniqueInput = Prisma.AtLeast<{
    ID_reserva?: number
    AND?: ReservasWhereInput | ReservasWhereInput[]
    OR?: ReservasWhereInput[]
    NOT?: ReservasWhereInput | ReservasWhereInput[]
    ID_cliente?: IntNullableFilter<"Reservas"> | number | null
    ID_itinerario?: IntNullableFilter<"Reservas"> | number | null
    ID_servicio?: IntNullableFilter<"Reservas"> | number | null
    fecha_inicio?: DateTimeNullableFilter<"Reservas"> | Date | string | null
    fecha_fin?: DateTimeNullableFilter<"Reservas"> | Date | string | null
    precio_total?: FloatNullableFilter<"Reservas"> | number | null
    ID_admin?: IntNullableFilter<"Reservas"> | number | null
  }, "ID_reserva">

  export type ReservasOrderByWithAggregationInput = {
    ID_reserva?: SortOrder
    ID_cliente?: SortOrderInput | SortOrder
    ID_itinerario?: SortOrderInput | SortOrder
    ID_servicio?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrderInput | SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    precio_total?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
    _count?: ReservasCountOrderByAggregateInput
    _avg?: ReservasAvgOrderByAggregateInput
    _max?: ReservasMaxOrderByAggregateInput
    _min?: ReservasMinOrderByAggregateInput
    _sum?: ReservasSumOrderByAggregateInput
  }

  export type ReservasScalarWhereWithAggregatesInput = {
    AND?: ReservasScalarWhereWithAggregatesInput | ReservasScalarWhereWithAggregatesInput[]
    OR?: ReservasScalarWhereWithAggregatesInput[]
    NOT?: ReservasScalarWhereWithAggregatesInput | ReservasScalarWhereWithAggregatesInput[]
    ID_reserva?: IntWithAggregatesFilter<"Reservas"> | number
    ID_cliente?: IntNullableWithAggregatesFilter<"Reservas"> | number | null
    ID_itinerario?: IntNullableWithAggregatesFilter<"Reservas"> | number | null
    ID_servicio?: IntNullableWithAggregatesFilter<"Reservas"> | number | null
    fecha_inicio?: DateTimeNullableWithAggregatesFilter<"Reservas"> | Date | string | null
    fecha_fin?: DateTimeNullableWithAggregatesFilter<"Reservas"> | Date | string | null
    precio_total?: FloatNullableWithAggregatesFilter<"Reservas"> | number | null
    ID_admin?: IntNullableWithAggregatesFilter<"Reservas"> | number | null
  }

  export type ServiciosWhereInput = {
    AND?: ServiciosWhereInput | ServiciosWhereInput[]
    OR?: ServiciosWhereInput[]
    NOT?: ServiciosWhereInput | ServiciosWhereInput[]
    ID_servicio?: IntFilter<"Servicios"> | number
    ID_tipo_s?: IntNullableFilter<"Servicios"> | number | null
    nombre?: StringFilter<"Servicios"> | string
    destino?: StringNullableFilter<"Servicios"> | string | null
    precio_diario?: FloatNullableFilter<"Servicios"> | number | null
    detalles?: StringNullableFilter<"Servicios"> | string | null
    ID_admin?: IntNullableFilter<"Servicios"> | number | null
  }

  export type ServiciosOrderByWithRelationInput = {
    ID_servicio?: SortOrder
    ID_tipo_s?: SortOrderInput | SortOrder
    nombre?: SortOrder
    destino?: SortOrderInput | SortOrder
    precio_diario?: SortOrderInput | SortOrder
    detalles?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
  }

  export type ServiciosWhereUniqueInput = Prisma.AtLeast<{
    ID_servicio?: number
    AND?: ServiciosWhereInput | ServiciosWhereInput[]
    OR?: ServiciosWhereInput[]
    NOT?: ServiciosWhereInput | ServiciosWhereInput[]
    ID_tipo_s?: IntNullableFilter<"Servicios"> | number | null
    nombre?: StringFilter<"Servicios"> | string
    destino?: StringNullableFilter<"Servicios"> | string | null
    precio_diario?: FloatNullableFilter<"Servicios"> | number | null
    detalles?: StringNullableFilter<"Servicios"> | string | null
    ID_admin?: IntNullableFilter<"Servicios"> | number | null
  }, "ID_servicio">

  export type ServiciosOrderByWithAggregationInput = {
    ID_servicio?: SortOrder
    ID_tipo_s?: SortOrderInput | SortOrder
    nombre?: SortOrder
    destino?: SortOrderInput | SortOrder
    precio_diario?: SortOrderInput | SortOrder
    detalles?: SortOrderInput | SortOrder
    ID_admin?: SortOrderInput | SortOrder
    _count?: ServiciosCountOrderByAggregateInput
    _avg?: ServiciosAvgOrderByAggregateInput
    _max?: ServiciosMaxOrderByAggregateInput
    _min?: ServiciosMinOrderByAggregateInput
    _sum?: ServiciosSumOrderByAggregateInput
  }

  export type ServiciosScalarWhereWithAggregatesInput = {
    AND?: ServiciosScalarWhereWithAggregatesInput | ServiciosScalarWhereWithAggregatesInput[]
    OR?: ServiciosScalarWhereWithAggregatesInput[]
    NOT?: ServiciosScalarWhereWithAggregatesInput | ServiciosScalarWhereWithAggregatesInput[]
    ID_servicio?: IntWithAggregatesFilter<"Servicios"> | number
    ID_tipo_s?: IntNullableWithAggregatesFilter<"Servicios"> | number | null
    nombre?: StringWithAggregatesFilter<"Servicios"> | string
    destino?: StringNullableWithAggregatesFilter<"Servicios"> | string | null
    precio_diario?: FloatNullableWithAggregatesFilter<"Servicios"> | number | null
    detalles?: StringNullableWithAggregatesFilter<"Servicios"> | string | null
    ID_admin?: IntNullableWithAggregatesFilter<"Servicios"> | number | null
  }

  export type Tipo_eventoWhereInput = {
    AND?: Tipo_eventoWhereInput | Tipo_eventoWhereInput[]
    OR?: Tipo_eventoWhereInput[]
    NOT?: Tipo_eventoWhereInput | Tipo_eventoWhereInput[]
    ID_tipo_e?: IntFilter<"Tipo_evento"> | number
    ID_destino?: IntNullableFilter<"Tipo_evento"> | number | null
    ID_servicio?: IntNullableFilter<"Tipo_evento"> | number | null
    ID_reserva?: IntNullableFilter<"Tipo_evento"> | number | null
  }

  export type Tipo_eventoOrderByWithRelationInput = {
    ID_tipo_e?: SortOrder
    ID_destino?: SortOrderInput | SortOrder
    ID_servicio?: SortOrderInput | SortOrder
    ID_reserva?: SortOrderInput | SortOrder
  }

  export type Tipo_eventoWhereUniqueInput = Prisma.AtLeast<{
    ID_tipo_e?: number
    AND?: Tipo_eventoWhereInput | Tipo_eventoWhereInput[]
    OR?: Tipo_eventoWhereInput[]
    NOT?: Tipo_eventoWhereInput | Tipo_eventoWhereInput[]
    ID_destino?: IntNullableFilter<"Tipo_evento"> | number | null
    ID_servicio?: IntNullableFilter<"Tipo_evento"> | number | null
    ID_reserva?: IntNullableFilter<"Tipo_evento"> | number | null
  }, "ID_tipo_e">

  export type Tipo_eventoOrderByWithAggregationInput = {
    ID_tipo_e?: SortOrder
    ID_destino?: SortOrderInput | SortOrder
    ID_servicio?: SortOrderInput | SortOrder
    ID_reserva?: SortOrderInput | SortOrder
    _count?: Tipo_eventoCountOrderByAggregateInput
    _avg?: Tipo_eventoAvgOrderByAggregateInput
    _max?: Tipo_eventoMaxOrderByAggregateInput
    _min?: Tipo_eventoMinOrderByAggregateInput
    _sum?: Tipo_eventoSumOrderByAggregateInput
  }

  export type Tipo_eventoScalarWhereWithAggregatesInput = {
    AND?: Tipo_eventoScalarWhereWithAggregatesInput | Tipo_eventoScalarWhereWithAggregatesInput[]
    OR?: Tipo_eventoScalarWhereWithAggregatesInput[]
    NOT?: Tipo_eventoScalarWhereWithAggregatesInput | Tipo_eventoScalarWhereWithAggregatesInput[]
    ID_tipo_e?: IntWithAggregatesFilter<"Tipo_evento"> | number
    ID_destino?: IntNullableWithAggregatesFilter<"Tipo_evento"> | number | null
    ID_servicio?: IntNullableWithAggregatesFilter<"Tipo_evento"> | number | null
    ID_reserva?: IntNullableWithAggregatesFilter<"Tipo_evento"> | number | null
  }

  export type Tipo_monedaWhereInput = {
    AND?: Tipo_monedaWhereInput | Tipo_monedaWhereInput[]
    OR?: Tipo_monedaWhereInput[]
    NOT?: Tipo_monedaWhereInput | Tipo_monedaWhereInput[]
    ID_tipo_m?: IntFilter<"Tipo_moneda"> | number
    nombre?: StringFilter<"Tipo_moneda"> | string
    codigo?: StringFilter<"Tipo_moneda"> | string
    simbolo?: StringNullableFilter<"Tipo_moneda"> | string | null
  }

  export type Tipo_monedaOrderByWithRelationInput = {
    ID_tipo_m?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    simbolo?: SortOrderInput | SortOrder
  }

  export type Tipo_monedaWhereUniqueInput = Prisma.AtLeast<{
    ID_tipo_m?: number
    AND?: Tipo_monedaWhereInput | Tipo_monedaWhereInput[]
    OR?: Tipo_monedaWhereInput[]
    NOT?: Tipo_monedaWhereInput | Tipo_monedaWhereInput[]
    nombre?: StringFilter<"Tipo_moneda"> | string
    codigo?: StringFilter<"Tipo_moneda"> | string
    simbolo?: StringNullableFilter<"Tipo_moneda"> | string | null
  }, "ID_tipo_m">

  export type Tipo_monedaOrderByWithAggregationInput = {
    ID_tipo_m?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    simbolo?: SortOrderInput | SortOrder
    _count?: Tipo_monedaCountOrderByAggregateInput
    _avg?: Tipo_monedaAvgOrderByAggregateInput
    _max?: Tipo_monedaMaxOrderByAggregateInput
    _min?: Tipo_monedaMinOrderByAggregateInput
    _sum?: Tipo_monedaSumOrderByAggregateInput
  }

  export type Tipo_monedaScalarWhereWithAggregatesInput = {
    AND?: Tipo_monedaScalarWhereWithAggregatesInput | Tipo_monedaScalarWhereWithAggregatesInput[]
    OR?: Tipo_monedaScalarWhereWithAggregatesInput[]
    NOT?: Tipo_monedaScalarWhereWithAggregatesInput | Tipo_monedaScalarWhereWithAggregatesInput[]
    ID_tipo_m?: IntWithAggregatesFilter<"Tipo_moneda"> | number
    nombre?: StringWithAggregatesFilter<"Tipo_moneda"> | string
    codigo?: StringWithAggregatesFilter<"Tipo_moneda"> | string
    simbolo?: StringNullableWithAggregatesFilter<"Tipo_moneda"> | string | null
  }

  export type Tipo_servicioWhereInput = {
    AND?: Tipo_servicioWhereInput | Tipo_servicioWhereInput[]
    OR?: Tipo_servicioWhereInput[]
    NOT?: Tipo_servicioWhereInput | Tipo_servicioWhereInput[]
    ID_tipo_s?: IntFilter<"Tipo_servicio"> | number
    Descripcion?: StringNullableFilter<"Tipo_servicio"> | string | null
  }

  export type Tipo_servicioOrderByWithRelationInput = {
    ID_tipo_s?: SortOrder
    Descripcion?: SortOrderInput | SortOrder
  }

  export type Tipo_servicioWhereUniqueInput = Prisma.AtLeast<{
    ID_tipo_s?: number
    AND?: Tipo_servicioWhereInput | Tipo_servicioWhereInput[]
    OR?: Tipo_servicioWhereInput[]
    NOT?: Tipo_servicioWhereInput | Tipo_servicioWhereInput[]
    Descripcion?: StringNullableFilter<"Tipo_servicio"> | string | null
  }, "ID_tipo_s">

  export type Tipo_servicioOrderByWithAggregationInput = {
    ID_tipo_s?: SortOrder
    Descripcion?: SortOrderInput | SortOrder
    _count?: Tipo_servicioCountOrderByAggregateInput
    _avg?: Tipo_servicioAvgOrderByAggregateInput
    _max?: Tipo_servicioMaxOrderByAggregateInput
    _min?: Tipo_servicioMinOrderByAggregateInput
    _sum?: Tipo_servicioSumOrderByAggregateInput
  }

  export type Tipo_servicioScalarWhereWithAggregatesInput = {
    AND?: Tipo_servicioScalarWhereWithAggregatesInput | Tipo_servicioScalarWhereWithAggregatesInput[]
    OR?: Tipo_servicioScalarWhereWithAggregatesInput[]
    NOT?: Tipo_servicioScalarWhereWithAggregatesInput | Tipo_servicioScalarWhereWithAggregatesInput[]
    ID_tipo_s?: IntWithAggregatesFilter<"Tipo_servicio"> | number
    Descripcion?: StringNullableWithAggregatesFilter<"Tipo_servicio"> | string | null
  }

  export type DetalleCarritoWhereInput = {
    AND?: DetalleCarritoWhereInput | DetalleCarritoWhereInput[]
    OR?: DetalleCarritoWhereInput[]
    NOT?: DetalleCarritoWhereInput | DetalleCarritoWhereInput[]
    id_detalle_carrito?: IntFilter<"DetalleCarrito"> | number
    item?: StringFilter<"DetalleCarrito"> | string
    cantidad?: IntFilter<"DetalleCarrito"> | number
    precio?: FloatFilter<"DetalleCarrito"> | number
    id_cliente?: IntNullableFilter<"DetalleCarrito"> | number | null
    subtotal?: FloatFilter<"DetalleCarrito"> | number
  }

  export type DetalleCarritoOrderByWithRelationInput = {
    id_detalle_carrito?: SortOrder
    item?: SortOrder
    cantidad?: SortOrder
    precio?: SortOrder
    id_cliente?: SortOrderInput | SortOrder
    subtotal?: SortOrder
  }

  export type DetalleCarritoWhereUniqueInput = Prisma.AtLeast<{
    id_detalle_carrito?: number
    AND?: DetalleCarritoWhereInput | DetalleCarritoWhereInput[]
    OR?: DetalleCarritoWhereInput[]
    NOT?: DetalleCarritoWhereInput | DetalleCarritoWhereInput[]
    item?: StringFilter<"DetalleCarrito"> | string
    cantidad?: IntFilter<"DetalleCarrito"> | number
    precio?: FloatFilter<"DetalleCarrito"> | number
    id_cliente?: IntNullableFilter<"DetalleCarrito"> | number | null
    subtotal?: FloatFilter<"DetalleCarrito"> | number
  }, "id_detalle_carrito">

  export type DetalleCarritoOrderByWithAggregationInput = {
    id_detalle_carrito?: SortOrder
    item?: SortOrder
    cantidad?: SortOrder
    precio?: SortOrder
    id_cliente?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    _count?: DetalleCarritoCountOrderByAggregateInput
    _avg?: DetalleCarritoAvgOrderByAggregateInput
    _max?: DetalleCarritoMaxOrderByAggregateInput
    _min?: DetalleCarritoMinOrderByAggregateInput
    _sum?: DetalleCarritoSumOrderByAggregateInput
  }

  export type DetalleCarritoScalarWhereWithAggregatesInput = {
    AND?: DetalleCarritoScalarWhereWithAggregatesInput | DetalleCarritoScalarWhereWithAggregatesInput[]
    OR?: DetalleCarritoScalarWhereWithAggregatesInput[]
    NOT?: DetalleCarritoScalarWhereWithAggregatesInput | DetalleCarritoScalarWhereWithAggregatesInput[]
    id_detalle_carrito?: IntWithAggregatesFilter<"DetalleCarrito"> | number
    item?: StringWithAggregatesFilter<"DetalleCarrito"> | string
    cantidad?: IntWithAggregatesFilter<"DetalleCarrito"> | number
    precio?: FloatWithAggregatesFilter<"DetalleCarrito"> | number
    id_cliente?: IntNullableWithAggregatesFilter<"DetalleCarrito"> | number | null
    subtotal?: FloatWithAggregatesFilter<"DetalleCarrito"> | number
  }

  export type HistorialCompraWhereInput = {
    AND?: HistorialCompraWhereInput | HistorialCompraWhereInput[]
    OR?: HistorialCompraWhereInput[]
    NOT?: HistorialCompraWhereInput | HistorialCompraWhereInput[]
    id_historial_compra?: IntFilter<"HistorialCompra"> | number
    id_cliente?: IntNullableFilter<"HistorialCompra"> | number | null
    fecha_compra?: DateTimeFilter<"HistorialCompra"> | Date | string
    precio?: FloatFilter<"HistorialCompra"> | number
    subtotal?: FloatFilter<"HistorialCompra"> | number
    cantidad?: IntFilter<"HistorialCompra"> | number
    items?: StringFilter<"HistorialCompra"> | string
  }

  export type HistorialCompraOrderByWithRelationInput = {
    id_historial_compra?: SortOrder
    id_cliente?: SortOrderInput | SortOrder
    fecha_compra?: SortOrder
    precio?: SortOrder
    subtotal?: SortOrder
    cantidad?: SortOrder
    items?: SortOrder
  }

  export type HistorialCompraWhereUniqueInput = Prisma.AtLeast<{
    id_historial_compra?: number
    AND?: HistorialCompraWhereInput | HistorialCompraWhereInput[]
    OR?: HistorialCompraWhereInput[]
    NOT?: HistorialCompraWhereInput | HistorialCompraWhereInput[]
    id_cliente?: IntNullableFilter<"HistorialCompra"> | number | null
    fecha_compra?: DateTimeFilter<"HistorialCompra"> | Date | string
    precio?: FloatFilter<"HistorialCompra"> | number
    subtotal?: FloatFilter<"HistorialCompra"> | number
    cantidad?: IntFilter<"HistorialCompra"> | number
    items?: StringFilter<"HistorialCompra"> | string
  }, "id_historial_compra">

  export type HistorialCompraOrderByWithAggregationInput = {
    id_historial_compra?: SortOrder
    id_cliente?: SortOrderInput | SortOrder
    fecha_compra?: SortOrder
    precio?: SortOrder
    subtotal?: SortOrder
    cantidad?: SortOrder
    items?: SortOrder
    _count?: HistorialCompraCountOrderByAggregateInput
    _avg?: HistorialCompraAvgOrderByAggregateInput
    _max?: HistorialCompraMaxOrderByAggregateInput
    _min?: HistorialCompraMinOrderByAggregateInput
    _sum?: HistorialCompraSumOrderByAggregateInput
  }

  export type HistorialCompraScalarWhereWithAggregatesInput = {
    AND?: HistorialCompraScalarWhereWithAggregatesInput | HistorialCompraScalarWhereWithAggregatesInput[]
    OR?: HistorialCompraScalarWhereWithAggregatesInput[]
    NOT?: HistorialCompraScalarWhereWithAggregatesInput | HistorialCompraScalarWhereWithAggregatesInput[]
    id_historial_compra?: IntWithAggregatesFilter<"HistorialCompra"> | number
    id_cliente?: IntNullableWithAggregatesFilter<"HistorialCompra"> | number | null
    fecha_compra?: DateTimeWithAggregatesFilter<"HistorialCompra"> | Date | string
    precio?: FloatWithAggregatesFilter<"HistorialCompra"> | number
    subtotal?: FloatWithAggregatesFilter<"HistorialCompra"> | number
    cantidad?: IntWithAggregatesFilter<"HistorialCompra"> | number
    items?: StringWithAggregatesFilter<"HistorialCompra"> | string
  }

  export type AdminCreateInput = {
    nombre: string
    correo: string
    contrasena: string
    imagen?: Buffer | null
    destinos?: DestinosCreateNestedManyWithoutAdminInput
  }

  export type AdminUncheckedCreateInput = {
    ID_admin?: number
    nombre: string
    correo: string
    contrasena: string
    imagen?: Buffer | null
    destinos?: DestinosUncheckedCreateNestedManyWithoutAdminInput
  }

  export type AdminUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    destinos?: DestinosUpdateManyWithoutAdminNestedInput
  }

  export type AdminUncheckedUpdateInput = {
    ID_admin?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    destinos?: DestinosUncheckedUpdateManyWithoutAdminNestedInput
  }

  export type AdminCreateManyInput = {
    ID_admin?: number
    nombre: string
    correo: string
    contrasena: string
    imagen?: Buffer | null
  }

  export type AdminUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type AdminUncheckedUpdateManyInput = {
    ID_admin?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type ClienteCreateInput = {
    nombre: string
    telefono?: string | null
    correo: string
    contrasena: string
    ID_instagram?: string | null
    ID_Facebook?: string | null
    imagen?: Buffer | null
    Preferencias?: string | null
    idioma?: IdiomasCreateNestedOneWithoutClienteInput
  }

  export type ClienteUncheckedCreateInput = {
    ID_cliente?: number
    nombre: string
    telefono?: string | null
    correo: string
    contrasena: string
    ID_instagram?: string | null
    ID_Facebook?: string | null
    imagen?: Buffer | null
    Preferencias?: string | null
    ID_idioma?: number | null
  }

  export type ClienteUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    ID_instagram?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Facebook?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    Preferencias?: NullableStringFieldUpdateOperationsInput | string | null
    idioma?: IdiomasUpdateOneWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateInput = {
    ID_cliente?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    ID_instagram?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Facebook?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    Preferencias?: NullableStringFieldUpdateOperationsInput | string | null
    ID_idioma?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ClienteCreateManyInput = {
    ID_cliente?: number
    nombre: string
    telefono?: string | null
    correo: string
    contrasena: string
    ID_instagram?: string | null
    ID_Facebook?: string | null
    imagen?: Buffer | null
    Preferencias?: string | null
    ID_idioma?: number | null
  }

  export type ClienteUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    ID_instagram?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Facebook?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    Preferencias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClienteUncheckedUpdateManyInput = {
    ID_cliente?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    ID_instagram?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Facebook?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    Preferencias?: NullableStringFieldUpdateOperationsInput | string | null
    ID_idioma?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DestinosCreateInput = {
    nombre: string
    precio?: number | null
    ubicacion?: string | null
    categoria?: string | null
    actividades?: string | null
    cupos?: number | null
    admin?: AdminCreateNestedOneWithoutDestinosInput
  }

  export type DestinosUncheckedCreateInput = {
    ID_destino?: number
    nombre: string
    precio?: number | null
    ubicacion?: string | null
    categoria?: string | null
    actividades?: string | null
    cupos?: number | null
    ID_admin?: number | null
  }

  export type DestinosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: NullableFloatFieldUpdateOperationsInput | number | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    actividades?: NullableStringFieldUpdateOperationsInput | string | null
    cupos?: NullableIntFieldUpdateOperationsInput | number | null
    admin?: AdminUpdateOneWithoutDestinosNestedInput
  }

  export type DestinosUncheckedUpdateInput = {
    ID_destino?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: NullableFloatFieldUpdateOperationsInput | number | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    actividades?: NullableStringFieldUpdateOperationsInput | string | null
    cupos?: NullableIntFieldUpdateOperationsInput | number | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DestinosCreateManyInput = {
    ID_destino?: number
    nombre: string
    precio?: number | null
    ubicacion?: string | null
    categoria?: string | null
    actividades?: string | null
    cupos?: number | null
    ID_admin?: number | null
  }

  export type DestinosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: NullableFloatFieldUpdateOperationsInput | number | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    actividades?: NullableStringFieldUpdateOperationsInput | string | null
    cupos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DestinosUncheckedUpdateManyInput = {
    ID_destino?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: NullableFloatFieldUpdateOperationsInput | number | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    actividades?: NullableStringFieldUpdateOperationsInput | string | null
    cupos?: NullableIntFieldUpdateOperationsInput | number | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EventosCreateInput = {
    ID_tipo_e?: number | null
    ID_cliente?: number | null
    descripcion?: string | null
    fecha?: Date | string | null
    ID_admin?: number | null
  }

  export type EventosUncheckedCreateInput = {
    ID_evento?: number
    ID_tipo_e?: number | null
    ID_cliente?: number | null
    descripcion?: string | null
    fecha?: Date | string | null
    ID_admin?: number | null
  }

  export type EventosUpdateInput = {
    ID_tipo_e?: NullableIntFieldUpdateOperationsInput | number | null
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EventosUncheckedUpdateInput = {
    ID_evento?: IntFieldUpdateOperationsInput | number
    ID_tipo_e?: NullableIntFieldUpdateOperationsInput | number | null
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EventosCreateManyInput = {
    ID_evento?: number
    ID_tipo_e?: number | null
    ID_cliente?: number | null
    descripcion?: string | null
    fecha?: Date | string | null
    ID_admin?: number | null
  }

  export type EventosUpdateManyMutationInput = {
    ID_tipo_e?: NullableIntFieldUpdateOperationsInput | number | null
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EventosUncheckedUpdateManyInput = {
    ID_evento?: IntFieldUpdateOperationsInput | number
    ID_tipo_e?: NullableIntFieldUpdateOperationsInput | number | null
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IdiomasCreateInput = {
    nombre: string
    codigo: string
    cliente?: ClienteCreateNestedManyWithoutIdiomaInput
  }

  export type IdiomasUncheckedCreateInput = {
    ID_idioma?: number
    nombre: string
    codigo: string
    cliente?: ClienteUncheckedCreateNestedManyWithoutIdiomaInput
  }

  export type IdiomasUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    cliente?: ClienteUpdateManyWithoutIdiomaNestedInput
  }

  export type IdiomasUncheckedUpdateInput = {
    ID_idioma?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    cliente?: ClienteUncheckedUpdateManyWithoutIdiomaNestedInput
  }

  export type IdiomasCreateManyInput = {
    ID_idioma?: number
    nombre: string
    codigo: string
  }

  export type IdiomasUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
  }

  export type IdiomasUncheckedUpdateManyInput = {
    ID_idioma?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
  }

  export type ItinerarioCreateInput = {
    ID_cliente?: number | null
    ID_reserva?: number | null
    nombre?: string | null
    descripcion?: string | null
  }

  export type ItinerarioUncheckedCreateInput = {
    ID_itinerario?: number
    ID_cliente?: number | null
    ID_reserva?: number | null
    nombre?: string | null
    descripcion?: string | null
  }

  export type ItinerarioUpdateInput = {
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_reserva?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ItinerarioUncheckedUpdateInput = {
    ID_itinerario?: IntFieldUpdateOperationsInput | number
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_reserva?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ItinerarioCreateManyInput = {
    ID_itinerario?: number
    ID_cliente?: number | null
    ID_reserva?: number | null
    nombre?: string | null
    descripcion?: string | null
  }

  export type ItinerarioUpdateManyMutationInput = {
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_reserva?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ItinerarioUncheckedUpdateManyInput = {
    ID_itinerario?: IntFieldUpdateOperationsInput | number
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_reserva?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PagosCreateInput = {
    ID_cliente?: number | null
    ID_tipo_m?: number | null
    id_detalle_carrito?: number | null
    nombre_titular: string
    numero_tarjeta: string
    fecha_expiracion?: Date | string | null
    cvv?: number | null
    direccion?: string | null
  }

  export type PagosUncheckedCreateInput = {
    ID_pago?: number
    ID_cliente?: number | null
    ID_tipo_m?: number | null
    id_detalle_carrito?: number | null
    nombre_titular: string
    numero_tarjeta: string
    fecha_expiracion?: Date | string | null
    cvv?: number | null
    direccion?: string | null
  }

  export type PagosUpdateInput = {
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_tipo_m?: NullableIntFieldUpdateOperationsInput | number | null
    id_detalle_carrito?: NullableIntFieldUpdateOperationsInput | number | null
    nombre_titular?: StringFieldUpdateOperationsInput | string
    numero_tarjeta?: StringFieldUpdateOperationsInput | string
    fecha_expiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cvv?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PagosUncheckedUpdateInput = {
    ID_pago?: IntFieldUpdateOperationsInput | number
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_tipo_m?: NullableIntFieldUpdateOperationsInput | number | null
    id_detalle_carrito?: NullableIntFieldUpdateOperationsInput | number | null
    nombre_titular?: StringFieldUpdateOperationsInput | string
    numero_tarjeta?: StringFieldUpdateOperationsInput | string
    fecha_expiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cvv?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PagosCreateManyInput = {
    ID_pago?: number
    ID_cliente?: number | null
    ID_tipo_m?: number | null
    id_detalle_carrito?: number | null
    nombre_titular: string
    numero_tarjeta: string
    fecha_expiracion?: Date | string | null
    cvv?: number | null
    direccion?: string | null
  }

  export type PagosUpdateManyMutationInput = {
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_tipo_m?: NullableIntFieldUpdateOperationsInput | number | null
    id_detalle_carrito?: NullableIntFieldUpdateOperationsInput | number | null
    nombre_titular?: StringFieldUpdateOperationsInput | string
    numero_tarjeta?: StringFieldUpdateOperationsInput | string
    fecha_expiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cvv?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PagosUncheckedUpdateManyInput = {
    ID_pago?: IntFieldUpdateOperationsInput | number
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_tipo_m?: NullableIntFieldUpdateOperationsInput | number | null
    id_detalle_carrito?: NullableIntFieldUpdateOperationsInput | number | null
    nombre_titular?: StringFieldUpdateOperationsInput | string
    numero_tarjeta?: StringFieldUpdateOperationsInput | string
    fecha_expiracion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cvv?: NullableIntFieldUpdateOperationsInput | number | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecuperacionContrasenaCreateInput = {
    ID_cliente?: number | null
    ID_admin?: number | null
    Token: string
    Fecha?: Date | string | null
    Estado?: string | null
  }

  export type RecuperacionContrasenaUncheckedCreateInput = {
    ID_request?: number
    ID_cliente?: number | null
    ID_admin?: number | null
    Token: string
    Fecha?: Date | string | null
    Estado?: string | null
  }

  export type RecuperacionContrasenaUpdateInput = {
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
    Token?: StringFieldUpdateOperationsInput | string
    Fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecuperacionContrasenaUncheckedUpdateInput = {
    ID_request?: IntFieldUpdateOperationsInput | number
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
    Token?: StringFieldUpdateOperationsInput | string
    Fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecuperacionContrasenaCreateManyInput = {
    ID_request?: number
    ID_cliente?: number | null
    ID_admin?: number | null
    Token: string
    Fecha?: Date | string | null
    Estado?: string | null
  }

  export type RecuperacionContrasenaUpdateManyMutationInput = {
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
    Token?: StringFieldUpdateOperationsInput | string
    Fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RecuperacionContrasenaUncheckedUpdateManyInput = {
    ID_request?: IntFieldUpdateOperationsInput | number
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
    Token?: StringFieldUpdateOperationsInput | string
    Fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReviewCreateInput = {
    ID_cliente?: number | null
    ID_tipo_s?: number | null
    ID_servicio?: number | null
    ID_destino?: number | null
    calificacion?: number | null
    comentario?: string | null
    fecha?: Date | string | null
    ID_admin?: number | null
  }

  export type ReviewUncheckedCreateInput = {
    ID_review?: number
    ID_cliente?: number | null
    ID_tipo_s?: number | null
    ID_servicio?: number | null
    ID_destino?: number | null
    calificacion?: number | null
    comentario?: string | null
    fecha?: Date | string | null
    ID_admin?: number | null
  }

  export type ReviewUpdateInput = {
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_tipo_s?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    ID_destino?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReviewUncheckedUpdateInput = {
    ID_review?: IntFieldUpdateOperationsInput | number
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_tipo_s?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    ID_destino?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReviewCreateManyInput = {
    ID_review?: number
    ID_cliente?: number | null
    ID_tipo_s?: number | null
    ID_servicio?: number | null
    ID_destino?: number | null
    calificacion?: number | null
    comentario?: string | null
    fecha?: Date | string | null
    ID_admin?: number | null
  }

  export type ReviewUpdateManyMutationInput = {
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_tipo_s?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    ID_destino?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReviewUncheckedUpdateManyInput = {
    ID_review?: IntFieldUpdateOperationsInput | number
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_tipo_s?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    ID_destino?: NullableIntFieldUpdateOperationsInput | number | null
    calificacion?: NullableIntFieldUpdateOperationsInput | number | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservasCreateInput = {
    ID_cliente?: number | null
    ID_itinerario?: number | null
    ID_servicio?: number | null
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    precio_total?: number | null
    ID_admin?: number | null
  }

  export type ReservasUncheckedCreateInput = {
    ID_reserva?: number
    ID_cliente?: number | null
    ID_itinerario?: number | null
    ID_servicio?: number | null
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    precio_total?: number | null
    ID_admin?: number | null
  }

  export type ReservasUpdateInput = {
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_itinerario?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_total?: NullableFloatFieldUpdateOperationsInput | number | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservasUncheckedUpdateInput = {
    ID_reserva?: IntFieldUpdateOperationsInput | number
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_itinerario?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_total?: NullableFloatFieldUpdateOperationsInput | number | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservasCreateManyInput = {
    ID_reserva?: number
    ID_cliente?: number | null
    ID_itinerario?: number | null
    ID_servicio?: number | null
    fecha_inicio?: Date | string | null
    fecha_fin?: Date | string | null
    precio_total?: number | null
    ID_admin?: number | null
  }

  export type ReservasUpdateManyMutationInput = {
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_itinerario?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_total?: NullableFloatFieldUpdateOperationsInput | number | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservasUncheckedUpdateManyInput = {
    ID_reserva?: IntFieldUpdateOperationsInput | number
    ID_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    ID_itinerario?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    precio_total?: NullableFloatFieldUpdateOperationsInput | number | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ServiciosCreateInput = {
    ID_tipo_s?: number | null
    nombre: string
    destino?: string | null
    precio_diario?: number | null
    detalles?: string | null
    ID_admin?: number | null
  }

  export type ServiciosUncheckedCreateInput = {
    ID_servicio?: number
    ID_tipo_s?: number | null
    nombre: string
    destino?: string | null
    precio_diario?: number | null
    detalles?: string | null
    ID_admin?: number | null
  }

  export type ServiciosUpdateInput = {
    ID_tipo_s?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    destino?: NullableStringFieldUpdateOperationsInput | string | null
    precio_diario?: NullableFloatFieldUpdateOperationsInput | number | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ServiciosUncheckedUpdateInput = {
    ID_servicio?: IntFieldUpdateOperationsInput | number
    ID_tipo_s?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    destino?: NullableStringFieldUpdateOperationsInput | string | null
    precio_diario?: NullableFloatFieldUpdateOperationsInput | number | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ServiciosCreateManyInput = {
    ID_servicio?: number
    ID_tipo_s?: number | null
    nombre: string
    destino?: string | null
    precio_diario?: number | null
    detalles?: string | null
    ID_admin?: number | null
  }

  export type ServiciosUpdateManyMutationInput = {
    ID_tipo_s?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    destino?: NullableStringFieldUpdateOperationsInput | string | null
    precio_diario?: NullableFloatFieldUpdateOperationsInput | number | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ServiciosUncheckedUpdateManyInput = {
    ID_servicio?: IntFieldUpdateOperationsInput | number
    ID_tipo_s?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    destino?: NullableStringFieldUpdateOperationsInput | string | null
    precio_diario?: NullableFloatFieldUpdateOperationsInput | number | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    ID_admin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type Tipo_eventoCreateInput = {
    ID_destino?: number | null
    ID_servicio?: number | null
    ID_reserva?: number | null
  }

  export type Tipo_eventoUncheckedCreateInput = {
    ID_tipo_e?: number
    ID_destino?: number | null
    ID_servicio?: number | null
    ID_reserva?: number | null
  }

  export type Tipo_eventoUpdateInput = {
    ID_destino?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    ID_reserva?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type Tipo_eventoUncheckedUpdateInput = {
    ID_tipo_e?: IntFieldUpdateOperationsInput | number
    ID_destino?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    ID_reserva?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type Tipo_eventoCreateManyInput = {
    ID_tipo_e?: number
    ID_destino?: number | null
    ID_servicio?: number | null
    ID_reserva?: number | null
  }

  export type Tipo_eventoUpdateManyMutationInput = {
    ID_destino?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    ID_reserva?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type Tipo_eventoUncheckedUpdateManyInput = {
    ID_tipo_e?: IntFieldUpdateOperationsInput | number
    ID_destino?: NullableIntFieldUpdateOperationsInput | number | null
    ID_servicio?: NullableIntFieldUpdateOperationsInput | number | null
    ID_reserva?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type Tipo_monedaCreateInput = {
    nombre: string
    codigo: string
    simbolo?: string | null
  }

  export type Tipo_monedaUncheckedCreateInput = {
    ID_tipo_m?: number
    nombre: string
    codigo: string
    simbolo?: string | null
  }

  export type Tipo_monedaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    simbolo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Tipo_monedaUncheckedUpdateInput = {
    ID_tipo_m?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    simbolo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Tipo_monedaCreateManyInput = {
    ID_tipo_m?: number
    nombre: string
    codigo: string
    simbolo?: string | null
  }

  export type Tipo_monedaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    simbolo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Tipo_monedaUncheckedUpdateManyInput = {
    ID_tipo_m?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
    simbolo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Tipo_servicioCreateInput = {
    Descripcion?: string | null
  }

  export type Tipo_servicioUncheckedCreateInput = {
    ID_tipo_s?: number
    Descripcion?: string | null
  }

  export type Tipo_servicioUpdateInput = {
    Descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Tipo_servicioUncheckedUpdateInput = {
    ID_tipo_s?: IntFieldUpdateOperationsInput | number
    Descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Tipo_servicioCreateManyInput = {
    ID_tipo_s?: number
    Descripcion?: string | null
  }

  export type Tipo_servicioUpdateManyMutationInput = {
    Descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Tipo_servicioUncheckedUpdateManyInput = {
    ID_tipo_s?: IntFieldUpdateOperationsInput | number
    Descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DetalleCarritoCreateInput = {
    item: string
    cantidad: number
    precio: number
    id_cliente?: number | null
    subtotal: number
  }

  export type DetalleCarritoUncheckedCreateInput = {
    id_detalle_carrito?: number
    item: string
    cantidad: number
    precio: number
    id_cliente?: number | null
    subtotal: number
  }

  export type DetalleCarritoUpdateInput = {
    item?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type DetalleCarritoUncheckedUpdateInput = {
    id_detalle_carrito?: IntFieldUpdateOperationsInput | number
    item?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type DetalleCarritoCreateManyInput = {
    id_detalle_carrito?: number
    item: string
    cantidad: number
    precio: number
    id_cliente?: number | null
    subtotal: number
  }

  export type DetalleCarritoUpdateManyMutationInput = {
    item?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type DetalleCarritoUncheckedUpdateManyInput = {
    id_detalle_carrito?: IntFieldUpdateOperationsInput | number
    item?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    precio?: FloatFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    subtotal?: FloatFieldUpdateOperationsInput | number
  }

  export type HistorialCompraCreateInput = {
    id_cliente?: number | null
    fecha_compra: Date | string
    precio: number
    subtotal: number
    cantidad: number
    items: string
  }

  export type HistorialCompraUncheckedCreateInput = {
    id_historial_compra?: number
    id_cliente?: number | null
    fecha_compra: Date | string
    precio: number
    subtotal: number
    cantidad: number
    items: string
  }

  export type HistorialCompraUpdateInput = {
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    precio?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    items?: StringFieldUpdateOperationsInput | string
  }

  export type HistorialCompraUncheckedUpdateInput = {
    id_historial_compra?: IntFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    precio?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    items?: StringFieldUpdateOperationsInput | string
  }

  export type HistorialCompraCreateManyInput = {
    id_historial_compra?: number
    id_cliente?: number | null
    fecha_compra: Date | string
    precio: number
    subtotal: number
    cantidad: number
    items: string
  }

  export type HistorialCompraUpdateManyMutationInput = {
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    precio?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    items?: StringFieldUpdateOperationsInput | string
  }

  export type HistorialCompraUncheckedUpdateManyInput = {
    id_historial_compra?: IntFieldUpdateOperationsInput | number
    id_cliente?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    precio?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    items?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type DestinosListRelationFilter = {
    every?: DestinosWhereInput
    some?: DestinosWhereInput
    none?: DestinosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type DestinosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AdminCountOrderByAggregateInput = {
    ID_admin?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    imagen?: SortOrder
  }

  export type AdminAvgOrderByAggregateInput = {
    ID_admin?: SortOrder
  }

  export type AdminMaxOrderByAggregateInput = {
    ID_admin?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    imagen?: SortOrder
  }

  export type AdminMinOrderByAggregateInput = {
    ID_admin?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    imagen?: SortOrder
  }

  export type AdminSumOrderByAggregateInput = {
    ID_admin?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type IdiomasNullableRelationFilter = {
    is?: IdiomasWhereInput | null
    isNot?: IdiomasWhereInput | null
  }

  export type ClienteCountOrderByAggregateInput = {
    ID_cliente?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    ID_instagram?: SortOrder
    ID_Facebook?: SortOrder
    imagen?: SortOrder
    Preferencias?: SortOrder
    ID_idioma?: SortOrder
  }

  export type ClienteAvgOrderByAggregateInput = {
    ID_cliente?: SortOrder
    ID_idioma?: SortOrder
  }

  export type ClienteMaxOrderByAggregateInput = {
    ID_cliente?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    ID_instagram?: SortOrder
    ID_Facebook?: SortOrder
    imagen?: SortOrder
    Preferencias?: SortOrder
    ID_idioma?: SortOrder
  }

  export type ClienteMinOrderByAggregateInput = {
    ID_cliente?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    ID_instagram?: SortOrder
    ID_Facebook?: SortOrder
    imagen?: SortOrder
    Preferencias?: SortOrder
    ID_idioma?: SortOrder
  }

  export type ClienteSumOrderByAggregateInput = {
    ID_cliente?: SortOrder
    ID_idioma?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type AdminNullableRelationFilter = {
    is?: AdminWhereInput | null
    isNot?: AdminWhereInput | null
  }

  export type DestinosCountOrderByAggregateInput = {
    ID_destino?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    ubicacion?: SortOrder
    categoria?: SortOrder
    actividades?: SortOrder
    cupos?: SortOrder
    ID_admin?: SortOrder
  }

  export type DestinosAvgOrderByAggregateInput = {
    ID_destino?: SortOrder
    precio?: SortOrder
    cupos?: SortOrder
    ID_admin?: SortOrder
  }

  export type DestinosMaxOrderByAggregateInput = {
    ID_destino?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    ubicacion?: SortOrder
    categoria?: SortOrder
    actividades?: SortOrder
    cupos?: SortOrder
    ID_admin?: SortOrder
  }

  export type DestinosMinOrderByAggregateInput = {
    ID_destino?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    ubicacion?: SortOrder
    categoria?: SortOrder
    actividades?: SortOrder
    cupos?: SortOrder
    ID_admin?: SortOrder
  }

  export type DestinosSumOrderByAggregateInput = {
    ID_destino?: SortOrder
    precio?: SortOrder
    cupos?: SortOrder
    ID_admin?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EventosCountOrderByAggregateInput = {
    ID_evento?: SortOrder
    ID_tipo_e?: SortOrder
    ID_cliente?: SortOrder
    descripcion?: SortOrder
    fecha?: SortOrder
    ID_admin?: SortOrder
  }

  export type EventosAvgOrderByAggregateInput = {
    ID_evento?: SortOrder
    ID_tipo_e?: SortOrder
    ID_cliente?: SortOrder
    ID_admin?: SortOrder
  }

  export type EventosMaxOrderByAggregateInput = {
    ID_evento?: SortOrder
    ID_tipo_e?: SortOrder
    ID_cliente?: SortOrder
    descripcion?: SortOrder
    fecha?: SortOrder
    ID_admin?: SortOrder
  }

  export type EventosMinOrderByAggregateInput = {
    ID_evento?: SortOrder
    ID_tipo_e?: SortOrder
    ID_cliente?: SortOrder
    descripcion?: SortOrder
    fecha?: SortOrder
    ID_admin?: SortOrder
  }

  export type EventosSumOrderByAggregateInput = {
    ID_evento?: SortOrder
    ID_tipo_e?: SortOrder
    ID_cliente?: SortOrder
    ID_admin?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type ClienteListRelationFilter = {
    every?: ClienteWhereInput
    some?: ClienteWhereInput
    none?: ClienteWhereInput
  }

  export type ClienteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type IdiomasCountOrderByAggregateInput = {
    ID_idioma?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
  }

  export type IdiomasAvgOrderByAggregateInput = {
    ID_idioma?: SortOrder
  }

  export type IdiomasMaxOrderByAggregateInput = {
    ID_idioma?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
  }

  export type IdiomasMinOrderByAggregateInput = {
    ID_idioma?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
  }

  export type IdiomasSumOrderByAggregateInput = {
    ID_idioma?: SortOrder
  }

  export type ItinerarioCountOrderByAggregateInput = {
    ID_itinerario?: SortOrder
    ID_cliente?: SortOrder
    ID_reserva?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type ItinerarioAvgOrderByAggregateInput = {
    ID_itinerario?: SortOrder
    ID_cliente?: SortOrder
    ID_reserva?: SortOrder
  }

  export type ItinerarioMaxOrderByAggregateInput = {
    ID_itinerario?: SortOrder
    ID_cliente?: SortOrder
    ID_reserva?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type ItinerarioMinOrderByAggregateInput = {
    ID_itinerario?: SortOrder
    ID_cliente?: SortOrder
    ID_reserva?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type ItinerarioSumOrderByAggregateInput = {
    ID_itinerario?: SortOrder
    ID_cliente?: SortOrder
    ID_reserva?: SortOrder
  }

  export type PagosCountOrderByAggregateInput = {
    ID_pago?: SortOrder
    ID_cliente?: SortOrder
    ID_tipo_m?: SortOrder
    id_detalle_carrito?: SortOrder
    nombre_titular?: SortOrder
    numero_tarjeta?: SortOrder
    fecha_expiracion?: SortOrder
    cvv?: SortOrder
    direccion?: SortOrder
  }

  export type PagosAvgOrderByAggregateInput = {
    ID_pago?: SortOrder
    ID_cliente?: SortOrder
    ID_tipo_m?: SortOrder
    id_detalle_carrito?: SortOrder
    cvv?: SortOrder
  }

  export type PagosMaxOrderByAggregateInput = {
    ID_pago?: SortOrder
    ID_cliente?: SortOrder
    ID_tipo_m?: SortOrder
    id_detalle_carrito?: SortOrder
    nombre_titular?: SortOrder
    numero_tarjeta?: SortOrder
    fecha_expiracion?: SortOrder
    cvv?: SortOrder
    direccion?: SortOrder
  }

  export type PagosMinOrderByAggregateInput = {
    ID_pago?: SortOrder
    ID_cliente?: SortOrder
    ID_tipo_m?: SortOrder
    id_detalle_carrito?: SortOrder
    nombre_titular?: SortOrder
    numero_tarjeta?: SortOrder
    fecha_expiracion?: SortOrder
    cvv?: SortOrder
    direccion?: SortOrder
  }

  export type PagosSumOrderByAggregateInput = {
    ID_pago?: SortOrder
    ID_cliente?: SortOrder
    ID_tipo_m?: SortOrder
    id_detalle_carrito?: SortOrder
    cvv?: SortOrder
  }

  export type RecuperacionContrasenaCountOrderByAggregateInput = {
    ID_request?: SortOrder
    ID_cliente?: SortOrder
    ID_admin?: SortOrder
    Token?: SortOrder
    Fecha?: SortOrder
    Estado?: SortOrder
  }

  export type RecuperacionContrasenaAvgOrderByAggregateInput = {
    ID_request?: SortOrder
    ID_cliente?: SortOrder
    ID_admin?: SortOrder
  }

  export type RecuperacionContrasenaMaxOrderByAggregateInput = {
    ID_request?: SortOrder
    ID_cliente?: SortOrder
    ID_admin?: SortOrder
    Token?: SortOrder
    Fecha?: SortOrder
    Estado?: SortOrder
  }

  export type RecuperacionContrasenaMinOrderByAggregateInput = {
    ID_request?: SortOrder
    ID_cliente?: SortOrder
    ID_admin?: SortOrder
    Token?: SortOrder
    Fecha?: SortOrder
    Estado?: SortOrder
  }

  export type RecuperacionContrasenaSumOrderByAggregateInput = {
    ID_request?: SortOrder
    ID_cliente?: SortOrder
    ID_admin?: SortOrder
  }

  export type ReviewCountOrderByAggregateInput = {
    ID_review?: SortOrder
    ID_cliente?: SortOrder
    ID_tipo_s?: SortOrder
    ID_servicio?: SortOrder
    ID_destino?: SortOrder
    calificacion?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
    ID_admin?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    ID_review?: SortOrder
    ID_cliente?: SortOrder
    ID_tipo_s?: SortOrder
    ID_servicio?: SortOrder
    ID_destino?: SortOrder
    calificacion?: SortOrder
    ID_admin?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    ID_review?: SortOrder
    ID_cliente?: SortOrder
    ID_tipo_s?: SortOrder
    ID_servicio?: SortOrder
    ID_destino?: SortOrder
    calificacion?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
    ID_admin?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    ID_review?: SortOrder
    ID_cliente?: SortOrder
    ID_tipo_s?: SortOrder
    ID_servicio?: SortOrder
    ID_destino?: SortOrder
    calificacion?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
    ID_admin?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    ID_review?: SortOrder
    ID_cliente?: SortOrder
    ID_tipo_s?: SortOrder
    ID_servicio?: SortOrder
    ID_destino?: SortOrder
    calificacion?: SortOrder
    ID_admin?: SortOrder
  }

  export type ReservasCountOrderByAggregateInput = {
    ID_reserva?: SortOrder
    ID_cliente?: SortOrder
    ID_itinerario?: SortOrder
    ID_servicio?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    precio_total?: SortOrder
    ID_admin?: SortOrder
  }

  export type ReservasAvgOrderByAggregateInput = {
    ID_reserva?: SortOrder
    ID_cliente?: SortOrder
    ID_itinerario?: SortOrder
    ID_servicio?: SortOrder
    precio_total?: SortOrder
    ID_admin?: SortOrder
  }

  export type ReservasMaxOrderByAggregateInput = {
    ID_reserva?: SortOrder
    ID_cliente?: SortOrder
    ID_itinerario?: SortOrder
    ID_servicio?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    precio_total?: SortOrder
    ID_admin?: SortOrder
  }

  export type ReservasMinOrderByAggregateInput = {
    ID_reserva?: SortOrder
    ID_cliente?: SortOrder
    ID_itinerario?: SortOrder
    ID_servicio?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    precio_total?: SortOrder
    ID_admin?: SortOrder
  }

  export type ReservasSumOrderByAggregateInput = {
    ID_reserva?: SortOrder
    ID_cliente?: SortOrder
    ID_itinerario?: SortOrder
    ID_servicio?: SortOrder
    precio_total?: SortOrder
    ID_admin?: SortOrder
  }

  export type ServiciosCountOrderByAggregateInput = {
    ID_servicio?: SortOrder
    ID_tipo_s?: SortOrder
    nombre?: SortOrder
    destino?: SortOrder
    precio_diario?: SortOrder
    detalles?: SortOrder
    ID_admin?: SortOrder
  }

  export type ServiciosAvgOrderByAggregateInput = {
    ID_servicio?: SortOrder
    ID_tipo_s?: SortOrder
    precio_diario?: SortOrder
    ID_admin?: SortOrder
  }

  export type ServiciosMaxOrderByAggregateInput = {
    ID_servicio?: SortOrder
    ID_tipo_s?: SortOrder
    nombre?: SortOrder
    destino?: SortOrder
    precio_diario?: SortOrder
    detalles?: SortOrder
    ID_admin?: SortOrder
  }

  export type ServiciosMinOrderByAggregateInput = {
    ID_servicio?: SortOrder
    ID_tipo_s?: SortOrder
    nombre?: SortOrder
    destino?: SortOrder
    precio_diario?: SortOrder
    detalles?: SortOrder
    ID_admin?: SortOrder
  }

  export type ServiciosSumOrderByAggregateInput = {
    ID_servicio?: SortOrder
    ID_tipo_s?: SortOrder
    precio_diario?: SortOrder
    ID_admin?: SortOrder
  }

  export type Tipo_eventoCountOrderByAggregateInput = {
    ID_tipo_e?: SortOrder
    ID_destino?: SortOrder
    ID_servicio?: SortOrder
    ID_reserva?: SortOrder
  }

  export type Tipo_eventoAvgOrderByAggregateInput = {
    ID_tipo_e?: SortOrder
    ID_destino?: SortOrder
    ID_servicio?: SortOrder
    ID_reserva?: SortOrder
  }

  export type Tipo_eventoMaxOrderByAggregateInput = {
    ID_tipo_e?: SortOrder
    ID_destino?: SortOrder
    ID_servicio?: SortOrder
    ID_reserva?: SortOrder
  }

  export type Tipo_eventoMinOrderByAggregateInput = {
    ID_tipo_e?: SortOrder
    ID_destino?: SortOrder
    ID_servicio?: SortOrder
    ID_reserva?: SortOrder
  }

  export type Tipo_eventoSumOrderByAggregateInput = {
    ID_tipo_e?: SortOrder
    ID_destino?: SortOrder
    ID_servicio?: SortOrder
    ID_reserva?: SortOrder
  }

  export type Tipo_monedaCountOrderByAggregateInput = {
    ID_tipo_m?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    simbolo?: SortOrder
  }

  export type Tipo_monedaAvgOrderByAggregateInput = {
    ID_tipo_m?: SortOrder
  }

  export type Tipo_monedaMaxOrderByAggregateInput = {
    ID_tipo_m?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    simbolo?: SortOrder
  }

  export type Tipo_monedaMinOrderByAggregateInput = {
    ID_tipo_m?: SortOrder
    nombre?: SortOrder
    codigo?: SortOrder
    simbolo?: SortOrder
  }

  export type Tipo_monedaSumOrderByAggregateInput = {
    ID_tipo_m?: SortOrder
  }

  export type Tipo_servicioCountOrderByAggregateInput = {
    ID_tipo_s?: SortOrder
    Descripcion?: SortOrder
  }

  export type Tipo_servicioAvgOrderByAggregateInput = {
    ID_tipo_s?: SortOrder
  }

  export type Tipo_servicioMaxOrderByAggregateInput = {
    ID_tipo_s?: SortOrder
    Descripcion?: SortOrder
  }

  export type Tipo_servicioMinOrderByAggregateInput = {
    ID_tipo_s?: SortOrder
    Descripcion?: SortOrder
  }

  export type Tipo_servicioSumOrderByAggregateInput = {
    ID_tipo_s?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type DetalleCarritoCountOrderByAggregateInput = {
    id_detalle_carrito?: SortOrder
    item?: SortOrder
    cantidad?: SortOrder
    precio?: SortOrder
    id_cliente?: SortOrder
    subtotal?: SortOrder
  }

  export type DetalleCarritoAvgOrderByAggregateInput = {
    id_detalle_carrito?: SortOrder
    cantidad?: SortOrder
    precio?: SortOrder
    id_cliente?: SortOrder
    subtotal?: SortOrder
  }

  export type DetalleCarritoMaxOrderByAggregateInput = {
    id_detalle_carrito?: SortOrder
    item?: SortOrder
    cantidad?: SortOrder
    precio?: SortOrder
    id_cliente?: SortOrder
    subtotal?: SortOrder
  }

  export type DetalleCarritoMinOrderByAggregateInput = {
    id_detalle_carrito?: SortOrder
    item?: SortOrder
    cantidad?: SortOrder
    precio?: SortOrder
    id_cliente?: SortOrder
    subtotal?: SortOrder
  }

  export type DetalleCarritoSumOrderByAggregateInput = {
    id_detalle_carrito?: SortOrder
    cantidad?: SortOrder
    precio?: SortOrder
    id_cliente?: SortOrder
    subtotal?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type HistorialCompraCountOrderByAggregateInput = {
    id_historial_compra?: SortOrder
    id_cliente?: SortOrder
    fecha_compra?: SortOrder
    precio?: SortOrder
    subtotal?: SortOrder
    cantidad?: SortOrder
    items?: SortOrder
  }

  export type HistorialCompraAvgOrderByAggregateInput = {
    id_historial_compra?: SortOrder
    id_cliente?: SortOrder
    precio?: SortOrder
    subtotal?: SortOrder
    cantidad?: SortOrder
  }

  export type HistorialCompraMaxOrderByAggregateInput = {
    id_historial_compra?: SortOrder
    id_cliente?: SortOrder
    fecha_compra?: SortOrder
    precio?: SortOrder
    subtotal?: SortOrder
    cantidad?: SortOrder
    items?: SortOrder
  }

  export type HistorialCompraMinOrderByAggregateInput = {
    id_historial_compra?: SortOrder
    id_cliente?: SortOrder
    fecha_compra?: SortOrder
    precio?: SortOrder
    subtotal?: SortOrder
    cantidad?: SortOrder
    items?: SortOrder
  }

  export type HistorialCompraSumOrderByAggregateInput = {
    id_historial_compra?: SortOrder
    id_cliente?: SortOrder
    precio?: SortOrder
    subtotal?: SortOrder
    cantidad?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DestinosCreateNestedManyWithoutAdminInput = {
    create?: XOR<DestinosCreateWithoutAdminInput, DestinosUncheckedCreateWithoutAdminInput> | DestinosCreateWithoutAdminInput[] | DestinosUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: DestinosCreateOrConnectWithoutAdminInput | DestinosCreateOrConnectWithoutAdminInput[]
    createMany?: DestinosCreateManyAdminInputEnvelope
    connect?: DestinosWhereUniqueInput | DestinosWhereUniqueInput[]
  }

  export type DestinosUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<DestinosCreateWithoutAdminInput, DestinosUncheckedCreateWithoutAdminInput> | DestinosCreateWithoutAdminInput[] | DestinosUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: DestinosCreateOrConnectWithoutAdminInput | DestinosCreateOrConnectWithoutAdminInput[]
    createMany?: DestinosCreateManyAdminInputEnvelope
    connect?: DestinosWhereUniqueInput | DestinosWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableBytesFieldUpdateOperationsInput = {
    set?: Buffer | null
  }

  export type DestinosUpdateManyWithoutAdminNestedInput = {
    create?: XOR<DestinosCreateWithoutAdminInput, DestinosUncheckedCreateWithoutAdminInput> | DestinosCreateWithoutAdminInput[] | DestinosUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: DestinosCreateOrConnectWithoutAdminInput | DestinosCreateOrConnectWithoutAdminInput[]
    upsert?: DestinosUpsertWithWhereUniqueWithoutAdminInput | DestinosUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: DestinosCreateManyAdminInputEnvelope
    set?: DestinosWhereUniqueInput | DestinosWhereUniqueInput[]
    disconnect?: DestinosWhereUniqueInput | DestinosWhereUniqueInput[]
    delete?: DestinosWhereUniqueInput | DestinosWhereUniqueInput[]
    connect?: DestinosWhereUniqueInput | DestinosWhereUniqueInput[]
    update?: DestinosUpdateWithWhereUniqueWithoutAdminInput | DestinosUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: DestinosUpdateManyWithWhereWithoutAdminInput | DestinosUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: DestinosScalarWhereInput | DestinosScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DestinosUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<DestinosCreateWithoutAdminInput, DestinosUncheckedCreateWithoutAdminInput> | DestinosCreateWithoutAdminInput[] | DestinosUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: DestinosCreateOrConnectWithoutAdminInput | DestinosCreateOrConnectWithoutAdminInput[]
    upsert?: DestinosUpsertWithWhereUniqueWithoutAdminInput | DestinosUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: DestinosCreateManyAdminInputEnvelope
    set?: DestinosWhereUniqueInput | DestinosWhereUniqueInput[]
    disconnect?: DestinosWhereUniqueInput | DestinosWhereUniqueInput[]
    delete?: DestinosWhereUniqueInput | DestinosWhereUniqueInput[]
    connect?: DestinosWhereUniqueInput | DestinosWhereUniqueInput[]
    update?: DestinosUpdateWithWhereUniqueWithoutAdminInput | DestinosUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: DestinosUpdateManyWithWhereWithoutAdminInput | DestinosUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: DestinosScalarWhereInput | DestinosScalarWhereInput[]
  }

  export type IdiomasCreateNestedOneWithoutClienteInput = {
    create?: XOR<IdiomasCreateWithoutClienteInput, IdiomasUncheckedCreateWithoutClienteInput>
    connectOrCreate?: IdiomasCreateOrConnectWithoutClienteInput
    connect?: IdiomasWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IdiomasUpdateOneWithoutClienteNestedInput = {
    create?: XOR<IdiomasCreateWithoutClienteInput, IdiomasUncheckedCreateWithoutClienteInput>
    connectOrCreate?: IdiomasCreateOrConnectWithoutClienteInput
    upsert?: IdiomasUpsertWithoutClienteInput
    disconnect?: IdiomasWhereInput | boolean
    delete?: IdiomasWhereInput | boolean
    connect?: IdiomasWhereUniqueInput
    update?: XOR<XOR<IdiomasUpdateToOneWithWhereWithoutClienteInput, IdiomasUpdateWithoutClienteInput>, IdiomasUncheckedUpdateWithoutClienteInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AdminCreateNestedOneWithoutDestinosInput = {
    create?: XOR<AdminCreateWithoutDestinosInput, AdminUncheckedCreateWithoutDestinosInput>
    connectOrCreate?: AdminCreateOrConnectWithoutDestinosInput
    connect?: AdminWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AdminUpdateOneWithoutDestinosNestedInput = {
    create?: XOR<AdminCreateWithoutDestinosInput, AdminUncheckedCreateWithoutDestinosInput>
    connectOrCreate?: AdminCreateOrConnectWithoutDestinosInput
    upsert?: AdminUpsertWithoutDestinosInput
    disconnect?: AdminWhereInput | boolean
    delete?: AdminWhereInput | boolean
    connect?: AdminWhereUniqueInput
    update?: XOR<XOR<AdminUpdateToOneWithWhereWithoutDestinosInput, AdminUpdateWithoutDestinosInput>, AdminUncheckedUpdateWithoutDestinosInput>
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type ClienteCreateNestedManyWithoutIdiomaInput = {
    create?: XOR<ClienteCreateWithoutIdiomaInput, ClienteUncheckedCreateWithoutIdiomaInput> | ClienteCreateWithoutIdiomaInput[] | ClienteUncheckedCreateWithoutIdiomaInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutIdiomaInput | ClienteCreateOrConnectWithoutIdiomaInput[]
    createMany?: ClienteCreateManyIdiomaInputEnvelope
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type ClienteUncheckedCreateNestedManyWithoutIdiomaInput = {
    create?: XOR<ClienteCreateWithoutIdiomaInput, ClienteUncheckedCreateWithoutIdiomaInput> | ClienteCreateWithoutIdiomaInput[] | ClienteUncheckedCreateWithoutIdiomaInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutIdiomaInput | ClienteCreateOrConnectWithoutIdiomaInput[]
    createMany?: ClienteCreateManyIdiomaInputEnvelope
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
  }

  export type ClienteUpdateManyWithoutIdiomaNestedInput = {
    create?: XOR<ClienteCreateWithoutIdiomaInput, ClienteUncheckedCreateWithoutIdiomaInput> | ClienteCreateWithoutIdiomaInput[] | ClienteUncheckedCreateWithoutIdiomaInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutIdiomaInput | ClienteCreateOrConnectWithoutIdiomaInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutIdiomaInput | ClienteUpsertWithWhereUniqueWithoutIdiomaInput[]
    createMany?: ClienteCreateManyIdiomaInputEnvelope
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutIdiomaInput | ClienteUpdateWithWhereUniqueWithoutIdiomaInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutIdiomaInput | ClienteUpdateManyWithWhereWithoutIdiomaInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type ClienteUncheckedUpdateManyWithoutIdiomaNestedInput = {
    create?: XOR<ClienteCreateWithoutIdiomaInput, ClienteUncheckedCreateWithoutIdiomaInput> | ClienteCreateWithoutIdiomaInput[] | ClienteUncheckedCreateWithoutIdiomaInput[]
    connectOrCreate?: ClienteCreateOrConnectWithoutIdiomaInput | ClienteCreateOrConnectWithoutIdiomaInput[]
    upsert?: ClienteUpsertWithWhereUniqueWithoutIdiomaInput | ClienteUpsertWithWhereUniqueWithoutIdiomaInput[]
    createMany?: ClienteCreateManyIdiomaInputEnvelope
    set?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    disconnect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    delete?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    connect?: ClienteWhereUniqueInput | ClienteWhereUniqueInput[]
    update?: ClienteUpdateWithWhereUniqueWithoutIdiomaInput | ClienteUpdateWithWhereUniqueWithoutIdiomaInput[]
    updateMany?: ClienteUpdateManyWithWhereWithoutIdiomaInput | ClienteUpdateManyWithWhereWithoutIdiomaInput[]
    deleteMany?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DestinosCreateWithoutAdminInput = {
    nombre: string
    precio?: number | null
    ubicacion?: string | null
    categoria?: string | null
    actividades?: string | null
    cupos?: number | null
  }

  export type DestinosUncheckedCreateWithoutAdminInput = {
    ID_destino?: number
    nombre: string
    precio?: number | null
    ubicacion?: string | null
    categoria?: string | null
    actividades?: string | null
    cupos?: number | null
  }

  export type DestinosCreateOrConnectWithoutAdminInput = {
    where: DestinosWhereUniqueInput
    create: XOR<DestinosCreateWithoutAdminInput, DestinosUncheckedCreateWithoutAdminInput>
  }

  export type DestinosCreateManyAdminInputEnvelope = {
    data: DestinosCreateManyAdminInput | DestinosCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type DestinosUpsertWithWhereUniqueWithoutAdminInput = {
    where: DestinosWhereUniqueInput
    update: XOR<DestinosUpdateWithoutAdminInput, DestinosUncheckedUpdateWithoutAdminInput>
    create: XOR<DestinosCreateWithoutAdminInput, DestinosUncheckedCreateWithoutAdminInput>
  }

  export type DestinosUpdateWithWhereUniqueWithoutAdminInput = {
    where: DestinosWhereUniqueInput
    data: XOR<DestinosUpdateWithoutAdminInput, DestinosUncheckedUpdateWithoutAdminInput>
  }

  export type DestinosUpdateManyWithWhereWithoutAdminInput = {
    where: DestinosScalarWhereInput
    data: XOR<DestinosUpdateManyMutationInput, DestinosUncheckedUpdateManyWithoutAdminInput>
  }

  export type DestinosScalarWhereInput = {
    AND?: DestinosScalarWhereInput | DestinosScalarWhereInput[]
    OR?: DestinosScalarWhereInput[]
    NOT?: DestinosScalarWhereInput | DestinosScalarWhereInput[]
    ID_destino?: IntFilter<"Destinos"> | number
    nombre?: StringFilter<"Destinos"> | string
    precio?: FloatNullableFilter<"Destinos"> | number | null
    ubicacion?: StringNullableFilter<"Destinos"> | string | null
    categoria?: StringNullableFilter<"Destinos"> | string | null
    actividades?: StringNullableFilter<"Destinos"> | string | null
    cupos?: IntNullableFilter<"Destinos"> | number | null
    ID_admin?: IntNullableFilter<"Destinos"> | number | null
  }

  export type IdiomasCreateWithoutClienteInput = {
    nombre: string
    codigo: string
  }

  export type IdiomasUncheckedCreateWithoutClienteInput = {
    ID_idioma?: number
    nombre: string
    codigo: string
  }

  export type IdiomasCreateOrConnectWithoutClienteInput = {
    where: IdiomasWhereUniqueInput
    create: XOR<IdiomasCreateWithoutClienteInput, IdiomasUncheckedCreateWithoutClienteInput>
  }

  export type IdiomasUpsertWithoutClienteInput = {
    update: XOR<IdiomasUpdateWithoutClienteInput, IdiomasUncheckedUpdateWithoutClienteInput>
    create: XOR<IdiomasCreateWithoutClienteInput, IdiomasUncheckedCreateWithoutClienteInput>
    where?: IdiomasWhereInput
  }

  export type IdiomasUpdateToOneWithWhereWithoutClienteInput = {
    where?: IdiomasWhereInput
    data: XOR<IdiomasUpdateWithoutClienteInput, IdiomasUncheckedUpdateWithoutClienteInput>
  }

  export type IdiomasUpdateWithoutClienteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
  }

  export type IdiomasUncheckedUpdateWithoutClienteInput = {
    ID_idioma?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    codigo?: StringFieldUpdateOperationsInput | string
  }

  export type AdminCreateWithoutDestinosInput = {
    nombre: string
    correo: string
    contrasena: string
    imagen?: Buffer | null
  }

  export type AdminUncheckedCreateWithoutDestinosInput = {
    ID_admin?: number
    nombre: string
    correo: string
    contrasena: string
    imagen?: Buffer | null
  }

  export type AdminCreateOrConnectWithoutDestinosInput = {
    where: AdminWhereUniqueInput
    create: XOR<AdminCreateWithoutDestinosInput, AdminUncheckedCreateWithoutDestinosInput>
  }

  export type AdminUpsertWithoutDestinosInput = {
    update: XOR<AdminUpdateWithoutDestinosInput, AdminUncheckedUpdateWithoutDestinosInput>
    create: XOR<AdminCreateWithoutDestinosInput, AdminUncheckedCreateWithoutDestinosInput>
    where?: AdminWhereInput
  }

  export type AdminUpdateToOneWithWhereWithoutDestinosInput = {
    where?: AdminWhereInput
    data: XOR<AdminUpdateWithoutDestinosInput, AdminUncheckedUpdateWithoutDestinosInput>
  }

  export type AdminUpdateWithoutDestinosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type AdminUncheckedUpdateWithoutDestinosInput = {
    ID_admin?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type ClienteCreateWithoutIdiomaInput = {
    nombre: string
    telefono?: string | null
    correo: string
    contrasena: string
    ID_instagram?: string | null
    ID_Facebook?: string | null
    imagen?: Buffer | null
    Preferencias?: string | null
  }

  export type ClienteUncheckedCreateWithoutIdiomaInput = {
    ID_cliente?: number
    nombre: string
    telefono?: string | null
    correo: string
    contrasena: string
    ID_instagram?: string | null
    ID_Facebook?: string | null
    imagen?: Buffer | null
    Preferencias?: string | null
  }

  export type ClienteCreateOrConnectWithoutIdiomaInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutIdiomaInput, ClienteUncheckedCreateWithoutIdiomaInput>
  }

  export type ClienteCreateManyIdiomaInputEnvelope = {
    data: ClienteCreateManyIdiomaInput | ClienteCreateManyIdiomaInput[]
    skipDuplicates?: boolean
  }

  export type ClienteUpsertWithWhereUniqueWithoutIdiomaInput = {
    where: ClienteWhereUniqueInput
    update: XOR<ClienteUpdateWithoutIdiomaInput, ClienteUncheckedUpdateWithoutIdiomaInput>
    create: XOR<ClienteCreateWithoutIdiomaInput, ClienteUncheckedCreateWithoutIdiomaInput>
  }

  export type ClienteUpdateWithWhereUniqueWithoutIdiomaInput = {
    where: ClienteWhereUniqueInput
    data: XOR<ClienteUpdateWithoutIdiomaInput, ClienteUncheckedUpdateWithoutIdiomaInput>
  }

  export type ClienteUpdateManyWithWhereWithoutIdiomaInput = {
    where: ClienteScalarWhereInput
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyWithoutIdiomaInput>
  }

  export type ClienteScalarWhereInput = {
    AND?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
    OR?: ClienteScalarWhereInput[]
    NOT?: ClienteScalarWhereInput | ClienteScalarWhereInput[]
    ID_cliente?: IntFilter<"Cliente"> | number
    nombre?: StringFilter<"Cliente"> | string
    telefono?: StringNullableFilter<"Cliente"> | string | null
    correo?: StringFilter<"Cliente"> | string
    contrasena?: StringFilter<"Cliente"> | string
    ID_instagram?: StringNullableFilter<"Cliente"> | string | null
    ID_Facebook?: StringNullableFilter<"Cliente"> | string | null
    imagen?: BytesNullableFilter<"Cliente"> | Buffer | null
    Preferencias?: StringNullableFilter<"Cliente"> | string | null
    ID_idioma?: IntNullableFilter<"Cliente"> | number | null
  }

  export type DestinosCreateManyAdminInput = {
    ID_destino?: number
    nombre: string
    precio?: number | null
    ubicacion?: string | null
    categoria?: string | null
    actividades?: string | null
    cupos?: number | null
  }

  export type DestinosUpdateWithoutAdminInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: NullableFloatFieldUpdateOperationsInput | number | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    actividades?: NullableStringFieldUpdateOperationsInput | string | null
    cupos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DestinosUncheckedUpdateWithoutAdminInput = {
    ID_destino?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: NullableFloatFieldUpdateOperationsInput | number | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    actividades?: NullableStringFieldUpdateOperationsInput | string | null
    cupos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DestinosUncheckedUpdateManyWithoutAdminInput = {
    ID_destino?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: NullableFloatFieldUpdateOperationsInput | number | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    actividades?: NullableStringFieldUpdateOperationsInput | string | null
    cupos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ClienteCreateManyIdiomaInput = {
    ID_cliente?: number
    nombre: string
    telefono?: string | null
    correo: string
    contrasena: string
    ID_instagram?: string | null
    ID_Facebook?: string | null
    imagen?: Buffer | null
    Preferencias?: string | null
  }

  export type ClienteUpdateWithoutIdiomaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    ID_instagram?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Facebook?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    Preferencias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClienteUncheckedUpdateWithoutIdiomaInput = {
    ID_cliente?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    ID_instagram?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Facebook?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    Preferencias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClienteUncheckedUpdateManyWithoutIdiomaInput = {
    ID_cliente?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    ID_instagram?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Facebook?: NullableStringFieldUpdateOperationsInput | string | null
    imagen?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    Preferencias?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use AdminCountOutputTypeDefaultArgs instead
     */
    export type AdminCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AdminCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use IdiomasCountOutputTypeDefaultArgs instead
     */
    export type IdiomasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = IdiomasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AdminDefaultArgs instead
     */
    export type AdminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AdminDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClienteDefaultArgs instead
     */
    export type ClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClienteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DestinosDefaultArgs instead
     */
    export type DestinosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DestinosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EventosDefaultArgs instead
     */
    export type EventosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EventosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use IdiomasDefaultArgs instead
     */
    export type IdiomasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = IdiomasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ItinerarioDefaultArgs instead
     */
    export type ItinerarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ItinerarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PagosDefaultArgs instead
     */
    export type PagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PagosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RecuperacionContrasenaDefaultArgs instead
     */
    export type RecuperacionContrasenaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RecuperacionContrasenaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReviewDefaultArgs instead
     */
    export type ReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReviewDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReservasDefaultArgs instead
     */
    export type ReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReservasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ServiciosDefaultArgs instead
     */
    export type ServiciosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ServiciosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tipo_eventoDefaultArgs instead
     */
    export type Tipo_eventoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tipo_eventoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tipo_monedaDefaultArgs instead
     */
    export type Tipo_monedaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tipo_monedaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tipo_servicioDefaultArgs instead
     */
    export type Tipo_servicioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tipo_servicioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DetalleCarritoDefaultArgs instead
     */
    export type DetalleCarritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DetalleCarritoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HistorialCompraDefaultArgs instead
     */
    export type HistorialCompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HistorialCompraDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}